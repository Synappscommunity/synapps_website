/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: vqCYb2b7hLWP5fdSvXKe7g
// Component: 3jCrQ0KfPvDq
import * as React from "react";
import Head from "next/head";
import { useRouter } from "next/router";
import {
  PlasmicImg as PlasmicImg__,
  Stack as Stack__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  hasVariant,
  initializeCodeComponentStates,
  set as $stateSet,
  useDollarState
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv
} from "@plasmicapp/react-web/lib/host";
import Button from "../../Button"; // plasmic-import: qDkIQgIGzzHX/component
import HeaderButton from "../../HeaderButton"; // plasmic-import: poRsrDl7MvPt/component
import { AntdMenu } from "@plasmicpkgs/antd5/skinny/registerMenu";
import { AntdMenuItem } from "@plasmicpkgs/antd5/skinny/registerMenu";
import Section from "../../Section"; // plasmic-import: l2-ucxw7CvPM/component
import FaqTab from "../../FaqTab"; // plasmic-import: QR_t6FoGThXW/component
import { AntdAccordion } from "@plasmicpkgs/antd5/skinny/registerCollapse";
import { accordionHelpers as AntdAccordion_Helpers } from "@plasmicpkgs/antd5/skinny/registerCollapse";
import { AntdAccordionItem } from "@plasmicpkgs/antd5/skinny/registerCollapse";
import TextInput from "../../TextInput"; // plasmic-import: H5mAYWyWYBfw/component
import FooterSection from "../../FooterSection"; // plasmic-import: 9AUvb_VWiKJR/component
import { Embed } from "@plasmicpkgs/plasmic-basic-components";
import { AntdModal } from "@plasmicpkgs/antd5/skinny/registerModal";
import { DataFetcher } from "@plasmicpkgs/plasmic-query";
import { useScreenVariants as useScreenVariantsunNaIs43VvNf } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: UNNaIS43VvNF/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css";
import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import projectcss from "./plasmic.module.css"; // plasmic-import: vqCYb2b7hLWP5fdSvXKe7g/projectcss
import sty from "./PlasmicHomepage.module.css"; // plasmic-import: 3jCrQ0KfPvDq/css
import CheckSvgIcon from "./icons/PlasmicIcon__CheckSvg"; // plasmic-import: WNXItNZeyPBz/icon
import Icon38Icon from "./icons/PlasmicIcon__Icon38"; // plasmic-import: X6yfQQfulV5Q/icon
import HamburgerIcon from "./icons/PlasmicIcon__Hamburger"; // plasmic-import: L3-2b3legiGN/icon
import Icons8CloseSvgIcon from "./icons/PlasmicIcon__Icons8CloseSvg"; // plasmic-import: 1NVXGA7OHLvh/icon
import Icons8CloseWindow50SvgIcon from "./icons/PlasmicIcon__Icons8CloseWindow50Svg"; // plasmic-import: ovHmcodcZzAz/icon
import SearchSvg2Icon from "./icons/PlasmicIcon__SearchSvg2"; // plasmic-import: hRUfnTSeGnlb/icon

createPlasmicElementProxy;

export const PlasmicHomepage__VariantProps = new Array();

export const PlasmicHomepage__ArgProps = new Array();

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicHomepage__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );
  const $props = {
    ...args,
    ...variants
  };
  const __nextRouter = useNextRouter();
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;
  const stateSpecs = React.useMemo(
    () => [
      {
        path: "textInput.value",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => ""
      },
      {
        path: "faqنصبوراهاندازي.activePanelId",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined,
        onMutate: generateOnMutateForSpec(
          "activePanelId",
          AntdAccordion_Helpers
        )
      },
      {
        path: "_1نصبوراهاندازي.selected",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) =>
          (() => {
            try {
              return $state.faqSelectedTab === "نصب و راه اندازي";
            } catch (e) {
              if (
                e instanceof TypeError ||
                e?.plasmicType === "PlasmicUndefinedDataError"
              ) {
                return [];
              }
              throw e;
            }
          })()
      },
      {
        path: "_2امنیتنرمافزار.selected",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) =>
          (() => {
            try {
              return $state.faqSelectedTab === "امنیت نرم افزار";
            } catch (e) {
              if (
                e instanceof TypeError ||
                e?.plasmicType === "PlasmicUndefinedDataError"
              ) {
                return [];
              }
              throw e;
            }
          })()
      },
      {
        path: "_3مجوزهاوتاييديهها.selected",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) =>
          (() => {
            try {
              return $state.faqSelectedTab === "مجوزها و تاييديه‌ها";
            } catch (e) {
              if (
                e instanceof TypeError ||
                e?.plasmicType === "PlasmicUndefinedDataError"
              ) {
                return [];
              }
              throw e;
            }
          })()
      },
      {
        path: "_4پشتيباني.selected",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) =>
          (() => {
            try {
              return $state.faqSelectedTab === "پشتيباني";
            } catch (e) {
              if (
                e instanceof TypeError ||
                e?.plasmicType === "PlasmicUndefinedDataError"
              ) {
                return [];
              }
              throw e;
            }
          })()
      },
      {
        path: "faqSelectedTab",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) =>
          "\u0646\u0635\u0628 \u0648 \u0631\u0627\u0647 \u0627\u0646\u062f\u0627\u0632\u064a"
      },
      {
        path: "mainMenu",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => false
      },
      {
        path: "modalInlabLogin.open",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) =>
          hasVariant(globalVariants, "screen", "mobile") ? false : false
      },
      {
        path: "searchbarWard2.value",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => ""
      },
      {
        path: "faqامنیتنرمافزار.activePanelId",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined,
        onMutate: generateOnMutateForSpec(
          "activePanelId",
          AntdAccordion_Helpers
        )
      },
      {
        path: "_3پرداختوهزینه.selected",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) =>
          (() => {
            try {
              return $state.faqSelectedTab === "پرداخت و هزینه";
            } catch (e) {
              if (
                e instanceof TypeError ||
                e?.plasmicType === "PlasmicUndefinedDataError"
              ) {
                return [];
              }
              throw e;
            }
          })()
      },
      {
        path: "faqپرداختوهزینه.activePanelId",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined,
        onMutate: generateOnMutateForSpec(
          "activePanelId",
          AntdAccordion_Helpers
        )
      }
    ],

    [$props, $ctx, $refs]
  );
  const $state = useDollarState(stateSpecs, {
    $props,
    $ctx,
    $queries: {},
    $refs
  });
  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsunNaIs43VvNf()
  });
  return (
    <React.Fragment>
      <Head>
        <meta name="twitter:card" content="summary_large_image" />
        <title key="title">{PlasmicHomepage.pageMetadata.title}</title>
        <meta
          key="og:title"
          property="og:title"
          content={PlasmicHomepage.pageMetadata.title}
        />

        <meta
          key="twitter:title"
          name="twitter:title"
          content={PlasmicHomepage.pageMetadata.title}
        />

        <meta
          key="description"
          name="description"
          content={PlasmicHomepage.pageMetadata.description}
        />

        <meta
          key="og:description"
          property="og:description"
          content={PlasmicHomepage.pageMetadata.description}
        />

        <meta
          key="twitter:description"
          name="twitter:description"
          content={PlasmicHomepage.pageMetadata.description}
        />

        <meta
          key="og:image"
          property="og:image"
          content={PlasmicHomepage.pageMetadata.ogImageSrc}
        />

        <meta
          key="twitter:image"
          name="twitter:image"
          content={PlasmicHomepage.pageMetadata.ogImageSrc}
        />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"pageContent"}
          data-plasmic-override={overrides.pageContent}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            plasmic_antd_5_hostless_css.plasmic_tokens,
            sty.pageContent
          )}
        >
          <Stack__
            as={"div"}
            data-plasmic-name={"header"}
            data-plasmic-override={overrides.header}
            hasGap={true}
            className={classNames(projectcss.all, sty.header)}
          >
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox___7Tuf)}
            >
              <PlasmicImg__
                alt={""}
                className={classNames(sty.img__aIcf7)}
                displayHeight={"2em"}
                displayMaxHeight={"none"}
                displayMaxWidth={"none"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={"8em"}
                loading={"lazy"}
                onClick={async event => {
                  const $steps = {};
                  $steps["runCode"] = true
                    ? (() => {
                        const actionArgs = {
                          customFunction: async () => {
                            return (() => {
                              const element =
                                document.getElementById("section1_header");
                              if (element)
                                return element.scrollIntoView({
                                  behavior: "smooth"
                                });
                            })();
                          }
                        };
                        return (({ customFunction }) => {
                          return customFunction();
                        })?.apply(null, [actionArgs]);
                      })()
                    : undefined;
                  if (
                    $steps["runCode"] != null &&
                    typeof $steps["runCode"] === "object" &&
                    typeof $steps["runCode"].then === "function"
                  ) {
                    $steps["runCode"] = await $steps["runCode"];
                  }
                }}
                src={{
                  src: "/plasmic/syn_apps_website/images/logoSynappsTransparentPng.png",
                  fullWidth: 1464,
                  fullHeight: 376,
                  aspectRatio: undefined
                }}
              />

              {(
                hasVariant(globalVariants, "screen", "mobile") ? false : true
              ) ? (
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__fqEbd)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__cxrBv
                    )}
                    onClick={async event => {
                      const $steps = {};
                      $steps[
                        "goToHttpsDocsGoogleComDocumentD1Wk4LJdBc4B1CqrEmzb4UBfoaVzaeGqbo4MgSkj8Y2SwEditTabT0"
                      ] = true
                        ? (() => {
                            const actionArgs = {
                              destination:
                                "https://docs.google.com/document/d/1Wk4LJdBc4b1cqrEmzb4uBFOAVzaeGQBO4MgSKJ8Y2sw/edit?tab=t.0"
                            };
                            return (({ destination }) => {
                              if (
                                typeof destination === "string" &&
                                destination.startsWith("#")
                              ) {
                                document
                                  .getElementById(destination.substr(1))
                                  .scrollIntoView({ behavior: "smooth" });
                              } else {
                                __nextRouter?.push(destination);
                              }
                            })?.apply(null, [actionArgs]);
                          })()
                        : undefined;
                      if (
                        $steps[
                          "goToHttpsDocsGoogleComDocumentD1Wk4LJdBc4B1CqrEmzb4UBfoaVzaeGqbo4MgSkj8Y2SwEditTabT0"
                        ] != null &&
                        typeof $steps[
                          "goToHttpsDocsGoogleComDocumentD1Wk4LJdBc4B1CqrEmzb4UBfoaVzaeGqbo4MgSkj8Y2SwEditTabT0"
                        ] === "object" &&
                        typeof $steps[
                          "goToHttpsDocsGoogleComDocumentD1Wk4LJdBc4B1CqrEmzb4UBfoaVzaeGqbo4MgSkj8Y2SwEditTabT0"
                        ].then === "function"
                      ) {
                        $steps[
                          "goToHttpsDocsGoogleComDocumentD1Wk4LJdBc4B1CqrEmzb4UBfoaVzaeGqbo4MgSkj8Y2SwEditTabT0"
                        ] = await $steps[
                          "goToHttpsDocsGoogleComDocumentD1Wk4LJdBc4B1CqrEmzb4UBfoaVzaeGqbo4MgSkj8Y2SwEditTabT0"
                        ];
                      }
                    }}
                  >
                    {
                      "\u062f\u0631\u0628\u0627\u0631\u0647 \u0633\u06cc\u0646\u0627\u067e\u0633"
                    }
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__kK2P
                    )}
                    onClick={async event => {
                      const $steps = {};
                      $steps["runCode"] = true
                        ? (() => {
                            const actionArgs = {
                              customFunction: async () => {
                                return (() => {
                                  const element =
                                    document.getElementById("سوالات شايع");
                                  if (element)
                                    return element.scrollIntoView({
                                      behavior: "smooth"
                                    });
                                })();
                              }
                            };
                            return (({ customFunction }) => {
                              return customFunction();
                            })?.apply(null, [actionArgs]);
                          })()
                        : undefined;
                      if (
                        $steps["runCode"] != null &&
                        typeof $steps["runCode"] === "object" &&
                        typeof $steps["runCode"].then === "function"
                      ) {
                        $steps["runCode"] = await $steps["runCode"];
                      }
                    }}
                  >
                    {
                      "\u0633\u0648\u0627\u0644\u0627\u062a \u0634\u0627\u064a\u0639"
                    }
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___5W5CO
                    )}
                    onClick={async event => {
                      const $steps = {};
                      $steps["runCode"] = true
                        ? (() => {
                            const actionArgs = {
                              customFunction: async () => {
                                return (() => {
                                  const element =
                                    document.getElementById("قيمت گذاري");
                                  if (element)
                                    return element.scrollIntoView({
                                      behavior: "smooth"
                                    });
                                })();
                              }
                            };
                            return (({ customFunction }) => {
                              return customFunction();
                            })?.apply(null, [actionArgs]);
                          })()
                        : undefined;
                      if (
                        $steps["runCode"] != null &&
                        typeof $steps["runCode"] === "object" &&
                        typeof $steps["runCode"].then === "function"
                      ) {
                        $steps["runCode"] = await $steps["runCode"];
                      }
                    }}
                  >
                    {"\u0642\u064a\u0645\u062a \u06af\u0630\u0627\u0631\u064a"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__kXlIf
                    )}
                    onClick={async event => {
                      const $steps = {};
                      $steps["runCode"] = true
                        ? (() => {
                            const actionArgs = {
                              customFunction: async () => {
                                return (() => {
                                  const element =
                                    document.getElementById("ديوار عشق");
                                  if (element)
                                    return element.scrollIntoView({
                                      behavior: "smooth"
                                    });
                                })();
                              }
                            };
                            return (({ customFunction }) => {
                              return customFunction();
                            })?.apply(null, [actionArgs]);
                          })()
                        : undefined;
                      if (
                        $steps["runCode"] != null &&
                        typeof $steps["runCode"] === "object" &&
                        typeof $steps["runCode"].then === "function"
                      ) {
                        $steps["runCode"] = await $steps["runCode"];
                      }
                    }}
                  >
                    {"\u062f\u064a\u0648\u0627\u0631 \u0639\u0634\u0642"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__cvQeQ
                    )}
                    onClick={async event => {
                      const $steps = {};
                      $steps["goToAdminConsole"] = true
                        ? (() => {
                            const actionArgs = {
                              destination: `/admin-console`
                            };
                            return (({ destination }) => {
                              if (
                                typeof destination === "string" &&
                                destination.startsWith("#")
                              ) {
                                document
                                  .getElementById(destination.substr(1))
                                  .scrollIntoView({ behavior: "smooth" });
                              } else {
                                __nextRouter?.push(destination);
                              }
                            })?.apply(null, [actionArgs]);
                          })()
                        : undefined;
                      if (
                        $steps["goToAdminConsole"] != null &&
                        typeof $steps["goToAdminConsole"] === "object" &&
                        typeof $steps["goToAdminConsole"].then === "function"
                      ) {
                        $steps["goToAdminConsole"] = await $steps[
                          "goToAdminConsole"
                        ];
                      }
                    }}
                  >
                    {"\u0648\u0631\u0648\u062f \u0627\u062f\u0645\u06cc\u0646"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__r9BU1
                    )}
                    onClick={async event => {
                      const $steps = {};
                      $steps["updateModalInlabLoginOpen"] = true
                        ? (() => {
                            const actionArgs = {
                              variable: {
                                objRoot: $state,
                                variablePath: ["modalInlabLogin", "open"]
                              },
                              operation: 0,
                              value: true
                            };
                            return (({
                              variable,
                              value,
                              startIndex,
                              deleteCount
                            }) => {
                              if (!variable) {
                                return;
                              }
                              const { objRoot, variablePath } = variable;
                              $stateSet(objRoot, variablePath, value);
                              return value;
                            })?.apply(null, [actionArgs]);
                          })()
                        : undefined;
                      if (
                        $steps["updateModalInlabLoginOpen"] != null &&
                        typeof $steps["updateModalInlabLoginOpen"] ===
                          "object" &&
                        typeof $steps["updateModalInlabLoginOpen"].then ===
                          "function"
                      ) {
                        $steps["updateModalInlabLoginOpen"] = await $steps[
                          "updateModalInlabLoginOpen"
                        ];
                      }
                    }}
                  >
                    {
                      "\u0648\u0631\u0648\u062f \u06a9\u0627\u0631\u0628\u0631\u0627\u0646"
                    }
                  </div>
                  <Button
                    data-plasmic-name={
                      "\u062a\u0633\u062a\u06a9\u0646\u064a\u062fDemo"
                    }
                    data-plasmic-override={overrides.تستکنيدDemo}
                    className={classNames("__wab_instance", sty.تستکنيدDemo)}
                    color={"blueBorder"}
                    link={
                      "https://docs.google.com/forms/d/e/1FAIpQLSeu0cmLx9Vi16cV3WvJcys-8ctYElF3vQUGy1QVcbWhuaIHOA/viewform?usp=sf_link"
                    }
                    startIcon={
                      <svg
                        className={classNames(projectcss.all, sty.svg__nbLm)}
                        role={"img"}
                      />
                    }
                    submitsForm={false}
                    target={true}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__tBfzM
                      )}
                      dir={"rtl"}
                    >
                      <React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ fontWeight: 600 }}
                        >
                          {"\u062a\u0633\u062a \u06a9\u0646\u064a\u062f (Demo)"}
                        </span>
                      </React.Fragment>
                    </div>
                  </Button>
                </Stack__>
              ) : null}
              {false ? (
                <div className={classNames(projectcss.all, sty.freeBox__zbVym)}>
                  <button
                    className={classNames(
                      projectcss.all,
                      projectcss.button,
                      projectcss.__wab_text,
                      sty.button__nWje3
                    )}
                  >
                    {"Sign up"}
                  </button>
                  <HeaderButton
                    data-plasmic-name={"headerButton"}
                    data-plasmic-override={overrides.headerButton}
                    className={classNames("__wab_instance", sty.headerButton)}
                    color={"clear"}
                    endIcon={
                      <Icon38Icon
                        className={classNames(projectcss.all, sty.svg__qylAy)}
                        role={"img"}
                      />
                    }
                    startIcon={
                      <CheckSvgIcon
                        className={classNames(projectcss.all, sty.svg__kRkW)}
                        role={"img"}
                      />
                    }
                    submitsForm={true}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__bAifG
                      )}
                    >
                      {"Log in"}
                    </div>
                  </HeaderButton>
                </div>
              ) : null}
              <div
                data-plasmic-name={"menuTitle"}
                data-plasmic-override={overrides.menuTitle}
                className={classNames(projectcss.all, sty.menuTitle)}
                onClick={async event => {
                  const $steps = {};
                  $steps["updateMainMenu"] = true
                    ? (() => {
                        const actionArgs = {
                          variable: {
                            objRoot: $state,
                            variablePath: ["mainMenu"]
                          },
                          operation: 0,
                          value: true
                        };
                        return (({
                          variable,
                          value,
                          startIndex,
                          deleteCount
                        }) => {
                          if (!variable) {
                            return;
                          }
                          const { objRoot, variablePath } = variable;
                          $stateSet(objRoot, variablePath, value);
                          return value;
                        })?.apply(null, [actionArgs]);
                      })()
                    : undefined;
                  if (
                    $steps["updateMainMenu"] != null &&
                    typeof $steps["updateMainMenu"] === "object" &&
                    typeof $steps["updateMainMenu"].then === "function"
                  ) {
                    $steps["updateMainMenu"] = await $steps["updateMainMenu"];
                  }
                }}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___0Ipv
                  )}
                >
                  {"\u0645\u0646\u0648"}
                </div>
                <HamburgerIcon
                  className={classNames(projectcss.all, sty.svg__ioV26)}
                  role={"img"}
                />
              </div>
            </Stack__>
            {(
              hasVariant(globalVariants, "screen", "mobile")
                ? (() => {
                    try {
                      return $state.mainMenu;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return false;
                      }
                      throw e;
                    }
                  })()
                : true
            ) ? (
              <Stack__
                as={"div"}
                data-plasmic-name={"mobileMenu"}
                data-plasmic-override={overrides.mobileMenu}
                hasGap={true}
                className={classNames(projectcss.all, sty.mobileMenu)}
              >
                <Icons8CloseSvgIcon
                  className={classNames(projectcss.all, sty.svg__ns2Su)}
                  onClick={async event => {
                    const $steps = {};
                    $steps["updateMainMenu"] = true
                      ? (() => {
                          const actionArgs = {
                            variable: {
                              objRoot: $state,
                              variablePath: ["mainMenu"]
                            },
                            operation: 0,
                            value: false
                          };
                          return (({
                            variable,
                            value,
                            startIndex,
                            deleteCount
                          }) => {
                            if (!variable) {
                              return;
                            }
                            const { objRoot, variablePath } = variable;
                            $stateSet(objRoot, variablePath, value);
                            return value;
                          })?.apply(null, [actionArgs]);
                        })()
                      : undefined;
                    if (
                      $steps["updateMainMenu"] != null &&
                      typeof $steps["updateMainMenu"] === "object" &&
                      typeof $steps["updateMainMenu"].then === "function"
                    ) {
                      $steps["updateMainMenu"] = await $steps["updateMainMenu"];
                    }
                  }}
                  role={"img"}
                />

                <AntdMenu
                  data-plasmic-name={"menu"}
                  data-plasmic-override={overrides.menu}
                  className={classNames("__wab_instance", sty.menu)}
                  expandIcon={
                    <Icons8CloseWindow50SvgIcon
                      className={classNames(projectcss.all, sty.svg__z6KlG)}
                      role={"img"}
                    />
                  }
                >
                  <AntdMenuItem
                    data-plasmic-name={
                      "\u062a\u0633\u062a\u06a9\u0646\u064a\u062fDemo3"
                    }
                    data-plasmic-override={overrides.تستکنيدDemo3}
                    className={classNames("__wab_instance", sty.تستکنيدDemo3)}
                    danger={false}
                    key={"menuItemKey1"}
                    onClick={async () => {
                      const $steps = {};
                      $steps["updateMainMenu"] = true
                        ? (() => {
                            const actionArgs = {
                              variable: {
                                objRoot: $state,
                                variablePath: ["mainMenu"]
                              },
                              operation: 0,
                              value: false
                            };
                            return (({
                              variable,
                              value,
                              startIndex,
                              deleteCount
                            }) => {
                              if (!variable) {
                                return;
                              }
                              const { objRoot, variablePath } = variable;
                              $stateSet(objRoot, variablePath, value);
                              return value;
                            })?.apply(null, [actionArgs]);
                          })()
                        : undefined;
                      if (
                        $steps["updateMainMenu"] != null &&
                        typeof $steps["updateMainMenu"] === "object" &&
                        typeof $steps["updateMainMenu"].then === "function"
                      ) {
                        $steps["updateMainMenu"] = await $steps[
                          "updateMainMenu"
                        ];
                      }
                    }}
                  >
                    <Button
                      data-plasmic-name={
                        "\u062a\u0633\u062a\u06a9\u0646\u064a\u062fDemo2"
                      }
                      data-plasmic-override={overrides.تستکنيدDemo2}
                      className={classNames("__wab_instance", sty.تستکنيدDemo2)}
                      color={"blueBorder"}
                      link={
                        "https://docs.google.com/forms/d/e/1FAIpQLSeu0cmLx9Vi16cV3WvJcys-8ctYElF3vQUGy1QVcbWhuaIHOA/viewform?usp=sf_link"
                      }
                      startIcon={
                        <svg
                          className={classNames(projectcss.all, sty.svg__wnrmn)}
                          role={"img"}
                        />
                      }
                      submitsForm={false}
                      target={true}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__idWcd
                        )}
                        dir={"rtl"}
                      >
                        <React.Fragment>
                          <span
                            className={
                              "plasmic_default__all plasmic_default__span"
                            }
                            style={{ fontWeight: 600 }}
                          >
                            {
                              "\u062a\u0633\u062a \u06a9\u0646\u064a\u062f (Demo)"
                            }
                          </span>
                        </React.Fragment>
                      </div>
                    </Button>
                  </AntdMenuItem>
                  <AntdMenuItem
                    data-plasmic-name={
                      "\u0648\u0631\u0648\u062f\u06a9\u0627\u0631\u0628\u0631\u0627\u0646"
                    }
                    data-plasmic-override={overrides.ورودکاربران}
                    className={classNames("__wab_instance", sty.ورودکاربران)}
                    key={"menuItemKey1"}
                    onClick={async () => {
                      const $steps = {};
                      $steps["updateMainMenu"] = true
                        ? (() => {
                            const actionArgs = {
                              variable: {
                                objRoot: $state,
                                variablePath: ["mainMenu"]
                              },
                              operation: 0,
                              value: false
                            };
                            return (({
                              variable,
                              value,
                              startIndex,
                              deleteCount
                            }) => {
                              if (!variable) {
                                return;
                              }
                              const { objRoot, variablePath } = variable;
                              $stateSet(objRoot, variablePath, value);
                              return value;
                            })?.apply(null, [actionArgs]);
                          })()
                        : undefined;
                      if (
                        $steps["updateMainMenu"] != null &&
                        typeof $steps["updateMainMenu"] === "object" &&
                        typeof $steps["updateMainMenu"].then === "function"
                      ) {
                        $steps["updateMainMenu"] = await $steps[
                          "updateMainMenu"
                        ];
                      }
                      $steps["updateModalInlabLoginOpen"] = true
                        ? (() => {
                            const actionArgs = {
                              variable: {
                                objRoot: $state,
                                variablePath: ["modalInlabLogin", "open"]
                              },
                              operation: 0,
                              value: true
                            };
                            return (({
                              variable,
                              value,
                              startIndex,
                              deleteCount
                            }) => {
                              if (!variable) {
                                return;
                              }
                              const { objRoot, variablePath } = variable;
                              $stateSet(objRoot, variablePath, value);
                              return value;
                            })?.apply(null, [actionArgs]);
                          })()
                        : undefined;
                      if (
                        $steps["updateModalInlabLoginOpen"] != null &&
                        typeof $steps["updateModalInlabLoginOpen"] ===
                          "object" &&
                        typeof $steps["updateModalInlabLoginOpen"].then ===
                          "function"
                      ) {
                        $steps["updateModalInlabLoginOpen"] = await $steps[
                          "updateModalInlabLoginOpen"
                        ];
                      }
                    }}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__hj8X3
                      )}
                    >
                      {
                        "\u0648\u0631\u0648\u062f \u06a9\u0627\u0631\u0628\u0631\u0627\u0646"
                      }
                    </div>
                  </AntdMenuItem>
                  <AntdMenuItem
                    data-plasmic-name={
                      "\u062f\u064a\u0648\u0627\u0631\u0639\u0634\u0642"
                    }
                    data-plasmic-override={overrides.ديوارعشق}
                    className={classNames("__wab_instance", sty.ديوارعشق)}
                    key={"menuItemKey1"}
                    onClick={async () => {
                      const $steps = {};
                      $steps["updateMainMenu"] = true
                        ? (() => {
                            const actionArgs = {
                              variable: {
                                objRoot: $state,
                                variablePath: ["mainMenu"]
                              },
                              operation: 0,
                              value: false
                            };
                            return (({
                              variable,
                              value,
                              startIndex,
                              deleteCount
                            }) => {
                              if (!variable) {
                                return;
                              }
                              const { objRoot, variablePath } = variable;
                              $stateSet(objRoot, variablePath, value);
                              return value;
                            })?.apply(null, [actionArgs]);
                          })()
                        : undefined;
                      if (
                        $steps["updateMainMenu"] != null &&
                        typeof $steps["updateMainMenu"] === "object" &&
                        typeof $steps["updateMainMenu"].then === "function"
                      ) {
                        $steps["updateMainMenu"] = await $steps[
                          "updateMainMenu"
                        ];
                      }
                      $steps["runCode"] = true
                        ? (() => {
                            const actionArgs = {
                              customFunction: async () => {
                                return (() => {
                                  const element =
                                    document.getElementById("ديوار عشق");
                                  if (element)
                                    return element.scrollIntoView({
                                      behavior: "smooth"
                                    });
                                })();
                              }
                            };
                            return (({ customFunction }) => {
                              return customFunction();
                            })?.apply(null, [actionArgs]);
                          })()
                        : undefined;
                      if (
                        $steps["runCode"] != null &&
                        typeof $steps["runCode"] === "object" &&
                        typeof $steps["runCode"].then === "function"
                      ) {
                        $steps["runCode"] = await $steps["runCode"];
                      }
                    }}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__bou2L
                      )}
                    >
                      {"\u062f\u064a\u0648\u0627\u0631 \u0639\u0634\u0642"}
                    </div>
                  </AntdMenuItem>
                  <AntdMenuItem
                    data-plasmic-name={
                      "\u0642\u064a\u0645\u062a\u06af\u0630\u0627\u0631\u064a"
                    }
                    data-plasmic-override={overrides.قيمتگذاري}
                    className={classNames("__wab_instance", sty.قيمتگذاري)}
                    key={"menuItemKey1"}
                    onClick={async () => {
                      const $steps = {};
                      $steps["updateMainMenu"] = true
                        ? (() => {
                            const actionArgs = {
                              variable: {
                                objRoot: $state,
                                variablePath: ["mainMenu"]
                              },
                              operation: 0,
                              value: false
                            };
                            return (({
                              variable,
                              value,
                              startIndex,
                              deleteCount
                            }) => {
                              if (!variable) {
                                return;
                              }
                              const { objRoot, variablePath } = variable;
                              $stateSet(objRoot, variablePath, value);
                              return value;
                            })?.apply(null, [actionArgs]);
                          })()
                        : undefined;
                      if (
                        $steps["updateMainMenu"] != null &&
                        typeof $steps["updateMainMenu"] === "object" &&
                        typeof $steps["updateMainMenu"].then === "function"
                      ) {
                        $steps["updateMainMenu"] = await $steps[
                          "updateMainMenu"
                        ];
                      }
                      $steps["runCode"] = true
                        ? (() => {
                            const actionArgs = {
                              customFunction: async () => {
                                return (() => {
                                  const element =
                                    document.getElementById("قيمت گذاري");
                                  if (element)
                                    return element.scrollIntoView({
                                      behavior: "smooth"
                                    });
                                })();
                              }
                            };
                            return (({ customFunction }) => {
                              return customFunction();
                            })?.apply(null, [actionArgs]);
                          })()
                        : undefined;
                      if (
                        $steps["runCode"] != null &&
                        typeof $steps["runCode"] === "object" &&
                        typeof $steps["runCode"].then === "function"
                      ) {
                        $steps["runCode"] = await $steps["runCode"];
                      }
                    }}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__r8DT6
                      )}
                    >
                      {
                        "\u0642\u064a\u0645\u062a \u06af\u0630\u0627\u0631\u064a"
                      }
                    </div>
                  </AntdMenuItem>
                  <AntdMenuItem
                    data-plasmic-name={
                      "\u0633\u0648\u0627\u0644\u0627\u062a\u0634\u0627\u064a\u0639"
                    }
                    data-plasmic-override={overrides.سوالاتشايع}
                    className={classNames("__wab_instance", sty.سوالاتشايع)}
                    key={"menuItemKey1"}
                    onClick={async () => {
                      const $steps = {};
                      $steps["updateMainMenu"] = true
                        ? (() => {
                            const actionArgs = {
                              variable: {
                                objRoot: $state,
                                variablePath: ["mainMenu"]
                              },
                              operation: 0,
                              value: false
                            };
                            return (({
                              variable,
                              value,
                              startIndex,
                              deleteCount
                            }) => {
                              if (!variable) {
                                return;
                              }
                              const { objRoot, variablePath } = variable;
                              $stateSet(objRoot, variablePath, value);
                              return value;
                            })?.apply(null, [actionArgs]);
                          })()
                        : undefined;
                      if (
                        $steps["updateMainMenu"] != null &&
                        typeof $steps["updateMainMenu"] === "object" &&
                        typeof $steps["updateMainMenu"].then === "function"
                      ) {
                        $steps["updateMainMenu"] = await $steps[
                          "updateMainMenu"
                        ];
                      }
                      $steps["runCode"] = true
                        ? (() => {
                            const actionArgs = {
                              customFunction: async () => {
                                return (() => {
                                  const element =
                                    document.getElementById("سوالات شايع");
                                  if (element)
                                    return element.scrollIntoView({
                                      behavior: "smooth"
                                    });
                                })();
                              }
                            };
                            return (({ customFunction }) => {
                              return customFunction();
                            })?.apply(null, [actionArgs]);
                          })()
                        : undefined;
                      if (
                        $steps["runCode"] != null &&
                        typeof $steps["runCode"] === "object" &&
                        typeof $steps["runCode"].then === "function"
                      ) {
                        $steps["runCode"] = await $steps["runCode"];
                      }
                    }}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__m5X4A
                      )}
                    >
                      {
                        "\u0633\u0648\u0627\u0644\u0627\u062a \u0634\u0627\u064a\u0639"
                      }
                    </div>
                  </AntdMenuItem>
                  <AntdMenuItem
                    data-plasmic-name={
                      "\u062f\u0631\u0628\u0627\u0631\u0647\u0633\u06cc\u0646\u0627\u067e\u0633"
                    }
                    data-plasmic-override={overrides.دربارهسیناپس}
                    className={classNames("__wab_instance", sty.دربارهسیناپس)}
                    key={"menuItemKey1"}
                    onClick={async () => {
                      const $steps = {};
                      $steps["updateMainMenu"] = true
                        ? (() => {
                            const actionArgs = {
                              variable: {
                                objRoot: $state,
                                variablePath: ["mainMenu"]
                              },
                              operation: 0,
                              value: false
                            };
                            return (({
                              variable,
                              value,
                              startIndex,
                              deleteCount
                            }) => {
                              if (!variable) {
                                return;
                              }
                              const { objRoot, variablePath } = variable;
                              $stateSet(objRoot, variablePath, value);
                              return value;
                            })?.apply(null, [actionArgs]);
                          })()
                        : undefined;
                      if (
                        $steps["updateMainMenu"] != null &&
                        typeof $steps["updateMainMenu"] === "object" &&
                        typeof $steps["updateMainMenu"].then === "function"
                      ) {
                        $steps["updateMainMenu"] = await $steps[
                          "updateMainMenu"
                        ];
                      }
                      $steps[
                        "goToHttpsDocsGoogleComDocumentD1Wk4LJdBc4B1CqrEmzb4UBfoaVzaeGqbo4MgSkj8Y2SwEditTabT0"
                      ] = true
                        ? (() => {
                            const actionArgs = {
                              destination:
                                "https://docs.google.com/document/d/1Wk4LJdBc4b1cqrEmzb4uBFOAVzaeGQBO4MgSKJ8Y2sw/edit?tab=t.0"
                            };
                            return (({ destination }) => {
                              if (
                                typeof destination === "string" &&
                                destination.startsWith("#")
                              ) {
                                document
                                  .getElementById(destination.substr(1))
                                  .scrollIntoView({ behavior: "smooth" });
                              } else {
                                __nextRouter?.push(destination);
                              }
                            })?.apply(null, [actionArgs]);
                          })()
                        : undefined;
                      if (
                        $steps[
                          "goToHttpsDocsGoogleComDocumentD1Wk4LJdBc4B1CqrEmzb4UBfoaVzaeGqbo4MgSkj8Y2SwEditTabT0"
                        ] != null &&
                        typeof $steps[
                          "goToHttpsDocsGoogleComDocumentD1Wk4LJdBc4B1CqrEmzb4UBfoaVzaeGqbo4MgSkj8Y2SwEditTabT0"
                        ] === "object" &&
                        typeof $steps[
                          "goToHttpsDocsGoogleComDocumentD1Wk4LJdBc4B1CqrEmzb4UBfoaVzaeGqbo4MgSkj8Y2SwEditTabT0"
                        ].then === "function"
                      ) {
                        $steps[
                          "goToHttpsDocsGoogleComDocumentD1Wk4LJdBc4B1CqrEmzb4UBfoaVzaeGqbo4MgSkj8Y2SwEditTabT0"
                        ] = await $steps[
                          "goToHttpsDocsGoogleComDocumentD1Wk4LJdBc4B1CqrEmzb4UBfoaVzaeGqbo4MgSkj8Y2SwEditTabT0"
                        ];
                      }
                    }}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__oM8Vf
                      )}
                    >
                      {
                        "\u062f\u0631\u0628\u0627\u0631\u0647 \u0633\u06cc\u0646\u0627\u067e\u0633"
                      }
                    </div>
                  </AntdMenuItem>
                </AntdMenu>
              </Stack__>
            ) : null}
          </Stack__>
          <div
            data-plasmic-name={"section1Header"}
            data-plasmic-override={overrides.section1Header}
            Id={"section1_header"}
            className={classNames(projectcss.all, sty.section1Header)}
          >
            <div
              data-plasmic-name={"content"}
              data-plasmic-override={overrides.content}
              className={classNames(projectcss.all, sty.content)}
            >
              <div className={classNames(projectcss.all, sty.freeBox__hzUAb)}>
                <h1
                  className={classNames(
                    projectcss.all,
                    projectcss.h1,
                    projectcss.__wab_text,
                    sty.h1__l57AO
                  )}
                >
                  <React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ color: "var(--token-rw7HICykK2u6)" }}
                    >
                      {"\u0647\u0645\u06cc\u0634\u0647"}
                    </span>
                    <React.Fragment>{""}</React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ color: "#000000" }}
                    >
                      {" \u0648 "}
                    </span>
                    <React.Fragment>{""}</React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ color: "var(--token-S50wu3UrPBgg)" }}
                    >
                      {"\u0647\u0645\u0647\u200c\u062c\u0627"}
                    </span>
                    <React.Fragment>{"\n"}</React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ color: "#000000" }}
                    >
                      {
                        " \u0627\u0637\u0644\u0627\u0639\u0627\u062a \u0628\u064a\u0645\u0627\u0631\u062a\u0627\u0646 \u062f\u0631 \u0645\u0648\u0628\u0627\u06cc\u0644 \u0634\u0645\u0627"
                      }
                    </span>
                  </React.Fragment>
                </h1>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__koCa1
                  )}
                >
                  {hasVariant(globalVariants, "screen", "mobile") ? (
                    <React.Fragment>
                      <React.Fragment>
                        {
                          "\u062f\u06cc\u062f\u0646 \u0627\u0637\u0644\u0627\u0639\u0627\u062a \u0628\u06cc\u0645\u0627\u0631 "
                        }
                      </React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ fontWeight: 700 }}
                      >
                        {"\u0628\u0633\u062a\u0631\u06cc"}
                      </span>
                      <React.Fragment>
                        {"\n\u0628\u0631\u0627\u06cc "}
                      </React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ fontWeight: 700 }}
                      >
                        {
                          "\u067e\u0632\u0634\u06a9\u0627\u0646 \u0648 \u067e\u0631\u0633\u062a\u0627\u0631\u0627\u0646"
                        }
                      </span>
                      <React.Fragment>
                        {
                          " \n\u0633\u062e\u062a \u0648 \u0632\u0645\u0627\u0646\u200c\u0628\u0631 \u0627\u0633\u062a"
                        }
                      </React.Fragment>
                    </React.Fragment>
                  ) : (
                    <React.Fragment>
                      <React.Fragment>
                        {
                          "\u062f\u06cc\u062f\u0646 \u0627\u0637\u0644\u0627\u0639\u0627\u062a \u0628\u06cc\u0645\u0627\u0631 "
                        }
                      </React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ fontWeight: 700 }}
                      >
                        {"\u0628\u0633\u062a\u0631\u06cc"}
                      </span>
                      <React.Fragment>
                        {" \u0628\u0631\u0627\u06cc "}
                      </React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ fontWeight: 700 }}
                      >
                        {
                          "\u067e\u0632\u0634\u06a9\u0627\u0646 \u0648 \u067e\u0631\u0633\u062a\u0627\u0631\u0627\u0646"
                        }
                      </span>
                      <React.Fragment>
                        {
                          " \u0633\u062e\u062a \u0648 \u0632\u0645\u0627\u0646\u200c\u0628\u0631 \u0627\u0633\u062a"
                        }
                      </React.Fragment>
                    </React.Fragment>
                  )}
                </div>
                <Stack__
                  as={"div"}
                  data-plasmic-name={"actionButton"}
                  data-plasmic-override={overrides.actionButton}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.actionButton)}
                >
                  {(
                    hasVariant(globalVariants, "screen", "mobile")
                      ? false
                      : true
                  ) ? (
                    <Button
                      className={classNames("__wab_instance", sty.button__z4BN)}
                      color={"blueBorder"}
                      link={"#"}
                      submitsForm={true}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___6OXg5
                        )}
                      >
                        {hasVariant(globalVariants, "screen", "mobile")
                          ? "Learn More"
                          : "Learn More"}
                      </div>
                    </Button>
                  ) : null}
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__xyXap)}
                  >
                    <Button
                      data-plasmic-name={
                        "\u062f\u0631\u062e\u0648\u0627\u0633\u062a\u0631\u0627\u0647\u0627\u0646\u062f\u0627\u0632\u06cc2"
                      }
                      data-plasmic-override={overrides.درخواستراهاندازی2}
                      className={classNames(
                        "__wab_instance",
                        sty.درخواستراهاندازی2
                      )}
                      color={"blue"}
                      link={
                        "https://docs.google.com/forms/d/e/1FAIpQLSeu0cmLx9Vi16cV3WvJcys-8ctYElF3vQUGy1QVcbWhuaIHOA/viewform?usp=sf_link"
                      }
                      startIcon={
                        <svg
                          className={classNames(projectcss.all, sty.svg__tuNxk)}
                          role={"img"}
                        />
                      }
                      submitsForm={false}
                      target={true}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__hVqZe
                        )}
                        dir={"rtl"}
                      >
                        <React.Fragment>
                          <span
                            className={
                              "plasmic_default__all plasmic_default__span"
                            }
                            style={{ fontWeight: 600 }}
                          >
                            {
                              "\u062a\u0633\u062a \u06a9\u0646\u064a\u062f (Demo)"
                            }
                          </span>
                        </React.Fragment>
                      </div>
                    </Button>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__mFfMy
                      )}
                      dir={"rtl"}
                    >
                      <React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ fontWeight: 600 }}
                        >
                          {
                            "\u0647\u0645\u064a\u0646 \u062d\u0627\u0644\u0627 \u0648 \u0631\u0627\u064a\u06af\u0627\u0646"
                          }
                        </span>
                      </React.Fragment>
                    </div>
                  </Stack__>
                </Stack__>
              </div>
            </div>
          </div>
          <Section
            data-plasmic-name={"section2Gifs"}
            data-plasmic-override={overrides.section2Gifs}
            className={classNames("__wab_instance", sty.section2Gifs)}
            size={
              hasVariant(globalVariants, "screen", "mobile")
                ? "fullContentWidth"
                : "fullContentWidth"
            }
          >
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__yUaDs)}
            >
              <Stack__
                as={"div"}
                data-plasmic-name={"gifLab"}
                data-plasmic-override={overrides.gifLab}
                hasGap={true}
                className={classNames(projectcss.all, sty.gifLab)}
              >
                {(
                  hasVariant(globalVariants, "screen", "mobile") ? true : false
                ) ? (
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"actionButtons6"}
                    data-plasmic-override={overrides.actionButtons6}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.actionButtons6)}
                  >
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(
                        projectcss.all,
                        sty.freeBox___9A6EG
                      )}
                    >
                      <Button
                        data-plasmic-name={
                          "\u062f\u0631\u062e\u0648\u0627\u0633\u062a\u0631\u0627\u0647\u0627\u0646\u062f\u0627\u0632\u06cc8"
                        }
                        data-plasmic-override={overrides.درخواستراهاندازی8}
                        className={classNames(
                          "__wab_instance",
                          sty.درخواستراهاندازی8
                        )}
                        color={"blue"}
                        link={
                          "https://docs.google.com/forms/d/e/1FAIpQLSeu0cmLx9Vi16cV3WvJcys-8ctYElF3vQUGy1QVcbWhuaIHOA/viewform?usp=sf_link"
                        }
                        startIcon={
                          <svg
                            className={classNames(
                              projectcss.all,
                              sty.svg__fSsC
                            )}
                            role={"img"}
                          />
                        }
                        submitsForm={false}
                        target={true}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__xTKsT
                          )}
                          dir={"rtl"}
                        >
                          <React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{ fontWeight: 600 }}
                            >
                              {
                                "\u062a\u0633\u062a \u06a9\u0646\u064a\u062f (Demo)"
                              }
                            </span>
                          </React.Fragment>
                        </div>
                      </Button>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___2CufE
                        )}
                        dir={"rtl"}
                      >
                        <React.Fragment>
                          <span
                            className={
                              "plasmic_default__all plasmic_default__span"
                            }
                            style={{ fontWeight: 600 }}
                          >
                            {
                              "\u0647\u0645\u064a\u0646 \u062d\u0627\u0644\u0627 \u0648 \u0631\u0627\u064a\u06af\u0627\u0646"
                            }
                          </span>
                        </React.Fragment>
                      </div>
                    </Stack__>
                  </Stack__>
                ) : null}
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img___5Fr8K)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={
                    hasVariant(globalVariants, "screen", "mobile")
                      ? "50%"
                      : "30%"
                  }
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/syn_apps_website/images/finalLab2Edited2Gif.gif",
                    fullWidth: 400,
                    fullHeight: 706,
                    aspectRatio: undefined
                  }}
                />

                <div
                  data-plasmic-name={"textBoxes"}
                  data-plasmic-override={overrides.textBoxes}
                  className={classNames(projectcss.all, sty.textBoxes)}
                >
                  <div
                    data-plasmic-name={"title"}
                    data-plasmic-override={overrides.title}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.title
                    )}
                    dir={"rtl"}
                  >
                    {hasVariant(globalVariants, "screen", "mobile")
                      ? "\u062f\u0631 \u06a9\u0645\u062a\u0631 \u0627\u0632 10 \u062b\u0627\u0646\u064a\u0647\n\u0622\u0632\u0645\u0627\u064a\u0634 \u0628\u064a\u0645\u0627\u0631\u062a\u0627\u0646 \u0631\u0627 \u0628\u0628\u064a\u0646\u064a\u062f"
                      : "\u062f\u0631 \u06a9\u0645\u062a\u0631 \u0627\u0632 10 \u062b\u0627\u0646\u064a\u0647\u060c \u0622\u0632\u0645\u0627\u064a\u0634 \u0628\u064a\u0645\u0627\u0631\u062a\u0627\u0646 \u0631\u0627 \u0628\u0628\u064a\u0646\u064a\u062f"}
                  </div>
                  <div
                    data-plasmic-name={"description"}
                    data-plasmic-override={overrides.description}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.description
                    )}
                    dir={"rtl"}
                  >
                    <React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ color: "#000000" }}
                      >
                        {"\u274c \u062a\u0644\u0641\u0646 \u0632\u062f\u0646"}
                      </span>
                      <React.Fragment>{"\n"}</React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ color: "#000000" }}
                      >
                        {"\u274c \u0648\u0627\u062a\u0633 \u0627\u067e"}
                      </span>
                      <React.Fragment>{"\n"}</React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ color: "#000000" }}
                      >
                        {"\u274c \u062a\u0644\u06af\u0631\u0627\u0645"}
                      </span>
                      <React.Fragment>{"\n"}</React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ color: "#000000" }}
                      >
                        {
                          "\u274c \u0648\u0631\u0642 \u0632\u062f\u0646 \u06a9\u0627\u063a\u0630"
                        }
                      </span>
                    </React.Fragment>
                  </div>
                  {(
                    hasVariant(globalVariants, "screen", "mobile")
                      ? false
                      : true
                  ) ? (
                    <Stack__
                      as={"div"}
                      data-plasmic-name={"actionButtons4"}
                      data-plasmic-override={overrides.actionButtons4}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.actionButtons4)}
                    >
                      <Stack__
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox___6R27O
                        )}
                      >
                        <Button
                          data-plasmic-name={
                            "\u062f\u0631\u062e\u0648\u0627\u0633\u062a\u0631\u0627\u0647\u0627\u0646\u062f\u0627\u0632\u06cc6"
                          }
                          data-plasmic-override={overrides.درخواستراهاندازی6}
                          className={classNames(
                            "__wab_instance",
                            sty.درخواستراهاندازی6
                          )}
                          color={"blue"}
                          link={
                            "https://docs.google.com/forms/d/e/1FAIpQLSeu0cmLx9Vi16cV3WvJcys-8ctYElF3vQUGy1QVcbWhuaIHOA/viewform?usp=sf_link"
                          }
                          startIcon={
                            <svg
                              className={classNames(
                                projectcss.all,
                                sty.svg___54FDl
                              )}
                              role={"img"}
                            />
                          }
                          submitsForm={false}
                          target={true}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__xpbOi
                            )}
                            dir={"rtl"}
                          >
                            <React.Fragment>
                              <span
                                className={
                                  "plasmic_default__all plasmic_default__span"
                                }
                                style={{ fontWeight: 600 }}
                              >
                                {
                                  "\u062a\u0633\u062a \u06a9\u0646\u064a\u062f (Demo)"
                                }
                              </span>
                            </React.Fragment>
                          </div>
                        </Button>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__nftTc
                          )}
                          dir={"rtl"}
                        >
                          <React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{ fontWeight: 600 }}
                            >
                              {
                                "\u0647\u0645\u064a\u0646 \u062d\u0627\u0644\u0627 \u0648 \u0631\u0627\u064a\u06af\u0627\u0646"
                              }
                            </span>
                          </React.Fragment>
                        </div>
                      </Stack__>
                    </Stack__>
                  ) : null}
                </div>
              </Stack__>
              <Stack__
                as={"div"}
                data-plasmic-name={"gifRadio"}
                data-plasmic-override={overrides.gifRadio}
                hasGap={true}
                className={classNames(projectcss.all, sty.gifRadio)}
              >
                <div
                  data-plasmic-name={"textBoxes2"}
                  data-plasmic-override={overrides.textBoxes2}
                  className={classNames(projectcss.all, sty.textBoxes2)}
                >
                  <div
                    data-plasmic-name={"title2"}
                    data-plasmic-override={overrides.title2}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.title2
                    )}
                    dir={"rtl"}
                  >
                    {hasVariant(globalVariants, "screen", "mobile")
                      ? "\u062f\u0631 \u06a9\u0645\u062a\u0631 \u0627\u0632 10 \u062b\u0627\u0646\u064a\u0647\n\u0631\u0627\u062f\u064a\u0648\u0644\u0648\u0698\u06cc \u0628\u064a\u0645\u0627\u0631\u062a\u0627\u0646 \u0631\u0627 \u0628\u0628\u064a\u0646\u064a\u062f"
                      : "\u062f\u0631 \u06a9\u0645\u062a\u0631 \u0627\u0632 10 \u062b\u0627\u0646\u064a\u0647\u060c \u0631\u0627\u062f\u064a\u0648\u0644\u0648\u0698\u06cc \u0628\u064a\u0645\u0627\u0631\u062a\u0627\u0646 \u0631\u0627 \u0628\u0628\u064a\u0646\u064a\u062f"}
                  </div>
                  <div
                    data-plasmic-name={"description2"}
                    data-plasmic-override={overrides.description2}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.description2
                    )}
                    dir={"rtl"}
                  >
                    <React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ color: "#000000" }}
                      >
                        {"\u274c \u062a\u0644\u0641\u0646 \u0632\u062f\u0646"}
                      </span>
                      <React.Fragment>{"\n"}</React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ color: "#000000" }}
                      >
                        {"\u274c \u0648\u0627\u062a\u0633 \u0627\u067e"}
                      </span>
                      <React.Fragment>{"\n"}</React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ color: "#000000" }}
                      >
                        {"\u274c \u062a\u0644\u06af\u0631\u0627\u0645"}
                      </span>
                    </React.Fragment>
                  </div>
                  {(
                    hasVariant(globalVariants, "screen", "mobile")
                      ? false
                      : true
                  ) ? (
                    <Stack__
                      as={"div"}
                      data-plasmic-name={"actionButtons"}
                      data-plasmic-override={overrides.actionButtons}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.actionButtons)}
                    >
                      <Stack__
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__m3E12
                        )}
                      >
                        <Button
                          data-plasmic-name={
                            "\u062f\u0631\u062e\u0648\u0627\u0633\u062a\u0631\u0627\u0647\u0627\u0646\u062f\u0627\u0632\u06cc3"
                          }
                          data-plasmic-override={overrides.درخواستراهاندازی3}
                          className={classNames(
                            "__wab_instance",
                            sty.درخواستراهاندازی3
                          )}
                          color={"blue"}
                          link={
                            "https://docs.google.com/forms/d/e/1FAIpQLSeu0cmLx9Vi16cV3WvJcys-8ctYElF3vQUGy1QVcbWhuaIHOA/viewform?usp=sf_link"
                          }
                          startIcon={
                            <svg
                              className={classNames(
                                projectcss.all,
                                sty.svg__ynFfM
                              )}
                              role={"img"}
                            />
                          }
                          submitsForm={false}
                          target={true}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__vixF4
                            )}
                            dir={"rtl"}
                          >
                            <React.Fragment>
                              <span
                                className={
                                  "plasmic_default__all plasmic_default__span"
                                }
                                style={{ fontWeight: 600 }}
                              >
                                {
                                  "\u062a\u0633\u062a \u06a9\u0646\u064a\u062f (Demo)"
                                }
                              </span>
                            </React.Fragment>
                          </div>
                        </Button>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__ybUAy
                          )}
                          dir={"rtl"}
                        >
                          <React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{ fontWeight: 600 }}
                            >
                              {
                                "\u0647\u0645\u064a\u0646 \u062d\u0627\u0644\u0627 \u0648 \u0631\u0627\u064a\u06af\u0627\u0646"
                              }
                            </span>
                          </React.Fragment>
                        </div>
                      </Stack__>
                    </Stack__>
                  ) : null}
                </div>
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__dVaCh)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={
                    hasVariant(globalVariants, "screen", "mobile")
                      ? "50%"
                      : "30%"
                  }
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/syn_apps_website/images/finalRadio2Edited3Gif.gif",
                    fullWidth: 400,
                    fullHeight: 706,
                    aspectRatio: undefined
                  }}
                />

                {(
                  hasVariant(globalVariants, "screen", "mobile") ? true : false
                ) ? (
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"actionButtons5"}
                    data-plasmic-override={overrides.actionButtons5}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.actionButtons5)}
                  >
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__vDthy)}
                    >
                      <Button
                        data-plasmic-name={
                          "\u062f\u0631\u062e\u0648\u0627\u0633\u062a\u0631\u0627\u0647\u0627\u0646\u062f\u0627\u0632\u06cc7"
                        }
                        data-plasmic-override={overrides.درخواستراهاندازی7}
                        className={classNames(
                          "__wab_instance",
                          sty.درخواستراهاندازی7
                        )}
                        color={"blue"}
                        link={
                          "https://docs.google.com/forms/d/e/1FAIpQLSeu0cmLx9Vi16cV3WvJcys-8ctYElF3vQUGy1QVcbWhuaIHOA/viewform?usp=sf_link"
                        }
                        startIcon={
                          <svg
                            className={classNames(
                              projectcss.all,
                              sty.svg__hru9C
                            )}
                            role={"img"}
                          />
                        }
                        submitsForm={false}
                        target={true}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___9FwLo
                          )}
                          dir={"rtl"}
                        >
                          <React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{ fontWeight: 600 }}
                            >
                              {
                                "\u062a\u0633\u062a \u06a9\u0646\u064a\u062f (Demo)"
                              }
                            </span>
                          </React.Fragment>
                        </div>
                      </Button>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__pqbWs
                        )}
                        dir={"rtl"}
                      >
                        <React.Fragment>
                          <span
                            className={
                              "plasmic_default__all plasmic_default__span"
                            }
                            style={{ fontWeight: 600 }}
                          >
                            {
                              "\u0647\u0645\u064a\u0646 \u062d\u0627\u0644\u0627 \u0648 \u0631\u0627\u064a\u06af\u0627\u0646"
                            }
                          </span>
                        </React.Fragment>
                      </div>
                    </Stack__>
                  </Stack__>
                ) : null}
              </Stack__>
            </Stack__>
          </Section>
          <Section
            data-plasmic-name={"section3Userbase"}
            data-plasmic-override={overrides.section3Userbase}
            className={classNames("__wab_instance", sty.section3Userbase)}
            size={
              hasVariant(globalVariants, "screen", "mobile")
                ? "fullContentWidth"
                : "fullContentWidth"
            }
          >
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__hebP)}
            >
              <h2
                className={classNames(
                  projectcss.all,
                  projectcss.h2,
                  projectcss.__wab_text,
                  sty.h2__uVuRh
                )}
              >
                {
                  "\u0645\u0648\u0631\u062f \u0627\u0639\u062a\u0645\u0627\u062f \u06a9\u0627\u0631\u0628\u0631\u0627\u0646 \u062f\u0631"
                }
              </h2>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__tDwYg
                )}
                dir={"rtl"}
              >
                {
                  "\u0627\u06cc\u0646\u0644\u0628 \u0645\u0648\u0631\u062f \u0627\u0639\u062a\u0645\u0627\u062f \u06a9\u0627\u0631\u0628\u0631\u0627\u0646 \u062f\u0631 \u0631\u062f\u0647 \u0647\u0627 \u0648 \u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u0647\u0627\u06cc \u0645\u062e\u062a\u0644\u0641 \u0628\u0631\u0627\u06cc \u0635\u0631\u0641\u0647 \u062c\u0648\u06cc\u06cc \u062f\u0631 \u0632\u0645\u0627\u0646 \u0648 \u0627\u0646\u0631\u0698\u06cc \u0634\u0627\u0646 \u0645\u06cc \u0628\u0627\u0634\u062f."
                }
              </div>
              <div
                data-plasmic-name={"statistics"}
                data-plasmic-override={overrides.statistics}
                className={classNames(projectcss.all, sty.statistics)}
              >
                <div
                  className={classNames(projectcss.all, sty.columns___5MqqU)}
                >
                  <div
                    className={classNames(projectcss.all, sty.column__q13V3)}
                  >
                    <h3
                      className={classNames(
                        projectcss.all,
                        projectcss.h3,
                        projectcss.__wab_text,
                        sty.h3__jrgIb
                      )}
                    >
                      {"15"}
                    </h3>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__a1Hmi
                      )}
                    >
                      {
                        "\u0628\u064a\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u0641\u0639\u0627\u0644"
                      }
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.column__vrWDq)}
                  >
                    <h3
                      className={classNames(
                        projectcss.all,
                        projectcss.h3,
                        projectcss.__wab_text,
                        sty.h3__b4M7
                      )}
                    >
                      {"+9500"}
                    </h3>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__zvDf
                      )}
                    >
                      {"\u067e\u0632\u0634\u06a9"}
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.column__wya0Y)}
                  >
                    <h3
                      className={classNames(
                        projectcss.all,
                        projectcss.h3,
                        projectcss.__wab_text,
                        sty.h3__dvghZ
                      )}
                    >
                      {"+900,000"}
                    </h3>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__tpFq3
                      )}
                    >
                      {"\u0628\u064a\u0645\u0627\u0631"}
                    </div>
                  </div>
                </div>
              </div>
              {false ? (
                <div className={classNames(projectcss.all, sty.freeBox__uCtfY)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__jkBkw
                    )}
                  >
                    {
                      "Our design partners include the world\u2019s leading product-led companies"
                    }
                  </div>
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox___4Nwpf)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img___1Eyme)}
                      displayHeight={"50px"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"233px"}
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/syn_apps_website/images/companies1Png.png",
                        fullWidth: 466,
                        fullHeight: 100,
                        aspectRatio: undefined
                      }}
                    />

                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__mSe5V)}
                      displayHeight={"50px"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"189px"}
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/syn_apps_website/images/companies2Png.png",
                        fullWidth: 378,
                        fullHeight: 100,
                        aspectRatio: undefined
                      }}
                    />

                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__ha8Zo)}
                      displayHeight={"50px"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"194px"}
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/syn_apps_website/images/companies3Png.png",
                        fullWidth: 388,
                        fullHeight: 100,
                        aspectRatio: undefined
                      }}
                    />

                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__ar4K)}
                      displayHeight={"50px"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"189px"}
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/syn_apps_website/images/companies4Png.png",
                        fullWidth: 378,
                        fullHeight: 100,
                        aspectRatio: undefined
                      }}
                    />
                  </Stack__>
                </div>
              ) : null}
              <div
                data-plasmic-name={"customersStack"}
                data-plasmic-override={overrides.customersStack}
                className={classNames(projectcss.all, sty.customersStack)}
              >
                <Stack__
                  as={"div"}
                  data-plasmic-name={"customersList"}
                  data-plasmic-override={overrides.customersList}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.customersList)}
                >
                  <Stack__
                    as={"div"}
                    data-plasmic-name={
                      "\u0645\u0631\u06a9\u0632\u0637\u0628\u06cc\u06a9\u0648\u062f\u06a9\u0627\u0646"
                    }
                    data-plasmic-override={overrides.مرکزطبیکودکان}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.مرکزطبیکودکان)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__xiFn5
                      )}
                    >
                      {
                        "\u0628\u064a\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u0645\u0631\u06a9\u0632 \u0637\u0628\u06cc \u06a9\u0648\u062f\u06a9\u0627\u0646"
                      }
                    </div>
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__f4OH7)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__ekbOi
                        )}
                      >
                        {
                          "\u062f\u0648\u0644\u062a\u06cc - \u0634\u0647\u0631 \u062a\u0647\u0631\u0627\u0646"
                        }
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__eAj3S
                        )}
                      >
                        {
                          "\u0627\u0632 \u0633\u0627\u0644 \u06f1\u06f3\u06f9\u06f8"
                        }
                      </div>
                    </Stack__>
                  </Stack__>
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"\u0633\u06cc\u0646\u0627"}
                    data-plasmic-override={overrides.سینا}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.سینا)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__zqsPv
                      )}
                    >
                      {
                        "\u0628\u064a\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u0633\u064a\u0646\u0627"
                      }
                    </div>
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__o9D4Q)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__vyU3X
                        )}
                      >
                        {
                          "\u062f\u0648\u0644\u062a\u06cc - \u0634\u0647\u0631 \u062a\u0647\u0631\u0627\u0646"
                        }
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__cfZzt
                        )}
                      >
                        {
                          "\u0627\u0632 \u0633\u0627\u0644 \u06f1\u06f3\u06f9\u06f9"
                        }
                      </div>
                    </Stack__>
                  </Stack__>
                  <Stack__
                    as={"div"}
                    data-plasmic-name={
                      "\u0627\u0645\u0627\u0645\u062e\u0645\u06cc\u0646\u06cc"
                    }
                    data-plasmic-override={overrides.امامخمینی}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.امامخمینی)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__sx7Mt
                      )}
                    >
                      {
                        "\u0628\u064a\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u0627\u0645\u0627\u0645 \u062e\u0645\u064a\u0646\u06cc (\u0631\u0647)"
                      }
                    </div>
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__mwI4J)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__xNlz1
                        )}
                      >
                        {
                          "\u062f\u0648\u0644\u062a\u06cc - \u0634\u0647\u0631 \u062a\u0647\u0631\u0627\u0646"
                        }
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__p3JTb
                        )}
                      >
                        {
                          "\u0627\u0632 \u0633\u0627\u0644 \u06f1\u06f4\u06f0\u06f1"
                        }
                      </div>
                    </Stack__>
                  </Stack__>
                  <Stack__
                    as={"div"}
                    data-plasmic-name={
                      "\u0645\u0631\u06a9\u0632\u0642\u0644\u0628"
                    }
                    data-plasmic-override={overrides.مرکزقلب}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.مرکزقلب)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__qEmfG
                      )}
                    >
                      {
                        "\u0628\u064a\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u0645\u0631\u06a9\u0632 \u0642\u0644\u0628 \u062a\u0647\u0631\u0627\u0646"
                      }
                    </div>
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__q1ZmW)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__u4KVq
                        )}
                      >
                        {
                          "\u062f\u0648\u0644\u062a\u06cc - \u0634\u0647\u0631 \u062a\u0647\u0631\u0627\u0646"
                        }
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__xf3Kp
                        )}
                      >
                        {
                          "\u0627\u0632 \u0633\u0627\u0644 \u06f1\u06f4\u06f0\u06f3"
                        }
                      </div>
                    </Stack__>
                  </Stack__>
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"\u0634\u0631\u06cc\u0639\u062a\u06cc"}
                    data-plasmic-override={overrides.شریعتی}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.شریعتی)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__tiMhd
                      )}
                    >
                      {
                        "\u0628\u064a\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u0634\u0631\u064a\u0639\u062a\u06cc"
                      }
                    </div>
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__eJOxc)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__vReYi
                        )}
                      >
                        {
                          "\u062f\u0648\u0644\u062a\u06cc - \u0634\u0647\u0631 \u062a\u0647\u0631\u0627\u0646"
                        }
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__nXWd
                        )}
                      >
                        {
                          "\u0627\u0632 \u0633\u0627\u0644 \u06f1\u06f4\u06f0\u06f1"
                        }
                      </div>
                    </Stack__>
                  </Stack__>
                  <Stack__
                    as={"div"}
                    data-plasmic-name={
                      "\u0627\u0645\u06cc\u0631\u0627\u0639\u0644\u0645"
                    }
                    data-plasmic-override={overrides.امیراعلم}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.امیراعلم)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__t8Ukq
                      )}
                    >
                      {
                        "\u0628\u064a\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u0627\u0645\u064a\u0631\u0627\u0639\u0644\u0645"
                      }
                    </div>
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__fdRuc)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__dcSxb
                        )}
                      >
                        {
                          "\u062f\u0648\u0644\u062a\u06cc - \u0634\u0647\u0631 \u062a\u0647\u0631\u0627\u0646"
                        }
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__rBRdG
                        )}
                      >
                        {
                          "\u0627\u0632 \u0633\u0627\u0644 \u06f1\u06f4\u06f0\u06f1"
                        }
                      </div>
                    </Stack__>
                  </Stack__>
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"\u0622\u0631\u0634"}
                    data-plasmic-override={overrides.آرش}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.آرش)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__lvgaz
                      )}
                    >
                      {
                        "\u0628\u064a\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u0622\u0631\u0634"
                      }
                    </div>
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__vqHdh)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__njHg
                        )}
                      >
                        {
                          "\u062f\u0648\u0644\u062a\u06cc - \u0634\u0647\u0631 \u062a\u0647\u0631\u0627\u0646"
                        }
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__uu5Yd
                        )}
                      >
                        {
                          "\u0627\u0632 \u0633\u0627\u0644 \u06f1\u06f4\u06f0\u06f1"
                        }
                      </div>
                    </Stack__>
                  </Stack__>
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"\u0641\u0627\u0631\u0627\u0628\u06cc"}
                    data-plasmic-override={overrides.فارابی}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.فارابی)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__kw8Fm
                      )}
                    >
                      {
                        "\u0628\u064a\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u0641\u0627\u0631\u0627\u0628\u06cc"
                      }
                    </div>
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__a4MSt)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__f0SzR
                        )}
                      >
                        {
                          "\u062f\u0648\u0644\u062a\u06cc - \u0634\u0647\u0631 \u062a\u0647\u0631\u0627\u0646"
                        }
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__xnBif
                        )}
                      >
                        {
                          "\u0627\u0632 \u0633\u0627\u0644 \u06f1\u06f4\u06f0\u06f1"
                        }
                      </div>
                    </Stack__>
                  </Stack__>
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"\u0631\u0627\u0632\u06cc"}
                    data-plasmic-override={overrides.رازی}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.رازی)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__gjnyi
                      )}
                    >
                      {
                        "\u0628\u064a\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u0631\u0627\u0632\u06cc"
                      }
                    </div>
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__mkYm7)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__ahloA
                        )}
                      >
                        {
                          "\u062f\u0648\u0644\u062a\u06cc - \u0634\u0647\u0631 \u062a\u0647\u0631\u0627\u0646"
                        }
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__kfZsx
                        )}
                      >
                        {
                          "\u0627\u0632 \u0633\u0627\u0644 \u06f1\u06f4\u06f0\u06f1"
                        }
                      </div>
                    </Stack__>
                  </Stack__>
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"\u0628\u0647\u0627\u0631\u0644\u0648"}
                    data-plasmic-override={overrides.بهارلو}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.بهارلو)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___6GR5I
                      )}
                    >
                      {
                        "\u0628\u064a\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u0628\u0647\u0627\u0631\u0644\u0648"
                      }
                    </div>
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__izfwR)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__x3Lf4
                        )}
                      >
                        {
                          "\u062f\u0648\u0644\u062a\u06cc - \u0634\u0647\u0631 \u062a\u0647\u0631\u0627\u0646"
                        }
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__mDkYl
                        )}
                      >
                        {
                          "\u0627\u0632 \u0633\u0627\u0644 \u06f1\u06f4\u06f0\u06f1"
                        }
                      </div>
                    </Stack__>
                  </Stack__>
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"\u0631\u0648\u0632\u0628\u0647"}
                    data-plasmic-override={overrides.روزبه}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.روزبه)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__nWlVy
                      )}
                    >
                      {
                        "\u0628\u064a\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u0631\u0648\u0632\u0628\u0647"
                      }
                    </div>
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__c5Plo)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__gvRol
                        )}
                      >
                        {
                          "\u062f\u0648\u0644\u062a\u06cc - \u0634\u0647\u0631 \u062a\u0647\u0631\u0627\u0646"
                        }
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__zrtGm
                        )}
                      >
                        {
                          "\u0627\u0632 \u0633\u0627\u0644 \u06f1\u06f4\u06f0\u06f1"
                        }
                      </div>
                    </Stack__>
                  </Stack__>
                  <Stack__
                    as={"div"}
                    data-plasmic-name={
                      "\u0636\u06cc\u0627\u0626\u06cc\u0627\u0646"
                    }
                    data-plasmic-override={overrides.ضیائیان}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.ضیائیان)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__ac4Mw
                      )}
                    >
                      {
                        "\u0628\u064a\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u0636\u064a\u0627\u0626\u064a\u0627\u0646"
                      }
                    </div>
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__yetqn)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__yrDkX
                        )}
                      >
                        {
                          "\u062f\u0648\u0644\u062a\u06cc - \u0634\u0647\u0631 \u062a\u0647\u0631\u0627\u0646"
                        }
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__lug
                        )}
                      >
                        {
                          "\u0627\u0632 \u0633\u0627\u0644 \u06f1\u06f4\u06f0\u06f1"
                        }
                      </div>
                    </Stack__>
                  </Stack__>
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"\u0628\u0647\u0631\u0627\u0645\u06cc"}
                    data-plasmic-override={overrides.بهرامی}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.بهرامی)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___633Ac
                      )}
                    >
                      {
                        "\u0628\u064a\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u0628\u0647\u0631\u0627\u0645\u06cc"
                      }
                    </div>
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__g4Yk)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__nnw2H
                        )}
                      >
                        {
                          "\u062f\u0648\u0644\u062a\u06cc - \u0634\u0647\u0631 \u062a\u0647\u0631\u0627\u0646"
                        }
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__aDe0L
                        )}
                      >
                        {
                          "\u0627\u0632 \u0633\u0627\u0644 \u06f1\u06f4\u06f0\u06f1"
                        }
                      </div>
                    </Stack__>
                  </Stack__>
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"\u062d\u06a9\u06cc\u0645"}
                    data-plasmic-override={overrides.حکیم}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.حکیم)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__cgJrH
                      )}
                    >
                      {
                        "\u0628\u064a\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u062d\u06a9\u064a\u0645"
                      }
                    </div>
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__vCk06)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___9M1Yz
                        )}
                      >
                        {
                          "\u062f\u0648\u0644\u062a\u06cc - \u0634\u0647\u0631 \u062a\u0647\u0631\u0627\u0646"
                        }
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__mSu2Q
                        )}
                      >
                        {
                          "\u0627\u0632 \u0633\u0627\u0644 \u06f1\u06f4\u06f0\u06f1"
                        }
                      </div>
                    </Stack__>
                  </Stack__>
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"\u06cc\u0627\u0633"}
                    data-plasmic-override={overrides.یاس}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.یاس)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__sytmi
                      )}
                    >
                      {
                        "\u0628\u064a\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u064a\u0627\u0633"
                      }
                    </div>
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__zbym0)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__tGkNg
                        )}
                      >
                        {
                          "\u062f\u0648\u0644\u062a\u06cc - \u0634\u0647\u0631 \u062a\u0647\u0631\u0627\u0646"
                        }
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__uU5Z2
                        )}
                      >
                        {
                          "\u0627\u0632 \u0633\u0627\u0644 \u06f1\u06f4\u06f0\u06f1"
                        }
                      </div>
                    </Stack__>
                  </Stack__>
                </Stack__>
              </div>
            </Stack__>
          </Section>
          <Section
            data-plasmic-name={"section4WallOfLove"}
            data-plasmic-override={overrides.section4WallOfLove}
            className={classNames("__wab_instance", sty.section4WallOfLove)}
            size={"fullContentWidth"}
          >
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__akYh)}
            >
              <h2
                Id={"\u062f\u064a\u0648\u0627\u0631 \u0639\u0634\u0642"}
                className={classNames(
                  projectcss.all,
                  projectcss.h2,
                  projectcss.__wab_text,
                  sty.h2__woIsf
                )}
                dir={"rtl"}
              >
                {
                  "\u062f\u064a\u0648\u0627\u0631 \u0639\u0634\u0642 \u2764\ufe0f"
                }
              </h2>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__dtmZi
                )}
              >
                {
                  "\u0628\u064a\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u0647\u0627\u064a \u062f\u0631 \u062d\u0627\u0644 \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u0627\u0632 \u0627\u064a\u0646\u0644\u0628"
                }
              </div>
              {false ? (
                <Button
                  className={classNames("__wab_instance", sty.button__dcCkQ)}
                  color={"blue"}
                  large={true}
                  submitsForm={true}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__uMOwi
                    )}
                  >
                    {"Lorem ipsum"}
                  </div>
                </Button>
              ) : null}
              <div
                data-plasmic-name={"loveContents"}
                data-plasmic-override={overrides.loveContents}
                className={classNames(projectcss.all, sty.loveContents)}
              >
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__jON3)}
                >
                  {(_par => (!_par ? [] : Array.isArray(_par) ? _par : [_par]))(
                    (() => {
                      try {
                        return [
                          {
                            row_number: 2,
                            name: "دکتر حسين علي‌مددي",
                            role_title: "استاد هيئت علمي گوارش اطفال",
                            message:
                              "سلام. آنقدر به اینلب عادت کرده‌ام که دیگر بدون آن نمی‌توانم کار درمانی و آموزشی را تصور کنم.\nبه نظرم خدمت بزرگی به سلامت کودکان کشور کرده است. ازتیم اینلب بابت این باقیات صالحات سپاسگزارم.",
                            image: "",
                            image_link:
                              "https://lh7-rt.googleusercontent.com/sheetsz/AHOq17Hqx_iTM4ySqJtMADRijVy12liVZVH-V3ItTjIKJnnXKxqQFLSvXkcmFIZ39Fc55cLvp3PekF33oLNpoGke86bHWMS4bFR3F0uFOgA7PnEbwBq1j4Nqb7LHSHvuHpinHAsOHOw?key=i4KiIxPzDA1GXs3swSfQEA"
                          },
                          {
                            row_number: 3,
                            name: "دکتر سحرناز سازگارنژاد",
                            role_title: "رزیدنت جراحی",
                            message:
                              "مهم ترین تجربه چند ماه گذشته من در کنار اینکه بدون محدودیت مکانی بتونم به دیتاهای به روز بیماران دسترسی داشته باشم مربوط به صرفه جویی زمان برای کارهای هر روزه من در ویزیت بیمارهاست.  به خصوص که در مورد بیمارهای جراحی  داشتن سیر دیتاهای بیمار کنارهم، و دسترسی همزمان به دیتاهای مختلف مهمه که بستر اینلب اون رو فراهم کرده.",
                            image: "",
                            image_link:
                              "https://lh7-rt.googleusercontent.com/sheetsz/AHOq17G__3UQhKopA49tg2vZvZ6LY8nWeJZit9QmwYEpidWoGOo0lX0URrSFbVBsaoS9cedOAugK39MCkGwrZOPY-wSy_puOTsC1_PgnSPWl4zglN125fJl5gEJ5Z-CvH9ZpF1mlAg?key=i4KiIxPzDA1GXs3swSfQEA"
                          },
                          {
                            row_number: 4,
                            name: "دکتر محدثه اختياري",
                            role_title: "رزيدنت داخلي",
                            message:
                              "اینلب کمک میکنه دسترسی به آزمایشات، عکس و اسکن های انجام شده ی بیمار در کوتاه ترین زمان ممکن و با راحت ترین شیوه اتفاق بیفته، زمان انتظار برای دیدن دیتاهای بیمار در سیستم های PC داخل بخش ها رو به صفر میرسونه، حتی در منزل می توان آزمایشات جدید بیمار بدحال خود را پیگیری کرد. کمک میکنه دیتاهای مربوط به بستری های قبلی رو داشته باشیم بنابراین از درخواست اقدامات تکراری جلوگیری میشه.",
                            image: "",
                            image_link:
                              "https://lh7-rt.googleusercontent.com/sheetsz/AHOq17HebDy7hOZoULaYj1LIrzLgLkTGgpOreMWLYQqSW9g4B76Gkey8GVyQCsWA-PLXrB0WqbRzCFtf2IvnKIdRPbggVtFffBL7Le_xMkkHRtXrizFGYVJX7LTE86baVzo5w3N-Zzg?key=i4KiIxPzDA1GXs3swSfQEA"
                          },
                          {
                            row_number: 5,
                            name: "دکتر محمدرضا تقوي",
                            role_title: "اينترن",
                            message:
                              "بعد یه کشیک سخت، چه حالی میده وقتی می بينی سر راند صبح می تونی گوشی رو دستت بگیری و با اینلب آزمایش ها رو بخونی یا عکسای بیمار رو ببینی و نیاز نیست کلی قبلش وقت بذاری برا نوشتن آزمایشها روي کاغذ.",
                            image: "",
                            image_link:
                              "https://lh7-rt.googleusercontent.com/sheetsz/AHOq17GwdEmYezlla6Uy4hd_cVUDCYIXW8lAUmN97FqtRyNkrZCoV1L8pXw42yQDX8yTkWUbcF4kdnOSxubSuatJ5QmGb6tDKGdO7AAMW9PllCG05hpCY-USQNIAmHl-65-yYTismA?key=i4KiIxPzDA1GXs3swSfQEA"
                          },
                          {
                            row_number: 6,
                            name: "@zargol",
                            role_title: "اينترن",
                            message:
                              "فلوي ما هر لحظه ميگه واااي تو خونه آزمايشا رو چک مي کنم، سير آزمايش ها رو ميبينم. شب، صبح، توي مترو. واااي واقعا خوبه :))",
                            image: "",
                            image_link:
                              "https://lh7-rt.googleusercontent.com/sheetsz/AHOq17G-T-coexH-0BxpTEJ1xvErnZo8rbjZfFvXZSlvMJX5bgrJavzBMBUAxr7CWAYZoL9WNVo0lKfVeQ4NbuMdPRscknoOIB4nVFxLUCMkZJ-LFmfl0NujSW4m5hJX9TOaiQyst4w?key=i4KiIxPzDA1GXs3swSfQEA"
                          },
                          {
                            row_number: 7,
                            name: "دکتر حميد حسيني",
                            role_title: "اينترن",
                            message:
                              "تصور اینکه ”اینلب نباشه چی میشه“ سخت نیست؛ معلومه که خیلیی سخت میشه. اوایل دوره کارآموزیم که هنوز اینلب معرفی نشده بود و حتی طی همین چند ماه گذشته که یکی دو بار اینلب رو نداشتم متوجه این سختی شدم. قدردان دوران حضور اینلب هستم و خسته نباشید به بچه‌های تیم سیناپس",
                            image: "",
                            image_link:
                              "https://lh7-rt.googleusercontent.com/sheetsz/AHOq17Hv1QOWnfjarRPFbY-NUa7yNXf0G0qWNg5mtUoyCi_LcUSyh_vM8Hc_eKQ-j2HD3zJjkaAXZVi-9VAhmIBUFn3aFrG0MjFMRNDUhPCosaHIDgqb26weLBZeaAYDwGrVuOPxoEI?key=i4KiIxPzDA1GXs3swSfQEA"
                          },
                          {
                            row_number: 8,
                            name: "دکتر آزاده تقوي",
                            role_title: "اينترن",
                            message:
                              "من از اینلب خیلی استفاده میکنم و واقعا حس میکنم خیلی کارمو راحت میکنه، چون میتونم باهاش هر جا که بخوام خیلی سریع کارایی که برای مریضام انجام شده رو ببینم، سر راند به راحتی به جواب آزمایش مریضام دسترسی دارم و مشاوره هایی که برا مریض انجام شده رو هم میتونم سریع ببینم و لازم نیس کلی کاغذ هدر بدم برا این چیزا.  ازهمه مهم تر اینکه لازم نیس سر سیستم و پرونده کشمکش داشته باشم با همکارام، چون سیستم های بیمارستان محدودن و ما قبل از اینلب معمولا باید برای استفاده از سیستم صف میکشیدیم! ولی الان هر کسی به راحتی از روی گوشیش دسترسی داره و این عالیه =)",
                            image: "",
                            image_link:
                              "https://lh7-rt.googleusercontent.com/sheetsz/AHOq17G-T-coexH-0BxpTEJ1xvErnZo8rbjZfFvXZSlvMJX5bgrJavzBMBUAxr7CWAYZoL9WNVo0lKfVeQ4NbuMdPRscknoOIB4nVFxLUCMkZJ-LFmfl0NujSW4m5hJX9TOaiQyst4w?key=i4KiIxPzDA1GXs3swSfQEA"
                          },
                          {
                            row_number: 9,
                            name: "دکتر حسین اصفهانی",
                            role_title: "اینترن",
                            message:
                              "من در دوره کارورزی پزشکی از برنامه این‌لب استفاده می‌کنم و واقعاً تجربه بسیار خوبی داشته‌ام. بزرگ‌ترین مزیتی که این برنامه برای من فراهم کرده، امکان دسترسی آسان و سریع به نتایج اقدامات پاراکلینیکی مثل آزمایش‌ها و تصویربرداری‌ها روی گوشی شخصی‌ام است، بدون اینکه نیازی به سیستم‌های بیمارستانی داشته باشم. این موضوع واقعاً کار را برای من بسیار راحت‌تر کرده است.\nاز نکات مثبت دیگر، تیم پشتیبانی بسیار حرفه‌ای و دلسوز این‌لب است که با تلاش‌های مستمر خود، سعی کردند بیمارستان‌های مختلف دانشگاه را تحت پوشش برنامه قرار دهند. این تلاش باعث شد دسترسی به اطلاعات در سایر بیمارستان‌ها نیز فراهم شود که برای ما دانشجویان و کارورزان بسیار ارزشمند است.\nهمچنین راه‌اندازی این‌لب پلاس با رابط کاربری بهینه‌تر و امکانات بیشتر، تجربه کاربری را به شکل قابل توجهی بهبود بخشیده و دسترسی‌ها را ساده‌تر و سریع‌تر کرده است.\nاز همه تیم این‌لب بابت این خدمات عالی و پشتیبانی بی‌نظیرشان صمیمانه سپاسگزارم و امیدوارم همچنان در مسیر توسعه و بهبود برنامه موفق باشند.",
                            image: "",
                            image_link:
                              "https://lh7-rt.googleusercontent.com/sheetsz/AHOq17GyLiHBd_ZByRwCGGwOjI9XJ8GDs9RpJOwhWTmgJPpsYCg98QP6PW4JSn7x7FB3-txeOCbCMOU5GubEyFTEk2g91U_SFcPclU8ENwRGUG-pkglBt3Lop4KfRQs8QAVu0h2N4g?key=i4KiIxPzDA1GXs3swSfQEA"
                          }
                        ];
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return [];
                        }
                        throw e;
                      }
                    })()
                  ).map((__plasmic_item_0, __plasmic_idx_0) => {
                    const currentItem = __plasmic_item_0;
                    const currentIndex = __plasmic_idx_0;
                    return (
                      <div
                        data-plasmic-name={"loveMessage"}
                        data-plasmic-override={overrides.loveMessage}
                        className={classNames(projectcss.all, sty.loveMessage)}
                        dir={"dir"}
                        key={currentIndex}
                      >
                        <div
                          data-plasmic-name={"message"}
                          data-plasmic-override={overrides.message}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.message
                          )}
                          dir={"rtl"}
                        >
                          <React.Fragment>
                            {(() => {
                              try {
                                return currentItem.message;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return "";
                                }
                                throw e;
                              }
                            })()}
                          </React.Fragment>
                        </div>
                        <div
                          data-plasmic-name={"profileBox"}
                          data-plasmic-override={overrides.profileBox}
                          className={classNames(projectcss.all, sty.profileBox)}
                        >
                          <div
                            data-plasmic-name={"nameRole"}
                            data-plasmic-override={overrides.nameRole}
                            className={classNames(projectcss.all, sty.nameRole)}
                          >
                            <div
                              data-plasmic-name={"name"}
                              data-plasmic-override={overrides.name}
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.name
                              )}
                            >
                              <React.Fragment>
                                {(() => {
                                  try {
                                    return currentItem.name;
                                  } catch (e) {
                                    if (
                                      e instanceof TypeError ||
                                      e?.plasmicType ===
                                        "PlasmicUndefinedDataError"
                                    ) {
                                      return "";
                                    }
                                    throw e;
                                  }
                                })()}
                              </React.Fragment>
                            </div>
                            <div
                              data-plasmic-name={"roleTitle"}
                              data-plasmic-override={overrides.roleTitle}
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.roleTitle
                              )}
                            >
                              <React.Fragment>
                                {(() => {
                                  try {
                                    return currentItem.role_title;
                                  } catch (e) {
                                    if (
                                      e instanceof TypeError ||
                                      e?.plasmicType ===
                                        "PlasmicUndefinedDataError"
                                    ) {
                                      return "";
                                    }
                                    throw e;
                                  }
                                })()}
                              </React.Fragment>
                            </div>
                          </div>
                          <PlasmicImg__
                            data-plasmic-name={"image"}
                            data-plasmic-override={overrides.image}
                            alt={""}
                            className={classNames(sty.image)}
                            displayHeight={"auto"}
                            displayMaxHeight={"none"}
                            displayMaxWidth={"100%"}
                            displayMinHeight={"0"}
                            displayMinWidth={"0"}
                            displayWidth={"auto"}
                            loading={"lazy"}
                            src={(() => {
                              try {
                                return currentItem.image_link;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return {
                                    src: "/plasmic/syn_apps_website/images/icons8User50Png.png",
                                    fullWidth: 50,
                                    fullHeight: 50,
                                    aspectRatio: undefined
                                  };
                                }
                                throw e;
                              }
                            })()}
                            width={"50"}
                          />
                        </div>
                      </div>
                    );
                  })}
                </Stack__>
              </div>
            </Stack__>
          </Section>
          <Section
            data-plasmic-name={"section5Price"}
            data-plasmic-override={overrides.section5Price}
            background={"blue"}
            className={classNames("__wab_instance", sty.section5Price)}
            size={
              hasVariant(globalVariants, "screen", "mobile")
                ? "fullContentWidth"
                : "fullContentWidth"
            }
          >
            <div className={classNames(projectcss.all, sty.freeBox__gDwv8)}>
              <h2
                Id={"\u0642\u064a\u0645\u062a \u06af\u0630\u0627\u0631\u064a"}
                className={classNames(
                  projectcss.all,
                  projectcss.h2,
                  projectcss.__wab_text,
                  sty.h2___2Y19B
                )}
              >
                {
                  "\u0642\u06cc\u0645\u062a\u200c \u06af\u0630\u0627\u0631\u06cc"
                }
              </h2>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__ueDoS
                )}
              >
                <React.Fragment>
                  <React.Fragment>{"\u0642\u06cc\u0645\u062a "}</React.Fragment>
                  <span
                    className={"plasmic_default__all plasmic_default__span"}
                    style={{ fontWeight: 700, textDecorationLine: "underline" }}
                  >
                    {"\u0645\u0627\u0647\u0627\u0646\u0647"}
                  </span>
                  <React.Fragment>
                    {
                      " \u0627\u0634\u062a\u0631\u0627\u06a9 \u0627\u06cc\u0646\u0644\u0628 \u0628\u0631 \u0627\u0633\u0627\u0633 \u0627\u0646\u062f\u0627\u0632\u0647 \u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u0634\u0645\u0627"
                    }
                  </React.Fragment>
                </React.Fragment>
              </div>
              <Stack__
                as={"div"}
                data-plasmic-name={
                  "\u067e\u0644\u0646\u0647\u0627\u06cc\u0642\u06cc\u0645\u062a"
                }
                data-plasmic-override={overrides.پلنهایقیمت}
                hasGap={true}
                className={classNames(projectcss.all, sty.پلنهایقیمت)}
              >
                <div
                  data-plasmic-name={"\u06a9\u0645\u062a\u0631\u0627\u0632150"}
                  data-plasmic-override={overrides.کمتراز150}
                  className={classNames(projectcss.all, sty.کمتراز150)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__wlicu
                    )}
                  >
                    {"\u06a9\u0648\u0686\u06a9"}
                  </div>
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__gUyZg)}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={
                      hasVariant(globalVariants, "screen", "mobile")
                        ? "114px"
                        : "141px"
                    }
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"auto"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/syn_apps_website/images/freeForeverSvg.svg",
                      fullWidth: 148,
                      fullHeight: 150,
                      aspectRatio: 0.986014
                    }}
                  />

                  <h4
                    className={classNames(
                      projectcss.all,
                      projectcss.h4,
                      projectcss.__wab_text,
                      sty.h4__juqKq
                    )}
                    dir={"rtl"}
                  >
                    {hasVariant(globalVariants, "screen", "mobile")
                      ? "\u06a9\u0645\u062a\u0631 \u0627\u0632 \u06f1\u06f5\u06f0 \u062a\u062e\u062a"
                      : "\u06a9\u0645\u062a\u0631 \u0627\u0632 \u06f1\u06f5\u06f0 \u062a\u062e\u062a"}
                  </h4>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__u4Rpz
                    )}
                  >
                    {"Lorem ipsum dolor sit amet, consectetur adipiscing elit"}
                  </div>
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__dDaMj)}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"238px"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"auto"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/syn_apps_website/images/lineSvg.svg",
                      fullWidth: 300,
                      fullHeight: 3,
                      aspectRatio: 119
                    }}
                  />

                  <div
                    data-plasmic-name={"\u0642\u06cc\u0645\u062a"}
                    data-plasmic-override={overrides.قیمت}
                    className={classNames(projectcss.all, sty.قیمت)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__ai2Ky
                      )}
                    >
                      <React.Fragment>
                        <React.Fragment>
                          {
                            "\u0645\u06cc\u0644\u06cc\u0648\u0646 \u062a\u0648\u0645\u0627\u0646 / "
                          }
                        </React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ fontWeight: 700 }}
                        >
                          {"\u0645\u0627\u0647\u0627\u0646\u0647"}
                        </span>
                      </React.Fragment>
                    </div>
                    <h3
                      className={classNames(
                        projectcss.all,
                        projectcss.h3,
                        projectcss.__wab_text,
                        sty.h3___9PDjJ
                      )}
                    >
                      {"\u06f1\u06f0"}
                    </h3>
                  </div>
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__jTcaC)}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"238px"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"auto"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/syn_apps_website/images/lineSvg.svg",
                      fullWidth: 300,
                      fullHeight: 3,
                      aspectRatio: 119
                    }}
                  />

                  {false ? (
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__drd5H
                      )}
                    >
                      {hasVariant(globalVariants, "screen", "mobile")
                        ? "Feature"
                        : "Feature"}
                    </div>
                  ) : null}
                  {false ? (
                    <div
                      data-plasmic-name={"feature"}
                      data-plasmic-override={overrides.feature}
                      className={classNames(projectcss.all, sty.feature)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox___8Xuqb
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__lr9PJ
                          )}
                        >
                          <PlasmicImg__
                            alt={""}
                            className={classNames(sty.img___5F27D)}
                            displayHeight={"20px"}
                            displayMaxHeight={"none"}
                            displayMaxWidth={"100%"}
                            displayMinHeight={"0"}
                            displayMinWidth={"0"}
                            displayWidth={"20px"}
                            loading={"lazy"}
                            src={{
                              src: "/plasmic/syn_apps_website/images/tickCircleBlueSvg.svg",
                              fullWidth: 150,
                              fullHeight: 150,
                              aspectRatio: 1
                            }}
                          />
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__maN54
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__yzeF0
                            )}
                          >
                            {"Unlimited issue"}
                          </div>
                        </div>
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__lYwgD
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__mSoXe
                          )}
                        >
                          <PlasmicImg__
                            alt={""}
                            className={classNames(sty.img__dzDlh)}
                            displayHeight={"20px"}
                            displayMaxHeight={"none"}
                            displayMaxWidth={"100%"}
                            displayMinHeight={"0"}
                            displayMinWidth={"0"}
                            displayWidth={"20px"}
                            loading={"lazy"}
                            src={{
                              src: "/plasmic/syn_apps_website/images/tickCircleBlueSvg.svg",
                              fullWidth: 150,
                              fullHeight: 150,
                              aspectRatio: 1
                            }}
                          />
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox___4L9Q4
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__cyKvy
                            )}
                          >
                            {"Free domain"}
                          </div>
                        </div>
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__a22Ak
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox___4Npai
                          )}
                        >
                          <PlasmicImg__
                            alt={""}
                            className={classNames(sty.img__xhppI)}
                            displayHeight={"20px"}
                            displayMaxHeight={"none"}
                            displayMaxWidth={"100%"}
                            displayMinHeight={"0"}
                            displayMinWidth={"0"}
                            displayWidth={"20px"}
                            loading={"lazy"}
                            src={{
                              src: "/plasmic/syn_apps_website/images/tickCircleBlueSvg.svg",
                              fullWidth: 150,
                              fullHeight: 150,
                              aspectRatio: 1
                            }}
                          />
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__zqLzh
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__e1Zb
                            )}
                          >
                            {"3 team accounts"}
                          </div>
                        </div>
                      </div>
                    </div>
                  ) : null}
                </div>
                <div
                  data-plasmic-name={"_150300"}
                  data-plasmic-override={overrides._150300}
                  className={classNames(projectcss.all, sty._150300)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__i1FgC
                    )}
                  >
                    {"\u0645\u062a\u0648\u0633\u0637"}
                  </div>
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__tebEe)}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={
                      hasVariant(globalVariants, "screen", "mobile")
                        ? "114px"
                        : "141px"
                    }
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"auto"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/syn_apps_website/images/freeForeverSvg.svg",
                      fullWidth: 148,
                      fullHeight: 150,
                      aspectRatio: 0.986014
                    }}
                  />

                  <h4
                    className={classNames(
                      projectcss.all,
                      projectcss.h4,
                      projectcss.__wab_text,
                      sty.h4__faQxN
                    )}
                    dir={"rtl"}
                  >
                    {hasVariant(globalVariants, "screen", "mobile")
                      ? "\u06f1\u06f5\u06f0 \u062a\u0627 \u06f3\u06f0\u06f0 \u062a\u062e\u062a"
                      : "\u06f1\u06f5\u06f0 \u062a\u0627 \u06f3\u06f0\u06f0 \u062a\u062e\u062a"}
                  </h4>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__kHl7I
                    )}
                  >
                    {"Lorem ipsum dolor sit amet, consectetur adipiscing elit"}
                  </div>
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__qv25G)}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"238px"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"auto"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/syn_apps_website/images/lineSvg.svg",
                      fullWidth: 300,
                      fullHeight: 3,
                      aspectRatio: 119
                    }}
                  />

                  <div
                    data-plasmic-name={"\u0642\u06cc\u0645\u062a2"}
                    data-plasmic-override={overrides.قیمت2}
                    className={classNames(projectcss.all, sty.قیمت2)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__gLdDj
                      )}
                    >
                      <React.Fragment>
                        <React.Fragment>
                          {
                            "\u0645\u06cc\u0644\u06cc\u0648\u0646 \u062a\u0648\u0645\u0627\u0646 / "
                          }
                        </React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ fontWeight: 600 }}
                        >
                          {"\u0645\u0627\u0647\u0627\u0646\u0647"}
                        </span>
                      </React.Fragment>
                    </div>
                    <h3
                      className={classNames(
                        projectcss.all,
                        projectcss.h3,
                        projectcss.__wab_text,
                        sty.h3__uYw8O
                      )}
                    >
                      {"\u06f1\u06f5"}
                    </h3>
                  </div>
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__g3SrU)}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"238px"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"auto"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/syn_apps_website/images/lineSvg.svg",
                      fullWidth: 300,
                      fullHeight: 3,
                      aspectRatio: 119
                    }}
                  />

                  {false ? (
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__yz7Ob
                      )}
                    >
                      {hasVariant(globalVariants, "screen", "mobile")
                        ? "Feature"
                        : "Feature"}
                    </div>
                  ) : null}
                  {false ? (
                    <div
                      data-plasmic-name={"feature2"}
                      data-plasmic-override={overrides.feature2}
                      className={classNames(projectcss.all, sty.feature2)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__is57A
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__o8XMh
                          )}
                        >
                          <PlasmicImg__
                            alt={""}
                            className={classNames(sty.img__tn8RE)}
                            displayHeight={"20px"}
                            displayMaxHeight={"none"}
                            displayMaxWidth={"100%"}
                            displayMinHeight={"0"}
                            displayMinWidth={"0"}
                            displayWidth={"20px"}
                            loading={"lazy"}
                            src={{
                              src: "/plasmic/syn_apps_website/images/tickCircleBlueSvg.svg",
                              fullWidth: 150,
                              fullHeight: 150,
                              aspectRatio: 1
                            }}
                          />
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox___1RhZ
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__tKpw
                            )}
                          >
                            {"Unlimited issue"}
                          </div>
                        </div>
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__eUdFv
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__qTjR2
                          )}
                        >
                          <PlasmicImg__
                            alt={""}
                            className={classNames(sty.img__xs6HP)}
                            displayHeight={"20px"}
                            displayMaxHeight={"none"}
                            displayMaxWidth={"100%"}
                            displayMinHeight={"0"}
                            displayMinWidth={"0"}
                            displayWidth={"20px"}
                            loading={"lazy"}
                            src={{
                              src: "/plasmic/syn_apps_website/images/tickCircleBlueSvg.svg",
                              fullWidth: 150,
                              fullHeight: 150,
                              aspectRatio: 1
                            }}
                          />
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__rvnRk
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__fthQh
                            )}
                          >
                            {"Free domain"}
                          </div>
                        </div>
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__zpyMv
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__ewdnJ
                          )}
                        >
                          <PlasmicImg__
                            alt={""}
                            className={classNames(sty.img__caPi5)}
                            displayHeight={"20px"}
                            displayMaxHeight={"none"}
                            displayMaxWidth={"100%"}
                            displayMinHeight={"0"}
                            displayMinWidth={"0"}
                            displayWidth={"20px"}
                            loading={"lazy"}
                            src={{
                              src: "/plasmic/syn_apps_website/images/tickCircleBlueSvg.svg",
                              fullWidth: 150,
                              fullHeight: 150,
                              aspectRatio: 1
                            }}
                          />
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__oibNe
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___1GBq
                            )}
                          >
                            {"3 team accounts"}
                          </div>
                        </div>
                      </div>
                    </div>
                  ) : null}
                </div>
                {false ? (
                  <div
                    data-plasmic-name={"verticalStack"}
                    data-plasmic-override={overrides.verticalStack}
                    className={classNames(projectcss.all, sty.verticalStack)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___2EeR
                      )}
                    >
                      {hasVariant(globalVariants, "screen", "mobile")
                        ? "Our Recommendation"
                        : "Our Recommendation"}
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.freeBox__mwjIs)}
                    >
                      <PlasmicImg__
                        alt={""}
                        className={classNames(sty.img__m1N54)}
                        displayHeight={"auto"}
                        displayMaxHeight={"none"}
                        displayMaxWidth={"100%"}
                        displayMinHeight={"0"}
                        displayMinWidth={"0"}
                        displayWidth={
                          hasVariant(globalVariants, "screen", "mobile")
                            ? "115px"
                            : "144.97px"
                        }
                        loading={"lazy"}
                        src={{
                          src: "/plasmic/syn_apps_website/images/bestSellerSvg.svg",
                          fullWidth: 147,
                          fullHeight: 150,
                          aspectRatio: 0.97973
                        }}
                      />

                      <h4
                        className={classNames(
                          projectcss.all,
                          projectcss.h4,
                          projectcss.__wab_text,
                          sty.h4___4NjSk
                        )}
                      >
                        {hasVariant(globalVariants, "screen", "mobile")
                          ? "Pro"
                          : "Pro"}
                      </h4>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__kfOdg
                        )}
                      >
                        {
                          "Lorem ipsum dolor sit amet, consectetur adipiscing elit"
                        }
                      </div>
                      <PlasmicImg__
                        alt={""}
                        className={classNames(sty.img__vgTv6)}
                        displayHeight={"auto"}
                        displayMaxHeight={"none"}
                        displayMaxWidth={"238px"}
                        displayMinHeight={"0"}
                        displayMinWidth={"0"}
                        displayWidth={"auto"}
                        loading={"lazy"}
                        src={{
                          src: "/plasmic/syn_apps_website/images/lineSvg.svg",
                          fullWidth: 300,
                          fullHeight: 3,
                          aspectRatio: 119
                        }}
                      />

                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__wzocz
                        )}
                      >
                        <h3
                          className={classNames(
                            projectcss.all,
                            projectcss.h3,
                            projectcss.__wab_text,
                            sty.h3__erjf9
                          )}
                        >
                          {"$50"}
                        </h3>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__xhuXt
                          )}
                        >
                          {"/ Month"}
                        </div>
                      </div>
                      <PlasmicImg__
                        alt={""}
                        className={classNames(sty.img__qvntj)}
                        displayHeight={"auto"}
                        displayMaxHeight={"none"}
                        displayMaxWidth={"238px"}
                        displayMinHeight={"0"}
                        displayMinWidth={"0"}
                        displayWidth={"auto"}
                        loading={"lazy"}
                        src={{
                          src: "/plasmic/syn_apps_website/images/lineSvg.svg",
                          fullWidth: 300,
                          fullHeight: 3,
                          aspectRatio: 119
                        }}
                      />

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__vszpD
                        )}
                      >
                        {"Feature"}
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__vzXn9
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__eEj37
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__i4A04
                            )}
                          >
                            <PlasmicImg__
                              alt={""}
                              className={classNames(sty.img__zSfBc)}
                              displayHeight={"20px"}
                              displayMaxHeight={"none"}
                              displayMaxWidth={"100%"}
                              displayMinHeight={"0"}
                              displayMinWidth={"0"}
                              displayWidth={"20px"}
                              loading={"lazy"}
                              src={{
                                src: "/plasmic/syn_apps_website/images/tickCircleBlueSvg.svg",
                                fullWidth: 150,
                                fullHeight: 150,
                                aspectRatio: 1
                              }}
                            />
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__t02Ux
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__ge03J
                              )}
                            >
                              {"Unlimited issue"}
                            </div>
                          </div>
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__sfwCr
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox___0ViEm
                            )}
                          >
                            <PlasmicImg__
                              alt={""}
                              className={classNames(sty.img__gtsDm)}
                              displayHeight={"20px"}
                              displayMaxHeight={"none"}
                              displayMaxWidth={"100%"}
                              displayMinHeight={"0"}
                              displayMinWidth={"0"}
                              displayWidth={"20px"}
                              loading={"lazy"}
                              src={{
                                src: "/plasmic/syn_apps_website/images/tickCircleBlueSvg.svg",
                                fullWidth: 150,
                                fullHeight: 150,
                                aspectRatio: 1
                              }}
                            />
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__eSlt
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__xgRaT
                              )}
                            >
                              {"Free domains & hosting"}
                            </div>
                          </div>
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__qrQ9C
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__noRLk
                            )}
                          >
                            <PlasmicImg__
                              alt={""}
                              className={classNames(sty.img__sZhin)}
                              displayHeight={"20px"}
                              displayMaxHeight={"none"}
                              displayMaxWidth={"100%"}
                              displayMinHeight={"0"}
                              displayMinWidth={"0"}
                              displayWidth={"20px"}
                              loading={"lazy"}
                              src={{
                                src: "/plasmic/syn_apps_website/images/tickCircleBlueSvg.svg",
                                fullWidth: 150,
                                fullHeight: 150,
                                aspectRatio: 1
                              }}
                            />
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__cHqzd
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__lz1ZL
                              )}
                            >
                              {"10 team accounts"}
                            </div>
                          </div>
                        </div>
                      </div>
                      <Button
                        className={classNames(
                          "__wab_instance",
                          sty.button__sjn8X
                        )}
                        color={"blue"}
                        link={"#"}
                        submitsForm={true}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__iGjUy
                          )}
                        >
                          {"Get Started"}
                        </div>
                      </Button>
                    </div>
                  </div>
                ) : null}
                {false ? (
                  <div
                    data-plasmic-name={"verticalStack2"}
                    data-plasmic-override={overrides.verticalStack2}
                    className={classNames(projectcss.all, sty.verticalStack2)}
                  >
                    <h4
                      className={classNames(
                        projectcss.all,
                        projectcss.h4,
                        projectcss.__wab_text,
                        sty.h4__xwPbA
                      )}
                    >
                      {"Enterprise"}
                    </h4>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___67I6O
                      )}
                    >
                      {hasVariant(globalVariants, "screen", "mobile")
                        ? "Lorem ipsum dolor sit amet, consectetur adipiscing elit"
                        : "Lorem ipsum dolor sit amet, consectetur adipiscing elit"}
                    </div>
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__u1Gx)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"238px"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"auto"}
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/syn_apps_website/images/lineSvg.svg",
                        fullWidth: 300,
                        fullHeight: 3,
                        aspectRatio: 119
                      }}
                    />

                    <div
                      className={classNames(projectcss.all, sty.freeBox__oZphj)}
                    >
                      <h3
                        className={classNames(
                          projectcss.all,
                          projectcss.h3,
                          projectcss.__wab_text,
                          sty.h3__kFOlx
                        )}
                      >
                        {"$300"}
                      </h3>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__i6Lbn
                        )}
                      >
                        {"/ Month"}
                      </div>
                    </div>
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__jQtnv)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"238px"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"auto"}
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/syn_apps_website/images/lineSvg.svg",
                        fullWidth: 300,
                        fullHeight: 3,
                        aspectRatio: 119
                      }}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__yv6S
                      )}
                    >
                      {"Feature"}
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.freeBox__vvJo)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__x0HwX
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__aNUbY
                          )}
                        >
                          <PlasmicImg__
                            alt={""}
                            className={classNames(sty.img__xClGe)}
                            displayHeight={"20px"}
                            displayMaxHeight={"none"}
                            displayMaxWidth={"100%"}
                            displayMinHeight={"0"}
                            displayMinWidth={"0"}
                            displayWidth={"20px"}
                            loading={"lazy"}
                            src={{
                              src: "/plasmic/syn_apps_website/images/tickCircleBlueSvg.svg",
                              fullWidth: 150,
                              fullHeight: 150,
                              aspectRatio: 1
                            }}
                          />
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__bYaRg
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__l9PKi
                            )}
                          >
                            {"Unlimited issue"}
                          </div>
                        </div>
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox___7Q0PS
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__qfLim
                          )}
                        >
                          <PlasmicImg__
                            alt={""}
                            className={classNames(sty.img__fkhqc)}
                            displayHeight={"20px"}
                            displayMaxHeight={"none"}
                            displayMaxWidth={"100%"}
                            displayMinHeight={"0"}
                            displayMinWidth={"0"}
                            displayWidth={"20px"}
                            loading={"lazy"}
                            src={{
                              src: "/plasmic/syn_apps_website/images/tickCircleBlueSvg.svg",
                              fullWidth: 150,
                              fullHeight: 150,
                              aspectRatio: 1
                            }}
                          />
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__wyllp
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__dkGlG
                            )}
                          >
                            {"Free domains & hosting"}
                          </div>
                        </div>
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__jgpgR
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__bRKp2
                          )}
                        >
                          <PlasmicImg__
                            alt={""}
                            className={classNames(sty.img__eEhpc)}
                            displayHeight={"20px"}
                            displayMaxHeight={"none"}
                            displayMaxWidth={"100%"}
                            displayMinHeight={"0"}
                            displayMinWidth={"0"}
                            displayWidth={"20px"}
                            loading={"lazy"}
                            src={{
                              src: "/plasmic/syn_apps_website/images/tickCircleBlueSvg.svg",
                              fullWidth: 150,
                              fullHeight: 150,
                              aspectRatio: 1
                            }}
                          />
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__bNngv
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__lUBeG
                            )}
                          >
                            {"Unlimited team accounts"}
                          </div>
                        </div>
                      </div>
                    </div>
                    <Button
                      className={classNames(
                        "__wab_instance",
                        sty.button___5MrzU
                      )}
                      color={"blue"}
                      link={"#"}
                      submitsForm={true}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__iyvaO
                        )}
                      >
                        {"Get Started"}
                      </div>
                    </Button>
                  </div>
                ) : null}
                <div
                  data-plasmic-name={
                    "\u0628\u06cc\u0634\u062a\u0631\u0627\u0632300"
                  }
                  data-plasmic-override={overrides.بیشتراز300}
                  className={classNames(projectcss.all, sty.بیشتراز300)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__oGrMs
                    )}
                  >
                    {"\u0628\u0632\u0631\u06af"}
                  </div>
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__sgyXf)}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={
                      hasVariant(globalVariants, "screen", "mobile")
                        ? "114px"
                        : "141px"
                    }
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"auto"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/syn_apps_website/images/freeForeverSvg.svg",
                      fullWidth: 148,
                      fullHeight: 150,
                      aspectRatio: 0.986014
                    }}
                  />

                  <h4
                    className={classNames(
                      projectcss.all,
                      projectcss.h4,
                      projectcss.__wab_text,
                      sty.h4__bc8Rz
                    )}
                    dir={"rtl"}
                  >
                    {hasVariant(globalVariants, "screen", "mobile")
                      ? "\u0628\u06cc\u0634\u062a\u0631 \u0627\u0632 \u06f3\u06f0\u06f0 \u062a\u062e\u062a"
                      : "\u0628\u06cc\u0634\u062a\u0631 \u0627\u0632 \u06f3\u06f0\u06f0 \u062a\u062e\u062a"}
                  </h4>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__tYy1D
                    )}
                  >
                    {"Lorem ipsum dolor sit amet, consectetur adipiscing elit"}
                  </div>
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__exTus)}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"238px"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"auto"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/syn_apps_website/images/lineSvg.svg",
                      fullWidth: 300,
                      fullHeight: 3,
                      aspectRatio: 119
                    }}
                  />

                  <div
                    data-plasmic-name={"\u0642\u06cc\u0645\u062a3"}
                    data-plasmic-override={overrides.قیمت3}
                    className={classNames(projectcss.all, sty.قیمت3)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__gpOh5
                      )}
                    >
                      <React.Fragment>
                        <React.Fragment>
                          {
                            "\u0645\u06cc\u0644\u06cc\u0648\u0646 \u062a\u0648\u0645\u0627\u0646 / "
                          }
                        </React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ fontWeight: 600 }}
                        >
                          {"\u0645\u0627\u0647\u0627\u0646\u0647"}
                        </span>
                      </React.Fragment>
                    </div>
                    <h3
                      className={classNames(
                        projectcss.all,
                        projectcss.h3,
                        projectcss.__wab_text,
                        sty.h3__wbdXa
                      )}
                    >
                      {"\u06f2\u06f0"}
                    </h3>
                  </div>
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__q47Nn)}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"238px"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"auto"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/syn_apps_website/images/lineSvg.svg",
                      fullWidth: 300,
                      fullHeight: 3,
                      aspectRatio: 119
                    }}
                  />

                  {false ? (
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__yszlj
                      )}
                    >
                      {hasVariant(globalVariants, "screen", "mobile")
                        ? "Feature"
                        : "Feature"}
                    </div>
                  ) : null}
                  {false ? (
                    <div
                      data-plasmic-name={"feature3"}
                      data-plasmic-override={overrides.feature3}
                      className={classNames(projectcss.all, sty.feature3)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__xa6Nj
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__bLo6Q
                          )}
                        >
                          <PlasmicImg__
                            alt={""}
                            className={classNames(sty.img__rg1Ot)}
                            displayHeight={"20px"}
                            displayMaxHeight={"none"}
                            displayMaxWidth={"100%"}
                            displayMinHeight={"0"}
                            displayMinWidth={"0"}
                            displayWidth={"20px"}
                            loading={"lazy"}
                            src={{
                              src: "/plasmic/syn_apps_website/images/tickCircleBlueSvg.svg",
                              fullWidth: 150,
                              fullHeight: 150,
                              aspectRatio: 1
                            }}
                          />
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__cy0T2
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__ri2BX
                            )}
                          >
                            {"Unlimited issue"}
                          </div>
                        </div>
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox___32XjZ
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__eUl83
                          )}
                        >
                          <PlasmicImg__
                            alt={""}
                            className={classNames(sty.img__vk2CT)}
                            displayHeight={"20px"}
                            displayMaxHeight={"none"}
                            displayMaxWidth={"100%"}
                            displayMinHeight={"0"}
                            displayMinWidth={"0"}
                            displayWidth={"20px"}
                            loading={"lazy"}
                            src={{
                              src: "/plasmic/syn_apps_website/images/tickCircleBlueSvg.svg",
                              fullWidth: 150,
                              fullHeight: 150,
                              aspectRatio: 1
                            }}
                          />
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__qWh0I
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__nwfj0
                            )}
                          >
                            {"Free domain"}
                          </div>
                        </div>
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__adJui
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__ndPWx
                          )}
                        >
                          <PlasmicImg__
                            alt={""}
                            className={classNames(sty.img__tctqd)}
                            displayHeight={"20px"}
                            displayMaxHeight={"none"}
                            displayMaxWidth={"100%"}
                            displayMinHeight={"0"}
                            displayMinWidth={"0"}
                            displayWidth={"20px"}
                            loading={"lazy"}
                            src={{
                              src: "/plasmic/syn_apps_website/images/tickCircleBlueSvg.svg",
                              fullWidth: 150,
                              fullHeight: 150,
                              aspectRatio: 1
                            }}
                          />
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__m8L9S
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__c9IDz
                            )}
                          >
                            {"3 team accounts"}
                          </div>
                        </div>
                      </div>
                    </div>
                  ) : null}
                </div>
              </Stack__>
              <Stack__
                as={"div"}
                data-plasmic-name={"actionButtons2"}
                data-plasmic-override={overrides.actionButtons2}
                hasGap={true}
                className={classNames(projectcss.all, sty.actionButtons2)}
              >
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__wwVu)}
                >
                  <Button
                    data-plasmic-name={
                      "\u062f\u0631\u062e\u0648\u0627\u0633\u062a\u0631\u0627\u0647\u0627\u0646\u062f\u0627\u0632\u06cc4"
                    }
                    data-plasmic-override={overrides.درخواستراهاندازی4}
                    className={classNames(
                      "__wab_instance",
                      sty.درخواستراهاندازی4
                    )}
                    color={"blue"}
                    link={
                      "https://docs.google.com/forms/d/e/1FAIpQLSeu0cmLx9Vi16cV3WvJcys-8ctYElF3vQUGy1QVcbWhuaIHOA/viewform?usp=sf_link"
                    }
                    startIcon={
                      <svg
                        className={classNames(projectcss.all, sty.svg___5Zuhg)}
                        role={"img"}
                      />
                    }
                    submitsForm={false}
                    target={true}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__l1MeI
                      )}
                      dir={"rtl"}
                    >
                      <React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ fontWeight: 600 }}
                        >
                          {"\u062a\u0633\u062a \u06a9\u0646\u064a\u062f (Demo)"}
                        </span>
                      </React.Fragment>
                    </div>
                  </Button>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__qPWj
                    )}
                    dir={"rtl"}
                  >
                    <React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ fontWeight: 600 }}
                      >
                        {
                          "\u0647\u0645\u064a\u0646 \u062d\u0627\u0644\u0627 \u0648 \u0631\u0627\u064a\u06af\u0627\u0646"
                        }
                      </span>
                    </React.Fragment>
                  </div>
                </Stack__>
              </Stack__>
            </div>
          </Section>
          <Section
            data-plasmic-name={"section6Faq"}
            data-plasmic-override={overrides.section6Faq}
            background={"blue"}
            className={classNames("__wab_instance", sty.section6Faq)}
            size={
              hasVariant(globalVariants, "screen", "mobile")
                ? "fullContentWidth"
                : "fullContentWidth"
            }
          >
            <div className={classNames(projectcss.all, sty.freeBox__vlP72)}>
              <h2
                Id={
                  "\u0633\u0648\u0627\u0644\u0627\u062a \u0634\u0627\u064a\u0639"
                }
                className={classNames(
                  projectcss.all,
                  projectcss.h2,
                  projectcss.__wab_text,
                  sty.h2__cmzDz
                )}
              >
                {
                  "\u0633\u0648\u0627\u0644\u0627\u062a \u0634\u0627\u06cc\u0639"
                }
              </h2>
              <Stack__
                as={"div"}
                data-plasmic-name={"faqCategories"}
                data-plasmic-override={overrides.faqCategories}
                hasGap={true}
                className={classNames(projectcss.all, sty.faqCategories)}
              >
                <FaqTab
                  data-plasmic-name={
                    "_3\u067e\u0631\u062f\u0627\u062e\u062a\u0648\u0647\u0632\u06cc\u0646\u0647"
                  }
                  data-plasmic-override={overrides._3پرداختوهزینه}
                  className={classNames("__wab_instance", sty._3پرداختوهزینه)}
                  onSelectedChange={async (...eventArgs) => {
                    generateStateOnChangeProp($state, [
                      "_3پرداختوهزینه",
                      "selected"
                    ]).apply(null, eventArgs);
                    if (
                      eventArgs.length > 1 &&
                      eventArgs[1] &&
                      eventArgs[1]._plasmic_state_init_
                    ) {
                      return;
                    }
                  }}
                  selected={generateStateValueProp($state, [
                    "_3پرداختوهزینه",
                    "selected"
                  ])}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__oUlhq
                    )}
                    onClick={async event => {
                      const $steps = {};
                      $steps["updateFaqSelectedTab"] = true
                        ? (() => {
                            const actionArgs = {
                              variable: {
                                objRoot: $state,
                                variablePath: ["faqSelectedTab"]
                              },
                              operation: 0,
                              value: "پرداخت و هزینه"
                            };
                            return (({
                              variable,
                              value,
                              startIndex,
                              deleteCount
                            }) => {
                              if (!variable) {
                                return;
                              }
                              const { objRoot, variablePath } = variable;
                              $stateSet(objRoot, variablePath, value);
                              return value;
                            })?.apply(null, [actionArgs]);
                          })()
                        : undefined;
                      if (
                        $steps["updateFaqSelectedTab"] != null &&
                        typeof $steps["updateFaqSelectedTab"] === "object" &&
                        typeof $steps["updateFaqSelectedTab"].then ===
                          "function"
                      ) {
                        $steps["updateFaqSelectedTab"] = await $steps[
                          "updateFaqSelectedTab"
                        ];
                      }
                    }}
                  >
                    {
                      "\u067e\u0631\u062f\u0627\u062e\u062a \u0648 \u0647\u0632\u06cc\u0646\u0647"
                    }
                  </div>
                </FaqTab>
                <FaqTab
                  data-plasmic-name={
                    "_2\u0627\u0645\u0646\u06cc\u062a\u0646\u0631\u0645\u0627\u0641\u0632\u0627\u0631"
                  }
                  data-plasmic-override={overrides._2امنیتنرمافزار}
                  className={classNames("__wab_instance", sty._2امنیتنرمافزار)}
                  onSelectedChange={async (...eventArgs) => {
                    generateStateOnChangeProp($state, [
                      "_2امنیتنرمافزار",
                      "selected"
                    ]).apply(null, eventArgs);
                    if (
                      eventArgs.length > 1 &&
                      eventArgs[1] &&
                      eventArgs[1]._plasmic_state_init_
                    ) {
                      return;
                    }
                  }}
                  selected={generateStateValueProp($state, [
                    "_2امنیتنرمافزار",
                    "selected"
                  ])}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__bco66
                    )}
                    onClick={async event => {
                      const $steps = {};
                      $steps["updateFaqSelectedTab"] = true
                        ? (() => {
                            const actionArgs = {
                              variable: {
                                objRoot: $state,
                                variablePath: ["faqSelectedTab"]
                              },
                              operation: 0,
                              value: "امنیت نرم افزار"
                            };
                            return (({
                              variable,
                              value,
                              startIndex,
                              deleteCount
                            }) => {
                              if (!variable) {
                                return;
                              }
                              const { objRoot, variablePath } = variable;
                              $stateSet(objRoot, variablePath, value);
                              return value;
                            })?.apply(null, [actionArgs]);
                          })()
                        : undefined;
                      if (
                        $steps["updateFaqSelectedTab"] != null &&
                        typeof $steps["updateFaqSelectedTab"] === "object" &&
                        typeof $steps["updateFaqSelectedTab"].then ===
                          "function"
                      ) {
                        $steps["updateFaqSelectedTab"] = await $steps[
                          "updateFaqSelectedTab"
                        ];
                      }
                    }}
                  >
                    {
                      "\u0627\u0645\u0646\u06cc\u062a \u0646\u0631\u0645 \u0627\u0641\u0632\u0627\u0631"
                    }
                  </div>
                </FaqTab>
                {false ? (
                  <FaqTab
                    data-plasmic-name={
                      "_4\u067e\u0634\u062a\u064a\u0628\u0627\u0646\u064a"
                    }
                    data-plasmic-override={overrides._4پشتيباني}
                    className={classNames("__wab_instance", sty._4پشتيباني)}
                    onSelectedChange={async (...eventArgs) => {
                      generateStateOnChangeProp($state, [
                        "_4پشتيباني",
                        "selected"
                      ]).apply(null, eventArgs);
                      if (
                        eventArgs.length > 1 &&
                        eventArgs[1] &&
                        eventArgs[1]._plasmic_state_init_
                      ) {
                        return;
                      }
                    }}
                    selected={generateStateValueProp($state, [
                      "_4پشتيباني",
                      "selected"
                    ])}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__fI1TO
                      )}
                      onClick={async event => {
                        const $steps = {};
                        $steps["updateFaqSelectedTab"] = true
                          ? (() => {
                              const actionArgs = {
                                variable: {
                                  objRoot: $state,
                                  variablePath: ["faqSelectedTab"]
                                },
                                operation: 0,
                                value: "پشتيباني"
                              };
                              return (({
                                variable,
                                value,
                                startIndex,
                                deleteCount
                              }) => {
                                if (!variable) {
                                  return;
                                }
                                const { objRoot, variablePath } = variable;
                                $stateSet(objRoot, variablePath, value);
                                return value;
                              })?.apply(null, [actionArgs]);
                            })()
                          : undefined;
                        if (
                          $steps["updateFaqSelectedTab"] != null &&
                          typeof $steps["updateFaqSelectedTab"] === "object" &&
                          typeof $steps["updateFaqSelectedTab"].then ===
                            "function"
                        ) {
                          $steps["updateFaqSelectedTab"] = await $steps[
                            "updateFaqSelectedTab"
                          ];
                        }
                      }}
                    >
                      {"\u067e\u0634\u062a\u064a\u0628\u0627\u0646\u06cc"}
                    </div>
                  </FaqTab>
                ) : null}
                {false ? (
                  <FaqTab
                    data-plasmic-name={
                      "_3\u0645\u062c\u0648\u0632\u0647\u0627\u0648\u062a\u0627\u064a\u064a\u062f\u064a\u0647\u0647\u0627"
                    }
                    data-plasmic-override={overrides._3مجوزهاوتاييديهها}
                    className={classNames(
                      "__wab_instance",
                      sty._3مجوزهاوتاييديهها
                    )}
                    onSelectedChange={async (...eventArgs) => {
                      generateStateOnChangeProp($state, [
                        "_3مجوزهاوتاييديهها",
                        "selected"
                      ]).apply(null, eventArgs);
                      if (
                        eventArgs.length > 1 &&
                        eventArgs[1] &&
                        eventArgs[1]._plasmic_state_init_
                      ) {
                        return;
                      }
                    }}
                    selected={generateStateValueProp($state, [
                      "_3مجوزهاوتاييديهها",
                      "selected"
                    ])}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__vCcV
                      )}
                      onClick={async event => {
                        const $steps = {};
                        $steps["updateFaqSelectedTab"] = true
                          ? (() => {
                              const actionArgs = {
                                variable: {
                                  objRoot: $state,
                                  variablePath: ["faqSelectedTab"]
                                },
                                operation: 0,
                                value: "مجوزها و تاييديه‌ها"
                              };
                              return (({
                                variable,
                                value,
                                startIndex,
                                deleteCount
                              }) => {
                                if (!variable) {
                                  return;
                                }
                                const { objRoot, variablePath } = variable;
                                $stateSet(objRoot, variablePath, value);
                                return value;
                              })?.apply(null, [actionArgs]);
                            })()
                          : undefined;
                        if (
                          $steps["updateFaqSelectedTab"] != null &&
                          typeof $steps["updateFaqSelectedTab"] === "object" &&
                          typeof $steps["updateFaqSelectedTab"].then ===
                            "function"
                        ) {
                          $steps["updateFaqSelectedTab"] = await $steps[
                            "updateFaqSelectedTab"
                          ];
                        }
                      }}
                    >
                      {
                        "\u0645\u062c\u0648\u0632\u200c\u0647\u0627 \u0648 \u062a\u0627\u064a\u064a\u062f\u064a\u0647\u200c\u0647\u0627"
                      }
                    </div>
                  </FaqTab>
                ) : null}
                <FaqTab
                  data-plasmic-name={
                    "_1\u0646\u0635\u0628\u0648\u0631\u0627\u0647\u0627\u0646\u062f\u0627\u0632\u064a"
                  }
                  data-plasmic-override={overrides._1نصبوراهاندازي}
                  className={classNames("__wab_instance", sty._1نصبوراهاندازي)}
                  onSelectedChange={async (...eventArgs) => {
                    generateStateOnChangeProp($state, [
                      "_1نصبوراهاندازي",
                      "selected"
                    ]).apply(null, eventArgs);
                    if (
                      eventArgs.length > 1 &&
                      eventArgs[1] &&
                      eventArgs[1]._plasmic_state_init_
                    ) {
                      return;
                    }
                  }}
                  selected={generateStateValueProp($state, [
                    "_1نصبوراهاندازي",
                    "selected"
                  ])}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___8Qir2
                    )}
                    onClick={async event => {
                      const $steps = {};
                      $steps["updateFaqSelectedTab"] = true
                        ? (() => {
                            const actionArgs = {
                              variable: {
                                objRoot: $state,
                                variablePath: ["faqSelectedTab"]
                              },
                              operation: 0,
                              value: "نصب و راه اندازي"
                            };
                            return (({
                              variable,
                              value,
                              startIndex,
                              deleteCount
                            }) => {
                              if (!variable) {
                                return;
                              }
                              const { objRoot, variablePath } = variable;
                              $stateSet(objRoot, variablePath, value);
                              return value;
                            })?.apply(null, [actionArgs]);
                          })()
                        : undefined;
                      if (
                        $steps["updateFaqSelectedTab"] != null &&
                        typeof $steps["updateFaqSelectedTab"] === "object" &&
                        typeof $steps["updateFaqSelectedTab"].then ===
                          "function"
                      ) {
                        $steps["updateFaqSelectedTab"] = await $steps[
                          "updateFaqSelectedTab"
                        ];
                      }
                    }}
                  >
                    {
                      "\u0646\u0635\u0628 \u0648 \u0631\u0627\u0647 \u0627\u0646\u062f\u0627\u0632\u06cc"
                    }
                  </div>
                </FaqTab>
              </Stack__>
              {(() => {
                try {
                  return $state.faqSelectedTab === "نصب و راه اندازي";
                } catch (e) {
                  if (
                    e instanceof TypeError ||
                    e?.plasmicType === "PlasmicUndefinedDataError"
                  ) {
                    return false;
                  }
                  throw e;
                }
              })()
                ? (() => {
                    const child$Props = {
                      activeKey: generateStateValueProp($state, [
                        "faqنصبوراهاندازي",
                        "activePanelId"
                      ]),
                      bordered: true,
                      className: classNames(
                        "__wab_instance",
                        sty.faqنصبوراهاندازي
                      ),
                      expandIconPosition: "end",
                      items: (
                        <React.Fragment>
                          <AntdAccordionItem
                            data-plasmic-name={"q"}
                            data-plasmic-override={overrides.q}
                            className={classNames("__wab_instance", sty.q)}
                            id={"1_1"}
                            label2={
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text___23YPz
                                )}
                                dir={"rtl"}
                              >
                                {
                                  "\u0628\u0647 \u0686\u0647 \u0633\u062e\u062a\u200c\u0627\u0641\u0632\u0627\u0631 \u06cc\u0627 \u0632\u06cc\u0631\u0633\u0627\u062e\u062a\u06cc \u0646\u06cc\u0627\u0632 \u062f\u0627\u0631\u06cc\u0645 \u062a\u0627 \u0646\u0631\u0645\u200c\u0627\u0641\u0632\u0627\u0631 \u0628\u0647\u200c\u062e\u0648\u0628\u06cc \u0631\u0627\u0647\u200c\u0627\u0646\u062f\u0627\u0632\u06cc \u0634\u0648\u062f\u061f"
                                }
                              </div>
                            }
                            showArrow={true}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__dvYub
                              )}
                              dir={"rtl"}
                            >
                              <React.Fragment>
                                <React.Fragment>
                                  {
                                    "\u0627\u064a\u0646\u0644\u0628 \u0628\u0631 \u0631\u0648\u064a "
                                  }
                                </React.Fragment>
                                <span
                                  className={
                                    "plasmic_default__all plasmic_default__span"
                                  }
                                  style={{ fontWeight: 500 }}
                                >
                                  {
                                    "\u0633\u0631\u0648\u0631 \u0628\u064a\u0645\u0627\u0631\u0633\u062a\u0627\u0646"
                                  }
                                </span>
                                <React.Fragment>
                                  {
                                    " \u0646\u0635\u0628 \u0645\u064a \u0634\u0648\u062f \u0648 "
                                  }
                                </React.Fragment>
                                <span
                                  className={
                                    "plasmic_default__all plasmic_default__span"
                                  }
                                  style={{ fontWeight: 500 }}
                                >
                                  {
                                    "\u0646\u064a\u0627\u0632\u064a \u0628\u0647 \u0633\u062e\u062a \u0627\u0641\u0632\u0627\u0631 \u0645\u062c\u0632\u0627 \u064a\u0627 \u0648\u064a\u0698\u06af\u064a \u062e\u0627\u0635 \u0646\u062f\u0627\u0631\u062f."
                                  }
                                </span>
                              </React.Fragment>
                            </div>
                          </AntdAccordionItem>
                          <AntdAccordionItem
                            data-plasmic-name={"q2"}
                            data-plasmic-override={overrides.q2}
                            className={classNames("__wab_instance", sty.q2)}
                            id={"2_1"}
                            label2={
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__guVfv
                                )}
                                dir={"rtl"}
                              >
                                {
                                  "\u0622\u06cc\u0627 \u0644\u0627\u0632\u0645 \u0627\u0633\u062a \u0633\u0631\u0648\u0631\u0647\u0627\u06cc \u062c\u062f\u06cc\u062f \u062e\u0631\u06cc\u062f\u0627\u0631\u06cc \u06a9\u0646\u06cc\u0645 \u06cc\u0627 \u062a\u063a\u06cc\u06cc\u0631\u0627\u062a\u06cc \u062f\u0631 \u0632\u06cc\u0631\u0633\u0627\u062e\u062a \u0641\u0639\u0644\u06cc \u0627\u06cc\u062c\u0627\u062f \u06a9\u0646\u06cc\u0645\u061f"
                                }
                              </div>
                            }
                            showArrow={true}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__s5GrD
                              )}
                              dir={"rtl"}
                            >
                              <React.Fragment>
                                <span
                                  className={
                                    "plasmic_default__all plasmic_default__span"
                                  }
                                  style={{ fontWeight: 500 }}
                                >
                                  {"\u062e\u064a\u0631"}
                                </span>
                              </React.Fragment>
                            </div>
                          </AntdAccordionItem>
                          <AntdAccordionItem
                            data-plasmic-name={"q3"}
                            data-plasmic-override={overrides.q3}
                            className={classNames("__wab_instance", sty.q3)}
                            id={"3_1"}
                            label2={
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__wz1Bg
                                )}
                                dir={"rtl"}
                              >
                                {
                                  "\u0631\u0648\u0646\u062f \u0646\u0635\u0628 \u0648 \u0627\u0633\u062a\u0642\u0631\u0627\u0631 \u0627\u06cc\u0646 \u0646\u0631\u0645\u200c\u0627\u0641\u0632\u0627\u0631 \u062f\u0631 \u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u0645\u0627 \u0686\u0642\u062f\u0631 \u0632\u0645\u0627\u0646 \u0645\u06cc\u200c\u0628\u0631\u062f\u061f"
                                }
                              </div>
                            }
                            showArrow={true}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__veqiw
                              )}
                              dir={"rtl"}
                            >
                              <React.Fragment>
                                <React.Fragment>
                                  {"\u0628\u0631 \u0627\u0633\u0627\u0633 "}
                                </React.Fragment>
                                <span
                                  className={
                                    "plasmic_default__all plasmic_default__span"
                                  }
                                  style={{ textDecorationLine: "underline" }}
                                >
                                  {"\u0646\u0648\u0639 HIS "}
                                </span>
                                <React.Fragment>
                                  {
                                    "\u0634\u0645\u0627 \u062a\u0639\u064a\u064a\u0646 \u0645\u064a \u06af\u0631\u062f\u062f\n"
                                  }
                                </React.Fragment>
                                <span
                                  className={
                                    "plasmic_default__all plasmic_default__span"
                                  }
                                  style={{ fontWeight: 600 }}
                                >
                                  {
                                    "\ud83d\udca0\u0631\u0627\u064a\u0627\u0648\u0631\u0627\u0646 : 2 \u0633\u0627\u0639\u062a"
                                  }
                                </span>
                                <React.Fragment>{"\n"}</React.Fragment>
                                <span
                                  className={
                                    "plasmic_default__all plasmic_default__span"
                                  }
                                  style={{ fontWeight: 600 }}
                                >
                                  {
                                    "\ud83d\udca0\u062a\u064a\u0631\u0627\u0698\u0647 : 2 \u0633\u0627\u0639\u062a"
                                  }
                                </span>
                                <React.Fragment>{"\n"}</React.Fragment>
                                <span
                                  className={
                                    "plasmic_default__all plasmic_default__span"
                                  }
                                  style={{ fontWeight: 500 }}
                                >
                                  {
                                    "\ud83d\udca0\u0633\u0627\u064a\u0631 : \u0646\u064a\u0627\u0632\u0645\u0646\u062f \u0628\u0631\u0631\u0633\u064a \u062a\u064a\u0645 \u0641\u0646\u064a \u0633\u064a\u0646\u0627\u067e\u0633"
                                  }
                                </span>
                              </React.Fragment>
                            </div>
                          </AntdAccordionItem>
                          <AntdAccordionItem
                            data-plasmic-name={"q4"}
                            data-plasmic-override={overrides.q4}
                            className={classNames("__wab_instance", sty.q4)}
                            id={"4_1"}
                            label2={
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text___9SGGs
                                )}
                                dir={"rtl"}
                              >
                                {
                                  "\u0622\u064a\u0627 \u0628\u0631\u0627\u064a \u0627\u0646\u062c\u0627\u0645 \u0645\u0631\u0627\u062d\u0644 \u0646\u0635\u0628 \u0648 \u0631\u0627\u0647 \u0627\u0646\u062f\u0627\u0632\u064a\u060c \u0646\u064a\u0627\u0632\u064a \u0628\u0647 \u062d\u0636\u0648\u0631 \u0627\u0639\u0636\u0627\u064a \u0634\u0631\u06a9\u062a \u062f\u0631 \u0628\u064a\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u0645\u064a \u0628\u0627\u0634\u062f\u061f"
                                }
                              </div>
                            }
                            showArrow={true}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text___8MQ
                              )}
                              dir={"rtl"}
                            >
                              <React.Fragment>
                                <span
                                  className={
                                    "plasmic_default__all plasmic_default__span"
                                  }
                                  style={{ fontWeight: 600 }}
                                >
                                  {"\u062e\u064a\u0631"}
                                </span>
                                <React.Fragment>
                                  {
                                    ". \u0646\u064a\u0627\u0632\u064a \u0628\u0647 \u0627\u0642\u062f\u0627\u0645\u0627\u062a \u062d\u0636\u0648\u0631\u064a \u062c\u0647\u062a \u0646\u0635\u0628 \u0648 \u0631\u0627\u0647 \u0627\u0646\u062f\u0627\u0632\u064a \u0646\u0645\u064a\u200c\u0628\u0627\u0634\u062f. \n"
                                  }
                                </React.Fragment>
                                <span
                                  className={
                                    "plasmic_default__all plasmic_default__span"
                                  }
                                  style={{ fontWeight: 600 }}
                                >
                                  {
                                    "\u0646\u0635\u0628 \u0648 \u0631\u0627\u0647 \u0627\u0646\u062f\u0627\u0632\u06cc \u0646\u0631\u0645 \u0627\u0641\u0632\u0627\u0631 \u0628\u0633\u064a\u0627\u0631 \u0633\u0627\u062f\u0647 \u0645\u064a\u200c\u0628\u0627\u0634\u062f \u0648 \u06a9\u0645\u062a\u0631 \u0627\u0632 2 \u0633\u0627\u0639\u062a \u0632\u0645\u0627\u0646 \u0645\u06cc\u200c\u06af\u06cc\u0631\u062f"
                                  }
                                </span>
                                <React.Fragment>
                                  {
                                    "\u060c \u06a9\u0647 \u062a\u0648\u0633\u0637 \u0647\u0645\u06a9\u0627\u0631\u0627\u0646 IT \u0647\u0631 \u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u0646\u064a\u0632 \u0642\u0627\u0628\u0644 \u0627\u0646\u062c\u0627\u0645 \u0627\u0633\u062a."
                                  }
                                </React.Fragment>
                              </React.Fragment>
                            </div>
                          </AntdAccordionItem>
                          <AntdAccordionItem
                            data-plasmic-name={"q5"}
                            data-plasmic-override={overrides.q5}
                            className={classNames("__wab_instance", sty.q5)}
                            id={"5_1"}
                            label2={
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__tUzR2
                                )}
                                dir={"rtl"}
                              >
                                {
                                  "\u0631\u0648\u0646\u062f \u0622\u0645\u0648\u0632\u0634 \u0628\u0647 \u06a9\u0627\u0631\u0628\u0631\u0627\u0646\u060c \u062c\u0647\u062a \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u0627\u0632 \u0646\u0631\u0645 \u0627\u0641\u0632\u0627\u0631\u060c \u0628\u0647 \u0686\u0647 \u0635\u0648\u0631\u062a \u0645\u064a \u0628\u0627\u0634\u062f\u061f"
                                }
                              </div>
                            }
                            showArrow={true}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__gbiHy
                              )}
                              dir={"rtl"}
                            >
                              <React.Fragment>
                                <span
                                  className={
                                    "plasmic_default__all plasmic_default__span"
                                  }
                                  style={{ fontWeight: 600 }}
                                >
                                  {
                                    "\u0631\u0627\u0647\u0646\u0645\u0627 \u0648 \u0645\u062d\u062a\u0648\u0627\u0647\u0627\u064a \u0622\u0645\u0648\u0632\u0634\u064a"
                                  }
                                </span>
                                <React.Fragment>{""}</React.Fragment>
                                <span
                                  className={
                                    "plasmic_default__all plasmic_default__span"
                                  }
                                  style={{ fontWeight: 400 }}
                                >
                                  {
                                    " \u062f\u0631 \u0627\u062e\u062a\u064a\u0627\u0631 \u06a9\u0627\u0631\u0628\u0631\u0627\u0646 \u0642\u0631\u0627\u0631 \u062e\u0648\u0627\u0647\u062f \u06af\u0631\u0641\u062a. \u0636\u0645\u0646 \u0627\u064a\u0646\u06a9\u0647 "
                                  }
                                </span>
                                <React.Fragment>{""}</React.Fragment>
                                <span
                                  className={
                                    "plasmic_default__all plasmic_default__span"
                                  }
                                  style={{ fontWeight: 600 }}
                                >
                                  {
                                    "\u067e\u0634\u062a\u064a\u0628\u0627\u0646\u064a \u0646\u0631\u0645 \u0627\u0641\u0632\u0627\u0631"
                                  }
                                </span>
                                <React.Fragment>{""}</React.Fragment>
                                <span
                                  className={
                                    "plasmic_default__all plasmic_default__span"
                                  }
                                  style={{ fontWeight: 400 }}
                                >
                                  {
                                    " \u067e\u0627\u0633\u062e\u06af\u0648\u064a \u0633\u0648\u0627\u0644\u0627\u062a \u0648 \u0645\u0634\u06a9\u0644\u0627\u062a \u0627\u062d\u062a\u0645\u0627\u0644\u064a \u0627\u064a\u0634\u0627\u0646 \u062e\u0648\u0627\u0647\u062f \u0628\u0648\u062f."
                                  }
                                </span>
                              </React.Fragment>
                            </div>
                          </AntdAccordionItem>
                          <AntdAccordionItem
                            data-plasmic-name={"q6"}
                            data-plasmic-override={overrides.q6}
                            className={classNames("__wab_instance", sty.q6)}
                            id={"6_1"}
                            label2={
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text___777Dq
                                )}
                                dir={"rtl"}
                              >
                                {
                                  "\u0627\u06cc\u0646 \u0646\u0631\u0645\u200c\u0627\u0641\u0632\u0627\u0631 \u0631\u0648\u06cc \u0686\u0647 \u062f\u0633\u062a\u06af\u0627\u0647\u200c\u0647\u0627\u06cc\u06cc \u0642\u0627\u0628\u0644 \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u0627\u0633\u062a \u0648 \u0622\u06cc\u0627 \u0645\u062d\u062f\u0648\u062f\u06cc\u062a\u06cc \u0628\u0631\u0627\u06cc \u0633\u06cc\u0633\u062a\u0645\u200c\u0639\u0627\u0645\u0644 \u0648\u062c\u0648\u062f \u062f\u0627\u0631\u062f\u061f"
                                }
                              </div>
                            }
                            showArrow={true}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__p7Nn2
                              )}
                              dir={"rtl"}
                            >
                              <React.Fragment>
                                <span
                                  className={
                                    "plasmic_default__all plasmic_default__span"
                                  }
                                  style={{ fontWeight: 400 }}
                                >
                                  {
                                    "\u0646\u0631\u0645 \u0627\u0641\u0632\u0627\u0631 \u0627\u064a\u0646\u0644\u0628 \u0645\u0628\u062a\u0646\u064a \u0628\u0631 "
                                  }
                                </span>
                                <React.Fragment>{""}</React.Fragment>
                                <span
                                  className={
                                    "plasmic_default__all plasmic_default__span"
                                  }
                                  style={{ fontWeight: 600 }}
                                >
                                  {"\u0635\u0641\u062d\u0647 web"}
                                </span>
                                <React.Fragment>{""}</React.Fragment>
                                <span
                                  className={
                                    "plasmic_default__all plasmic_default__span"
                                  }
                                  style={{ fontWeight: 400 }}
                                >
                                  {
                                    " \u0628\u0648\u062f\u0647 \u0648 \u0628\u0631 \u0631\u0648\u064a "
                                  }
                                </span>
                                <React.Fragment>{""}</React.Fragment>
                                <span
                                  className={
                                    "plasmic_default__all plasmic_default__span"
                                  }
                                  style={{ fontWeight: 600 }}
                                >
                                  {
                                    "\u0647\u0645\u0647 \u062f\u0633\u062a\u06af\u0627\u0647 \u0647\u0627 (\u06a9\u0627\u0645\u067e\u064a\u0648\u062a\u0631\u060c \u0645\u0648\u0628\u0627\u064a\u0644\u060c \u062a\u0628\u0644\u062a)"
                                  }
                                </span>
                                <React.Fragment>{""}</React.Fragment>
                                <span
                                  className={
                                    "plasmic_default__all plasmic_default__span"
                                  }
                                  style={{ fontWeight: 400 }}
                                >
                                  {" \u0648 "}
                                </span>
                                <React.Fragment>{""}</React.Fragment>
                                <span
                                  className={
                                    "plasmic_default__all plasmic_default__span"
                                  }
                                  style={{ fontWeight: 600 }}
                                >
                                  {
                                    "\u0647\u0645\u0647 \u0633\u064a\u0633\u062a\u0645 \u0639\u0627\u0645\u0644 \u0647\u0627 (\u0627\u0646\u062f\u0631\u0648\u064a\u062f\u060c ios)"
                                  }
                                </span>
                                <React.Fragment>{""}</React.Fragment>
                                <span
                                  className={
                                    "plasmic_default__all plasmic_default__span"
                                  }
                                  style={{ fontWeight: 400 }}
                                >
                                  {
                                    " \u0642\u0627\u0628\u0644 \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u0627\u0633\u062a \u0648 \u0645\u062d\u062f\u0648\u062f\u064a\u062a\u064a \u0646\u062f\u0627\u0631\u062f."
                                  }
                                </span>
                              </React.Fragment>
                            </div>
                          </AntdAccordionItem>
                        </React.Fragment>
                      ),

                      onChange: async (...eventArgs) => {
                        generateStateOnChangePropForCodeComponents(
                          $state,
                          "activePanelId",
                          ["faqنصبوراهاندازي", "activePanelId"],
                          AntdAccordion_Helpers
                        ).apply(null, eventArgs);
                      },
                      size: "large"
                    };
                    initializeCodeComponentStates(
                      $state,
                      [
                        {
                          name: "activePanelId",
                          plasmicStateName: "faqنصبوراهاندازي.activePanelId"
                        }
                      ],

                      [],
                      AntdAccordion_Helpers ?? {},
                      child$Props
                    );
                    return (
                      <AntdAccordion
                        data-plasmic-name={
                          "faq\u0646\u0635\u0628\u0648\u0631\u0627\u0647\u0627\u0646\u062f\u0627\u0632\u064a"
                        }
                        data-plasmic-override={overrides.faqنصبوراهاندازي}
                        {...child$Props}
                      />
                    );
                  })()
                : null}
              {(() => {
                try {
                  return $state.faqSelectedTab === "امنیت نرم افزار";
                } catch (e) {
                  if (
                    e instanceof TypeError ||
                    e?.plasmicType === "PlasmicUndefinedDataError"
                  ) {
                    return false;
                  }
                  throw e;
                }
              })()
                ? (() => {
                    const child$Props = {
                      activeKey: generateStateValueProp($state, [
                        "faqامنیتنرمافزار",
                        "activePanelId"
                      ]),
                      bordered: true,
                      className: classNames(
                        "__wab_instance",
                        sty.faqامنیتنرمافزار
                      ),
                      expandIconPosition: "end",
                      items: (
                        <React.Fragment>
                          <AntdAccordionItem
                            data-plasmic-name={"q122"}
                            data-plasmic-override={overrides.q122}
                            className={classNames("__wab_instance", sty.q122)}
                            id={"1_2"}
                            label2={
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__wyRxx
                                )}
                                dir={"rtl"}
                              >
                                {
                                  "\u0686\u0637\u0648\u0631 \u0627\u0632 \u0627\u0645\u0646\u06cc\u062a \u0646\u0631\u0645 \u0627\u0641\u0632\u0627\u0631 \u0634\u0645\u0627 \u0645\u0637\u0645\u0626\u0646 \u0628\u0634\u0648\u0645\u061f"
                                }
                              </div>
                            }
                            showArrow={true}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text___2W6Us
                              )}
                              dir={"rtl"}
                            >
                              <React.Fragment>
                                <React.Fragment>
                                  {
                                    "\u0647\u0645\u0647 \u0633\u06cc\u0633\u062a\u0645 \u0647\u0627\u06cc \u0646\u0631\u0645 \u0627\u0641\u0632\u0627\u0631\u06cc \u0628\u0647 \u0645\u0627\u0646\u0646\u062f \u0633\u0627\u06cc\u0631 \u0633\u06cc\u0633\u062a\u0645 \u0647\u0627 \u062f\u0627\u0631\u0627\u06cc \u0646\u0642\u0627\u0637 \u0645\u0633\u062a\u0639\u062f \u0627\u0645\u0646\u06cc\u062a\u06cc \u0645\u06cc \u0628\u0627\u0634\u0646\u062f.\n"
                                  }
                                </React.Fragment>
                                <span
                                  className={
                                    "plasmic_default__all plasmic_default__span"
                                  }
                                  style={{ fontWeight: 500 }}
                                >
                                  {
                                    "\u062f\u0631 \u0633\u06cc\u0646\u0627\u067e\u0633 \u062a\u0644\u0627\u0634 \u06a9\u0631\u062f\u06cc\u0645 \u062a\u0627 \u0628\u0627 \u0631\u0639\u0627\u06cc\u062a \u067e\u0631\u0648\u062a\u0648\u06a9\u0644 \u0647\u0627\u06cc \u0627\u0645\u0646\u06cc\u062a\u06cc \u0645\u0646\u0627\u0633\u0628 \u0648 \u0628\u0647 \u0631\u0648\u0632\u060c \u0631\u06cc\u0633\u06a9 \u0627\u0645\u0646\u06cc\u062a\u06cc \u0631\u0627 \u0628\u0647 \u06a9\u0645\u062a\u0631\u06cc\u0646 \u0645\u06cc\u0632\u0627\u0646 \u0645\u0645\u06a9\u0646 \u0628\u0631\u0633\u0627\u0646\u06cc\u0645 : "
                                  }
                                </span>
                                <React.Fragment>
                                  {"\n1\ufe0f\u20e3 "}
                                </React.Fragment>
                                <span
                                  className={
                                    "plasmic_default__all plasmic_default__span"
                                  }
                                  style={{ fontWeight: 700 }}
                                >
                                  {
                                    "\u0627\u06cc\u0646\u0644\u0628 \u0628\u0631 \u0631\u0648\u06cc \u0633\u0631\u0648\u0631 \u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u0646\u0635\u0628 \u0645\u06cc \u0634\u0648\u062f."
                                  }
                                </span>
                                <React.Fragment>
                                  {
                                    " \u0628\u0646\u0627\u0628\u0631\u0627\u06cc\u0646 \u0627\u0637\u0644\u0627\u0639\u0627\u062a \u0628\u06cc\u0645\u0627\u0631\u0627\u0646 \u0627\u0632 \u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u062e\u0627\u0631\u062c \u0646\u0634\u062f\u0647 \u0648 \u0627\u06cc\u0646\u0644\u0628 \u0635\u0631\u0641\u0627\u064b \u067e\u0648\u0633\u062a\u0647 \u0627\u06cc \u0628\u0631\u0627\u06cc \u0645\u0634\u0627\u0647\u062f\u0647 \u0627\u0637\u0644\u0627\u0639\u0627\u062a \u0628\u06cc\u0645\u0627\u0631\u0627\u0646 \u0645\u06cc \u0628\u0627\u0634\u062f.\n2\ufe0f\u20e3 \u0627\u0632 "
                                  }
                                </React.Fragment>
                                <span
                                  className={
                                    "plasmic_default__all plasmic_default__span"
                                  }
                                  style={{ fontWeight: 700 }}
                                >
                                  {
                                    "\u067e\u0631\u0648\u062a\u0648\u06a9\u0644 \u0647\u0627\u06cc \u0627\u0645\u0646\u06cc\u062a\u06cc \u0628\u0647 \u0631\u0648\u0632"
                                  }
                                </span>
                                <React.Fragment>
                                  {
                                    "\u060c \u0645\u0627\u0646\u0646\u062f HTTPS \u0648 TLS 1.3 \u0648 \u0633\u0627\u06cc\u0631 \u0645\u0648\u0627\u0631\u062f \u062f\u0631 \u067e\u06cc\u0627\u062f\u0647 \u0633\u0627\u0632\u06cc \u0627\u06cc\u0646\u0644\u0628 \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u0634\u062f\u0647 \u0627\u0633\u062a.\n3\ufe0f\u20e3 \u062f\u0633\u062a\u0631\u0633\u06cc \u0628\u0647 \u0627\u06cc\u0646\u0644\u0628 \u0635\u0631\u0641\u0627\u064b \u0627\u0632 \u0637\u0631\u06cc\u0642 "
                                  }
                                </React.Fragment>
                                <span
                                  className={
                                    "plasmic_default__all plasmic_default__span"
                                  }
                                  style={{ fontWeight: 700 }}
                                >
                                  {
                                    "\u0627\u06a9\u0627\u0646\u062a \u0633\u0627\u062e\u062a\u0647 \u0634\u062f\u0647 \u062a\u0648\u0633\u0637 \u0627\u062f\u0645\u06cc\u0646 \u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646"
                                  }
                                </span>
                                <React.Fragment>
                                  {
                                    "\u060c \u0645\u06cc\u0633\u0631 \u0645\u06cc \u0628\u0627\u0634\u062f \u0648 \u0628\u0646\u0627\u0628\u0631\u0627\u06cc\u0646 \u0627\u0632 \u062f\u0633\u062a\u0631\u0633\u06cc \u0633\u0627\u06cc\u0631 \u0627\u0641\u0631\u0627\u062f \u062c\u0644\u0648\u06af\u06cc\u0631\u06cc \u0628\u0647 \u0639\u0645\u0644 \u0645\u06cc \u0622\u06cc\u062f.\n4\ufe0f\u20e3 \u0633\u06cc\u0646\u0627\u067e\u0633 \u0628\u0647 \u0645\u0627\u0646\u0646\u062f \u0633\u0627\u0644 \u0647\u0627\u06cc \u06af\u0630\u0634\u062a\u0647\u060c \u062f\u0627\u0631\u0627\u06cc "
                                  }
                                </React.Fragment>
                                <span
                                  className={
                                    "plasmic_default__all plasmic_default__span"
                                  }
                                  style={{ fontWeight: 700 }}
                                >
                                  {
                                    "\u06af\u0648\u0627\u0647\u06cc \u0641\u0631\u0622\u06cc\u0646\u062f \u0627\u0641\u062a\u0627 1403-1404 "
                                  }
                                </span>
                                <React.Fragment>
                                  {"\u0645\u06cc \u0628\u0627\u0634\u062f."}
                                </React.Fragment>
                              </React.Fragment>
                            </div>
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text___2WMNw
                              )}
                              dir={"rtl"}
                            >
                              <React.Fragment>
                                <React.Fragment>{"\n"}</React.Fragment>
                                <span
                                  className={
                                    "plasmic_default__all plasmic_default__span"
                                  }
                                  style={{
                                    fontWeight: 500,
                                    textDecorationLine: "underline"
                                  }}
                                >
                                  {
                                    "\u2733\ufe0f \u0627\u0645\u0627 \u062f\u0631 \u0646\u0647\u0627\u06cc\u062a \u0628\u0647 \u0622\u0646\u0686\u0647 \u0627\u0645\u06cc\u062f \u062f\u0627\u0631\u06cc\u0645 \u0633\u0627\u0628\u0642\u0647 \u0686\u0646\u062f \u0633\u0627\u0644\u0647 \u0627\u06cc\u0646\u0644\u0628 \u062f\u0631 \u0628\u0632\u0631\u06af\u062a\u0631\u06cc\u0646 \u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u0647\u0627\u06cc \u06a9\u0634\u0648\u0631 \u0627\u0633\u062a \u06a9\u0647 \u0627\u0646 \u0634\u0627\u0621 \u0627\u0644\u0644\u0647 \u0628\u062a\u0648\u0627\u0646\u062f \u0645\u0646\u062c\u0631 \u0628\u0647 \u0622\u0631\u0627\u0645\u0634 \u062e\u0627\u0637\u0631 \u0648 \u0627\u0637\u0645\u06cc\u0646\u0627\u0646 \u0634\u0645\u0627 \u062f\u0631 \u0631\u0627\u0647 \u0627\u0646\u062f\u0627\u0632\u06cc \u0627\u06cc\u0646\u0644\u0628 \u0628\u0627\u0634\u062f."
                                  }
                                </span>
                              </React.Fragment>
                            </div>
                          </AntdAccordionItem>
                          <AntdAccordionItem
                            data-plasmic-name={"q12"}
                            data-plasmic-override={overrides.q12}
                            className={classNames("__wab_instance", sty.q12)}
                            id={"6"}
                            label2={
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__uRydk
                                )}
                                dir={"rtl"}
                              >
                                {
                                  "\u0627\u06cc\u0646 \u0646\u0631\u0645\u200c\u0627\u0641\u0632\u0627\u0631 \u0631\u0648\u06cc \u0686\u0647 \u062f\u0633\u062a\u06af\u0627\u0647\u200c\u0647\u0627\u06cc\u06cc \u0642\u0627\u0628\u0644 \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u0627\u0633\u062a \u0648 \u0622\u06cc\u0627 \u0645\u062d\u062f\u0648\u062f\u06cc\u062a\u06cc \u0628\u0631\u0627\u06cc \u0633\u06cc\u0633\u062a\u0645\u200c\u0639\u0627\u0645\u0644 \u0648\u062c\u0648\u062f \u062f\u0627\u0631\u062f\u061f"
                                }
                              </div>
                            }
                            showArrow={true}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__rbFo2
                              )}
                              dir={"rtl"}
                            >
                              <React.Fragment>
                                <span
                                  className={
                                    "plasmic_default__all plasmic_default__span"
                                  }
                                  style={{ fontWeight: 400 }}
                                >
                                  {
                                    "\u0646\u0631\u0645 \u0627\u0641\u0632\u0627\u0631 \u0627\u064a\u0646\u0644\u0628 \u0645\u0628\u062a\u0646\u064a \u0628\u0631 "
                                  }
                                </span>
                                <React.Fragment>{""}</React.Fragment>
                                <span
                                  className={
                                    "plasmic_default__all plasmic_default__span"
                                  }
                                  style={{ fontWeight: 600 }}
                                >
                                  {"\u0635\u0641\u062d\u0647 web"}
                                </span>
                                <React.Fragment>{""}</React.Fragment>
                                <span
                                  className={
                                    "plasmic_default__all plasmic_default__span"
                                  }
                                  style={{ fontWeight: 400 }}
                                >
                                  {
                                    " \u0628\u0648\u062f\u0647 \u0648 \u0628\u0631 \u0631\u0648\u064a "
                                  }
                                </span>
                                <React.Fragment>{""}</React.Fragment>
                                <span
                                  className={
                                    "plasmic_default__all plasmic_default__span"
                                  }
                                  style={{ fontWeight: 600 }}
                                >
                                  {
                                    "\u0647\u0645\u0647 \u062f\u0633\u062a\u06af\u0627\u0647 \u0647\u0627 (\u06a9\u0627\u0645\u067e\u064a\u0648\u062a\u0631\u060c \u0645\u0648\u0628\u0627\u064a\u0644\u060c \u062a\u0628\u0644\u062a)"
                                  }
                                </span>
                                <React.Fragment>{""}</React.Fragment>
                                <span
                                  className={
                                    "plasmic_default__all plasmic_default__span"
                                  }
                                  style={{ fontWeight: 400 }}
                                >
                                  {" \u0648 "}
                                </span>
                                <React.Fragment>{""}</React.Fragment>
                                <span
                                  className={
                                    "plasmic_default__all plasmic_default__span"
                                  }
                                  style={{ fontWeight: 600 }}
                                >
                                  {
                                    "\u0647\u0645\u0647 \u0633\u064a\u0633\u062a\u0645 \u0639\u0627\u0645\u0644 \u0647\u0627 (\u0627\u0646\u062f\u0631\u0648\u064a\u062f\u060c ios)"
                                  }
                                </span>
                                <React.Fragment>{""}</React.Fragment>
                                <span
                                  className={
                                    "plasmic_default__all plasmic_default__span"
                                  }
                                  style={{ fontWeight: 400 }}
                                >
                                  {
                                    " \u0642\u0627\u0628\u0644 \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u0627\u0633\u062a \u0648 \u0645\u062d\u062f\u0648\u062f\u064a\u062a\u064a \u0646\u062f\u0627\u0631\u062f."
                                  }
                                </span>
                              </React.Fragment>
                            </div>
                          </AntdAccordionItem>
                        </React.Fragment>
                      ),

                      onChange: async (...eventArgs) => {
                        generateStateOnChangePropForCodeComponents(
                          $state,
                          "activePanelId",
                          ["faqامنیتنرمافزار", "activePanelId"],
                          AntdAccordion_Helpers
                        ).apply(null, eventArgs);
                      },
                      size: "large"
                    };
                    initializeCodeComponentStates(
                      $state,
                      [
                        {
                          name: "activePanelId",
                          plasmicStateName: "faqامنیتنرمافزار.activePanelId"
                        }
                      ],

                      [],
                      AntdAccordion_Helpers ?? {},
                      child$Props
                    );
                    return (
                      <AntdAccordion
                        data-plasmic-name={
                          "faq\u0627\u0645\u0646\u06cc\u062a\u0646\u0631\u0645\u0627\u0641\u0632\u0627\u0631"
                        }
                        data-plasmic-override={overrides.faqامنیتنرمافزار}
                        {...child$Props}
                      />
                    );
                  })()
                : null}
              {(() => {
                try {
                  return $state.faqSelectedTab === "پرداخت و هزینه";
                } catch (e) {
                  if (
                    e instanceof TypeError ||
                    e?.plasmicType === "PlasmicUndefinedDataError"
                  ) {
                    return false;
                  }
                  throw e;
                }
              })()
                ? (() => {
                    const child$Props = {
                      activeKey: generateStateValueProp($state, [
                        "faqپرداختوهزینه",
                        "activePanelId"
                      ]),
                      bordered: true,
                      className: classNames(
                        "__wab_instance",
                        sty.faqپرداختوهزینه
                      ),
                      expandIconPosition: "end",
                      items: (
                        <React.Fragment>
                          <AntdAccordionItem
                            data-plasmic-name={"q13"}
                            data-plasmic-override={overrides.q13}
                            className={classNames("__wab_instance", sty.q13)}
                            id={"1_3"}
                            label2={
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__pd1Bh
                                )}
                                dir={"rtl"}
                              >
                                {
                                  "\u0622\u06cc\u0627 \u0642\u0628\u0644 \u0627\u0632 \u067e\u0631\u062f\u0627\u062e\u062a \u0647\u0632\u06cc\u0646\u0647 \u0645\u06cc \u062a\u0648\u0627\u0646\u0645 \u0627\u06cc\u0646\u0644\u0628 \u0631\u0627 \u062a\u0633\u062a \u06a9\u0646\u0645\u061f (Free trial)"
                                }
                              </div>
                            }
                            showArrow={true}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__kybj
                              )}
                              dir={"rtl"}
                            >
                              <React.Fragment>
                                <span
                                  className={
                                    "plasmic_default__all plasmic_default__span"
                                  }
                                  style={{ fontWeight: 700 }}
                                >
                                  {"\u0628\u0644\u0647 "}
                                </span>
                                <React.Fragment>{"- "}</React.Fragment>
                                <span
                                  className={
                                    "plasmic_default__all plasmic_default__span"
                                  }
                                  style={{ fontWeight: 700 }}
                                >
                                  {
                                    "45 \u0631\u0648\u0632 \u0631\u0627\u06cc\u06af\u0627\u0646 (Free trial)"
                                  }
                                </span>
                                <React.Fragment>
                                  {
                                    " \u0645\u06cc \u062a\u0648\u0627\u0646\u06cc\u062f \u0627\u0632 \u0627\u06cc\u0646\u0644\u0628 \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u0646\u0645\u0627\u06cc\u06cc\u062f.\n\u062f\u0631 \u0635\u0648\u0631\u062a\u06cc \u06a9\u0647 \u0645\u0627\u06cc\u0644 \u0628\u0647 \u0627\u062f\u0627\u0645\u0647 \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u0628\u0627\u0634\u06cc\u062f\u060c \u0645\u06cc \u062a\u0648\u0627\u0646\u06cc\u062f \u0627\u0634\u062a\u0631\u0627\u06a9 \u062e\u0631\u06cc\u062f\u0627\u0631\u06cc \u0646\u0645\u0627\u06cc\u06cc\u062f.\n\u062f\u0631 \u063a\u06cc\u0631 \u0627\u06cc\u0646\u0635\u0648\u0631\u062a \u0627\u0634\u062a\u0631\u0627\u06a9 \u0634\u0645\u0627 \u0628\u062f\u0648\u0646 \u0632\u062d\u0645\u062a \u0648 \u0647\u0632\u06cc\u0646\u0647 \u0627\u06cc \u063a\u06cc\u0631\u0641\u0639\u0627\u0644 \u0645\u06cc \u06af\u0631\u062f\u062f."
                                  }
                                </React.Fragment>
                              </React.Fragment>
                            </div>
                          </AntdAccordionItem>
                          <AntdAccordionItem
                            data-plasmic-name={"q23"}
                            data-plasmic-override={overrides.q23}
                            className={classNames("__wab_instance", sty.q23)}
                            id={"2_3"}
                            label2={
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__sxWLt
                                )}
                                dir={"rtl"}
                              >
                                {
                                  "\u0646\u062d\u0648\u0647 \u067e\u0631\u062f\u0627\u062e\u062a \u0647\u0632\u06cc\u0646\u0647 \u0628\u0647 \u0686\u0647 \u0635\u0648\u0631\u062a \u0627\u0633\u062a\u061f"
                                }
                              </div>
                            }
                            showArrow={true}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text___53MVl
                              )}
                              dir={"rtl"}
                            >
                              <React.Fragment>
                                <React.Fragment>
                                  {
                                    "\u0647\u0632\u06cc\u0646\u0647 \u0633\u0631\u0648\u06cc\u0633 \u0646\u0631\u0645 \u0627\u0641\u0632\u0627\u0631\u06cc \u0627\u06cc\u0646\u0644\u0628 \u0628\u0647 \u0635\u0648\u0631\u062a \u067e\u0631\u062f\u0627\u062e\u062a "
                                  }
                                </React.Fragment>
                                <span
                                  className={
                                    "plasmic_default__all plasmic_default__span"
                                  }
                                  style={{ fontWeight: 700 }}
                                >
                                  {
                                    "\u062d\u0642 \u0627\u0634\u062a\u0631\u0627\u06a9"
                                  }
                                </span>
                                <React.Fragment>
                                  {
                                    " \u0645\u06cc \u0628\u0627\u0634\u062f.\n\n1\ufe0f\u20e3\u0645\u062f\u062a \u0627\u0634\u062a\u0631\u0627\u06a9 \u0645\u0648\u0631\u062f \u0646\u0638\u0631 \u062e\u0648\u062f \u0631\u0627 \u0627\u0646\u062a\u062e\u0627\u0628 \u06a9\u0646\u06cc\u062f ("
                                  }
                                </React.Fragment>
                                <span
                                  className={
                                    "plasmic_default__all plasmic_default__span"
                                  }
                                  style={{ textDecorationLine: "underline" }}
                                >
                                  {
                                    "\u062d\u062f\u0627\u0642\u0644 1 \u0645\u0627\u0647\u060c \u062d\u062f\u0627\u06a9\u062b\u0631 12 \u0645\u0627\u0647"
                                  }
                                </span>
                                <React.Fragment>
                                  {
                                    ")\n2\ufe0f\u20e3\u0647\u0632\u06cc\u0646\u0647 \u0627\u0634\u062a\u0631\u0627\u06a9 \u0631\u0627 \u067e\u0631\u062f\u0627\u062e\u062a \u06a9\u0646\u06cc\u062f\n3\ufe0f\u20e3\u0627\u0634\u062a\u0631\u0627\u06a9 \u0634\u0645\u0627 \u0641\u0639\u0627\u0644 \u0634\u062f \u0648 \u0645\u06cc\u062a\u0648\u0627\u0646\u06cc\u062f \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u06a9\u0646\u06cc\u062f \ud83d\ude0a\ud83c\udf39"
                                  }
                                </React.Fragment>
                              </React.Fragment>
                            </div>
                          </AntdAccordionItem>
                          <AntdAccordionItem
                            data-plasmic-name={"q33"}
                            data-plasmic-override={overrides.q33}
                            className={classNames("__wab_instance", sty.q33)}
                            id={"3_3"}
                            label2={
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__l2H9Q
                                )}
                                dir={"rtl"}
                              >
                                {
                                  "\u0622\u06cc\u0627 \u0647\u0632\u06cc\u0646\u0647 \u062f\u06cc\u06af\u0631\u06cc (\u0646\u0635\u0628\u060c \u0631\u0627\u0647 \u0627\u0646\u062f\u0627\u0632\u06cc\u060c \u067e\u0634\u062a\u06cc\u0628\u0627\u0646\u06cc \u0648 \u063a\u06cc\u0631\u0647) \u0639\u0644\u0627\u0648\u0647 \u0628\u0631 \u0645\u0628\u0644\u063a \u0630\u06a9\u0631 \u0634\u062f\u0647 \u0648\u062c\u0648\u062f \u062f\u0627\u0631\u062f\u061f"
                                }
                              </div>
                            }
                            showArrow={true}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text___4Sjzx
                              )}
                              dir={"rtl"}
                            >
                              <React.Fragment>
                                <span
                                  className={
                                    "plasmic_default__all plasmic_default__span"
                                  }
                                  style={{
                                    fontWeight: 800,
                                    textDecorationLine: "underline"
                                  }}
                                >
                                  {"\u062e\u06cc\u0631"}
                                </span>
                                <React.Fragment>{""}</React.Fragment>
                                <span
                                  className={
                                    "plasmic_default__all plasmic_default__span"
                                  }
                                  style={{ fontWeight: 400 }}
                                >
                                  {
                                    " - \u0635\u0631\u0641\u0627 \u062d\u0642 \u0627\u0634\u062a\u0631\u0627\u06a9 \u0630\u06a9\u0631 \u0634\u062f\u0647 \u0631\u0627 \u067e\u0631\u062f\u0627\u062e\u062a \u0648 \u0627\u0632 \u0633\u0631\u0648\u06cc\u0633 \u0646\u0631\u0645 \u0627\u0641\u0632\u0627\u0631\u06cc \u0627\u06cc\u0646\u0644\u0628 \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u0646\u0645\u0627\u06cc\u06cc\u062f."
                                  }
                                </span>
                              </React.Fragment>
                            </div>
                          </AntdAccordionItem>
                        </React.Fragment>
                      ),

                      onChange: async (...eventArgs) => {
                        generateStateOnChangePropForCodeComponents(
                          $state,
                          "activePanelId",
                          ["faqپرداختوهزینه", "activePanelId"],
                          AntdAccordion_Helpers
                        ).apply(null, eventArgs);
                      },
                      size: "large"
                    };
                    initializeCodeComponentStates(
                      $state,
                      [
                        {
                          name: "activePanelId",
                          plasmicStateName: "faqپرداختوهزینه.activePanelId"
                        }
                      ],

                      [],
                      AntdAccordion_Helpers ?? {},
                      child$Props
                    );
                    return (
                      <AntdAccordion
                        data-plasmic-name={
                          "faq\u067e\u0631\u062f\u0627\u062e\u062a\u0648\u0647\u0632\u06cc\u0646\u0647"
                        }
                        data-plasmic-override={overrides.faqپرداختوهزینه}
                        {...child$Props}
                      />
                    );
                  })()
                : null}
              <Stack__
                as={"div"}
                data-plasmic-name={"actionButtons3"}
                data-plasmic-override={overrides.actionButtons3}
                hasGap={true}
                className={classNames(projectcss.all, sty.actionButtons3)}
              >
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__ttc5E)}
                >
                  <Button
                    data-plasmic-name={
                      "\u062f\u0631\u062e\u0648\u0627\u0633\u062a\u0631\u0627\u0647\u0627\u0646\u062f\u0627\u0632\u06cc5"
                    }
                    data-plasmic-override={overrides.درخواستراهاندازی5}
                    className={classNames(
                      "__wab_instance",
                      sty.درخواستراهاندازی5
                    )}
                    color={"blue"}
                    link={
                      "https://docs.google.com/forms/d/e/1FAIpQLSeu0cmLx9Vi16cV3WvJcys-8ctYElF3vQUGy1QVcbWhuaIHOA/viewform?usp=sf_link"
                    }
                    startIcon={
                      <svg
                        className={classNames(projectcss.all, sty.svg___4RtDt)}
                        role={"img"}
                      />
                    }
                    submitsForm={false}
                    target={true}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__ehHz2
                      )}
                      dir={"rtl"}
                    >
                      <React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ fontWeight: 600 }}
                        >
                          {"\u062a\u0633\u062a \u06a9\u0646\u064a\u062f (Demo)"}
                        </span>
                      </React.Fragment>
                    </div>
                  </Button>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__kk9ZD
                    )}
                    dir={"rtl"}
                  >
                    <React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ fontWeight: 600 }}
                      >
                        {
                          "\u0647\u0645\u064a\u0646 \u062d\u0627\u0644\u0627 \u0648 \u0631\u0627\u064a\u06af\u0627\u0646"
                        }
                      </span>
                    </React.Fragment>
                  </div>
                </Stack__>
              </Stack__>
              {false ? (
                <Stack__
                  as={"div"}
                  data-plasmic-name={"flow"}
                  data-plasmic-override={overrides.flow}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.flow)}
                >
                  <div
                    data-plasmic-name={
                      "\u0627\u062a\u0635\u0627\u0644\u0628\u0647His"
                    }
                    data-plasmic-override={overrides.اتصالبهHis}
                    className={classNames(projectcss.all, sty.اتصالبهHis)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__etp9N
                      )}
                      dir={"rtl"}
                    >
                      {
                        "\u0627\u06cc\u0646\u0644\u0628 \u0631\u0627 \u0628\u0647 HIS \u0645\u062a\u0635\u0644 \u06a9\u0646\u06cc\u062f"
                      }
                    </div>
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img___52Dgb)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={
                        hasVariant(globalVariants, "screen", "mobile")
                          ? "300px"
                          : "350px"
                      }
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"auto"}
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/syn_apps_website/images/lineSvg.svg",
                        fullWidth: 300,
                        fullHeight: 3,
                        aspectRatio: 119
                      }}
                    />

                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(
                        projectcss.all,
                        sty.freeBox___3BcIy
                      )}
                    >
                      <Stack__
                        as={"div"}
                        data-plasmic-name={
                          "\u062a\u0637\u0627\u0628\u0642\u0628\u0627\u062a\u0645\u0627\u0645His\u0647\u0627"
                        }
                        data-plasmic-override={overrides.تطابقباتمامHisها}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.تطابقباتمامHisها
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__oQupr
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__f0Cqa
                            )}
                            dir={"rtl"}
                          >
                            {
                              "\u062a\u0637\u0627\u0628\u0642 \u0628\u0627 \u062a\u0645\u0627\u0645 HIS \u0647\u0627"
                            }
                          </div>
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__grk3D
                          )}
                        >
                          <PlasmicImg__
                            alt={""}
                            className={classNames(sty.img__y3Ebt)}
                            displayHeight={"20px"}
                            displayMaxHeight={"none"}
                            displayMaxWidth={"100%"}
                            displayMinHeight={"0"}
                            displayMinWidth={"0"}
                            displayWidth={"20px"}
                            loading={"lazy"}
                            src={{
                              src: "/plasmic/syn_apps_website/images/tickCircleBlueSvg.svg",
                              fullWidth: 150,
                              fullHeight: 150,
                              aspectRatio: 1
                            }}
                          />
                        </div>
                      </Stack__>
                      <Stack__
                        as={"div"}
                        data-plasmic-name={
                          "\u0627\u062a\u0635\u0627\u0644\u0628\u0647\u062f\u06cc\u062a\u0627\u0628\u06cc\u0633"
                        }
                        data-plasmic-override={overrides.اتصالبهدیتابیس}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.اتصالبهدیتابیس
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__pcCe
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__y94Mj
                            )}
                          >
                            {
                              "\u0627\u062a\u0635\u0627\u0644 \u0645\u0633\u062a\u0642\u06cc\u0645 \u0628\u0647 \u062f\u06cc\u062a\u0627\u0628\u06cc\u0633"
                            }
                          </div>
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__j0OJy
                          )}
                        >
                          <PlasmicImg__
                            alt={""}
                            className={classNames(sty.img__neflL)}
                            displayHeight={"20px"}
                            displayMaxHeight={"none"}
                            displayMaxWidth={"100%"}
                            displayMinHeight={"0"}
                            displayMinWidth={"0"}
                            displayWidth={"20px"}
                            loading={"lazy"}
                            src={{
                              src: "/plasmic/syn_apps_website/images/tickCircleBlueSvg.svg",
                              fullWidth: 150,
                              fullHeight: 150,
                              aspectRatio: 1
                            }}
                          />
                        </div>
                      </Stack__>
                      <Stack__
                        as={"div"}
                        data-plasmic-name={
                          "\u0628\u0631\u0631\u0648\u06cc\u0633\u0631\u0648\u0631\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646"
                        }
                        data-plasmic-override={overrides.بررویسروربیمارستان}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.بررویسروربیمارستان
                        )}
                      >
                        <div
                          data-plasmic-name={"\u0645\u062a\u06462"}
                          data-plasmic-override={overrides.متن2}
                          className={classNames(projectcss.all, sty.متن2)}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__uiqrK
                            )}
                            dir={"rtl"}
                          >
                            {
                              "\u0631\u0627\u0647 \u0627\u0646\u062f\u0627\u0632\u06cc \u0628\u0631 \u0631\u0648\u06cc \u0633\u0631\u0648\u0631 \u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646"
                            }
                          </div>
                        </div>
                        <div
                          data-plasmic-name={"\u0644\u0648\u06af\u06482"}
                          data-plasmic-override={overrides.لوگو2}
                          className={classNames(projectcss.all, sty.لوگو2)}
                        >
                          <PlasmicImg__
                            alt={""}
                            className={classNames(sty.img__mCw8R)}
                            displayHeight={"15px"}
                            displayMaxHeight={"none"}
                            displayMaxWidth={"100%"}
                            displayMinHeight={"0"}
                            displayMinWidth={"0"}
                            displayWidth={"15px"}
                            loading={"lazy"}
                            src={{
                              src: "/plasmic/syn_apps_website/images/image5.svg",
                              fullWidth: 24,
                              fullHeight: 24,
                              aspectRatio: 1
                            }}
                          />
                        </div>
                      </Stack__>
                      <Stack__
                        as={"div"}
                        data-plasmic-name={
                          "\u0635\u0631\u0641\u0627\u062f\u0633\u062a\u0631\u0633\u06cc\u062e\u0648\u0627\u0646\u062f\u0646"
                        }
                        data-plasmic-override={overrides.صرفادسترسیخواندن}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.صرفادسترسیخواندن
                        )}
                      >
                        <div
                          data-plasmic-name={"\u0645\u062a\u06463"}
                          data-plasmic-override={overrides.متن3}
                          className={classNames(projectcss.all, sty.متن3)}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___0Tp5J
                            )}
                            dir={"rtl"}
                          >
                            {
                              "\u062f\u0633\u062a\u0631\u0633\u06cc \u0635\u0631\u0641\u0627\u064b \u062e\u0648\u0627\u0646\u062f\u0646 (View) \u0627\u0632 HIS"
                            }
                          </div>
                        </div>
                        <div
                          data-plasmic-name={"\u0644\u0648\u06af\u06483"}
                          data-plasmic-override={overrides.لوگو3}
                          className={classNames(projectcss.all, sty.لوگو3)}
                        >
                          <PlasmicImg__
                            alt={""}
                            className={classNames(sty.img__f6S8X)}
                            displayHeight={"15px"}
                            displayMaxHeight={"none"}
                            displayMaxWidth={"100%"}
                            displayMinHeight={"0"}
                            displayMinWidth={"0"}
                            displayWidth={"15px"}
                            loading={"lazy"}
                            src={{
                              src: "/plasmic/syn_apps_website/images/image5.svg",
                              fullWidth: 24,
                              fullHeight: 24,
                              aspectRatio: 1
                            }}
                          />
                        </div>
                      </Stack__>
                      <Stack__
                        as={"div"}
                        data-plasmic-name={
                          "\u0628\u062f\u0648\u0646\u0646\u06cc\u0627\u0632\u0628\u0647\u062f\u0633\u062a\u0631\u0633\u06cc\u0646\u0648\u0634\u062a\u0646"
                        }
                        data-plasmic-override={overrides.بدوننیازبهدسترسینوشتن}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.بدوننیازبهدسترسینوشتن
                        )}
                      >
                        <div
                          data-plasmic-name={"\u0645\u062a\u06464"}
                          data-plasmic-override={overrides.متن4}
                          className={classNames(projectcss.all, sty.متن4)}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__ciStu
                            )}
                            dir={"rtl"}
                          >
                            {
                              "\u0628\u062f\u0648\u0646 \u0646\u06cc\u0627\u0632 \u0628\u0647 \u062f\u0633\u062a\u0631\u0633\u06cc \u0646\u0648\u0634\u062a\u0646 (Write) \u0631\u0648\u06cc HIS"
                            }
                          </div>
                        </div>
                        <div
                          data-plasmic-name={"\u0644\u0648\u06af\u06484"}
                          data-plasmic-override={overrides.لوگو4}
                          className={classNames(projectcss.all, sty.لوگو4)}
                        >
                          <PlasmicImg__
                            alt={""}
                            className={classNames(sty.img__xenwa)}
                            displayHeight={"15px"}
                            displayMaxHeight={"none"}
                            displayMaxWidth={"100%"}
                            displayMinHeight={"0"}
                            displayMinWidth={"0"}
                            displayWidth={"15px"}
                            loading={"lazy"}
                            src={{
                              src: "/plasmic/syn_apps_website/images/image5.svg",
                              fullWidth: 24,
                              fullHeight: 24,
                              aspectRatio: 1
                            }}
                          />
                        </div>
                      </Stack__>
                      <Stack__
                        as={"div"}
                        data-plasmic-name={
                          "\u0627\u0646\u062c\u0627\u0645\u0627\u0645\u0648\u0631\u0631\u0627\u0647\u0627\u0646\u062f\u0627\u0632\u06cc\u062a\u0648\u0633\u0637\u0633\u06cc\u0646\u0627\u067e\u0633"
                        }
                        data-plasmic-override={
                          overrides.انجامامورراهاندازیتوسطسیناپس
                        }
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.انجامامورراهاندازیتوسطسیناپس
                        )}
                      >
                        <div
                          data-plasmic-name={"\u0645\u062a\u06465"}
                          data-plasmic-override={overrides.متن5}
                          className={classNames(projectcss.all, sty.متن5)}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__h8Hb2
                            )}
                            dir={"rtl"}
                          >
                            {
                              "\u0627\u0646\u062c\u0627\u0645 \u0627\u0645\u0648\u0631 \u0631\u0627\u0647 \u0627\u0646\u062f\u0627\u0632\u06cc \u0648 \u0646\u0635\u0628 \u062a\u0648\u0633\u0637 \u0633\u06cc\u0646\u0627\u067e\u0633"
                            }
                          </div>
                        </div>
                        <div
                          data-plasmic-name={"\u0644\u0648\u06af\u06485"}
                          data-plasmic-override={overrides.لوگو5}
                          className={classNames(projectcss.all, sty.لوگو5)}
                        >
                          <PlasmicImg__
                            alt={""}
                            className={classNames(sty.img__p63NS)}
                            displayHeight={"15px"}
                            displayMaxHeight={"none"}
                            displayMaxWidth={"100%"}
                            displayMinHeight={"0"}
                            displayMinWidth={"0"}
                            displayWidth={"15px"}
                            loading={"lazy"}
                            src={{
                              src: "/plasmic/syn_apps_website/images/image5.svg",
                              fullWidth: 24,
                              fullHeight: 24,
                              aspectRatio: 1
                            }}
                          />
                        </div>
                      </Stack__>
                      <Stack__
                        as={"div"}
                        data-plasmic-name={
                          "\u0627\u062a\u0635\u0627\u0644\u0628\u0627Api"
                        }
                        data-plasmic-override={overrides.اتصالباApi}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.اتصالباApi)}
                        onClick={async event => {
                          const $steps = {};
                          $steps["goToApiDoc"] = true
                            ? (() => {
                                const actionArgs = {
                                  destination:
                                    "https://inlabgr.synappsgroup.com/api/his/docs"
                                };
                                return (({ destination }) => {
                                  if (
                                    typeof destination === "string" &&
                                    destination.startsWith("#")
                                  ) {
                                    document
                                      .getElementById(destination.substr(1))
                                      .scrollIntoView({ behavior: "smooth" });
                                  } else {
                                    __nextRouter?.push(destination);
                                  }
                                })?.apply(null, [actionArgs]);
                              })()
                            : undefined;
                          if (
                            $steps["goToApiDoc"] != null &&
                            typeof $steps["goToApiDoc"] === "object" &&
                            typeof $steps["goToApiDoc"].then === "function"
                          ) {
                            $steps["goToApiDoc"] = await $steps["goToApiDoc"];
                          }
                        }}
                      >
                        <div
                          data-plasmic-name={"\u0645\u062a\u0646"}
                          data-plasmic-override={overrides.متن}
                          className={classNames(projectcss.all, sty.متن)}
                          onClick={async event => {
                            const $steps = {};
                            $steps["goToApiDoc"] = true
                              ? (() => {
                                  const actionArgs = {
                                    destination:
                                      "https://inlabgr.synappsgroup.com/api/his/docs"
                                  };
                                  return (({ destination }) => {
                                    if (
                                      typeof destination === "string" &&
                                      destination.startsWith("#")
                                    ) {
                                      document
                                        .getElementById(destination.substr(1))
                                        .scrollIntoView({ behavior: "smooth" });
                                    } else {
                                      __nextRouter?.push(destination);
                                    }
                                  })?.apply(null, [actionArgs]);
                                })()
                              : undefined;
                            if (
                              $steps["goToApiDoc"] != null &&
                              typeof $steps["goToApiDoc"] === "object" &&
                              typeof $steps["goToApiDoc"].then === "function"
                            ) {
                              $steps["goToApiDoc"] = await $steps["goToApiDoc"];
                            }
                          }}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___4SCla
                            )}
                            dir={"rtl"}
                          >
                            <React.Fragment>
                              <React.Fragment>
                                {
                                  "\u0627\u062a\u0635\u0627\u0644 \u0627\u0632 \u0637\u0631\u06cc\u0642 API ("
                                }
                              </React.Fragment>
                              <span
                                className={
                                  "plasmic_default__all plasmic_default__span"
                                }
                                style={{
                                  color: "#0958D9",
                                  textDecorationLine: "underline"
                                }}
                              >
                                {"\u0645\u0634\u0627\u0647\u062f\u0647"}
                              </span>
                              <React.Fragment>{""}</React.Fragment>
                              <span
                                className={
                                  "plasmic_default__all plasmic_default__span"
                                }
                                style={{
                                  color: "var(--token-sD0iOLam3c1_)",
                                  textDecorationLine: "underline"
                                }}
                              >
                                {" API doc"}
                              </span>
                              <React.Fragment>{")"}</React.Fragment>
                            </React.Fragment>
                          </div>
                        </div>
                        <div
                          data-plasmic-name={"\u0644\u0648\u06af\u0648"}
                          data-plasmic-override={overrides.لوگو}
                          className={classNames(projectcss.all, sty.لوگو)}
                        >
                          <PlasmicImg__
                            alt={""}
                            className={classNames(sty.img__ck233)}
                            displayHeight={"20px"}
                            displayMaxHeight={"none"}
                            displayMaxWidth={"100%"}
                            displayMinHeight={"0"}
                            displayMinWidth={"0"}
                            displayWidth={"20px"}
                            loading={"lazy"}
                            src={{
                              src: "/plasmic/syn_apps_website/images/tickCircleBlueSvg.svg",
                              fullWidth: 150,
                              fullHeight: 150,
                              aspectRatio: 1
                            }}
                          />
                        </div>
                      </Stack__>
                    </Stack__>
                    <Button
                      data-plasmic-name={
                        "\u0645\u0637\u0627\u0644\u0639\u0647\u0628\u06cc\u0634\u062a\u0631"
                      }
                      data-plasmic-override={overrides.مطالعهبیشتر}
                      className={classNames("__wab_instance", sty.مطالعهبیشتر)}
                      color={"link"}
                      link={
                        "https://docs.google.com/document/d/1eaIiYcHi6CSQkAAmfBDBK9rxwFscuRnmbjSGOEb8mGQ/edit?usp=sharing"
                      }
                      small={true}
                      target={true}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__eNaJd
                        )}
                      >
                        {
                          "\u0645\u0637\u0627\u0644\u0639\u0647 \u0628\u06cc\u0634\u062a\u0631"
                        }
                      </div>
                    </Button>
                  </div>
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__pZvWf)}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={
                      hasVariant(globalVariants, "screen", "mobile")
                        ? "20%"
                        : "10%"
                    }
                    loading={"lazy"}
                    src={
                      hasVariant(globalVariants, "screen", "mobile")
                        ? {
                            src: "/plasmic/syn_apps_website/images/image3.svg",
                            fullWidth: 457.391,
                            fullHeight: 457.391,
                            aspectRatio: 1
                          }
                        : {
                            src: "/plasmic/syn_apps_website/images/image.svg",
                            fullWidth: 548.87,
                            fullHeight: 548.87,
                            aspectRatio: 1
                          }
                    }
                  />

                  <div
                    data-plasmic-name={
                      "\u062d\u0633\u0627\u0628\u06a9\u0627\u0631\u0628\u0631\u06cc\u0628\u0633\u0627\u0632\u06cc\u062f"
                    }
                    data-plasmic-override={overrides.حسابکاربریبسازید}
                    className={classNames(projectcss.all, sty.حسابکاربریبسازید)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__oAWro
                      )}
                    >
                      {
                        "\u062d\u0633\u0627\u0628 \u06a9\u0627\u0631\u0628\u0631\u06cc \u0628\u0633\u0627\u0632\u06cc\u062f"
                      }
                    </div>
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__y3OZx)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"238px"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"auto"}
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/syn_apps_website/images/lineSvg.svg",
                        fullWidth: 300,
                        fullHeight: 3,
                        aspectRatio: 119
                      }}
                    />

                    <div
                      className={classNames(projectcss.all, sty.freeBox__syL5O)}
                    >
                      <Stack__
                        as={"div"}
                        data-plasmic-name={
                          "\u0628\u0647\u0635\u0648\u0631\u062a\u06cc\u06a9\u062c\u0627"
                        }
                        data-plasmic-override={overrides.بهصورتیکجا}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.بهصورتیکجا)}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__tbzxi
                          )}
                          dir={"rtl"}
                        >
                          {
                            "\u0627\u0646\u0641\u0631\u0627\u062f\u06cc \u06cc\u0627 \u062c\u0645\u0639\u06cc (Import Excel)"
                          }
                        </div>
                        <PlasmicImg__
                          alt={""}
                          className={classNames(sty.img__mmnFs)}
                          displayHeight={"auto"}
                          displayMaxHeight={"none"}
                          displayMaxWidth={"none"}
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={"20px"}
                          loading={"lazy"}
                          src={{
                            src: "/plasmic/syn_apps_website/images/tickCircleBlueSvg.svg",
                            fullWidth: 150,
                            fullHeight: 150,
                            aspectRatio: 1
                          }}
                        />
                      </Stack__>
                      <Stack__
                        as={"div"}
                        data-plasmic-name={
                          "\u0646\u0642\u0634\u0647\u0627\u06cc\u0645\u062a\u0646\u0648\u0639"
                        }
                        data-plasmic-override={overrides.نقشهایمتنوع}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.نقشهایمتنوع)}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__mh6L
                          )}
                        >
                          {
                            "\u0646\u0642\u0634 \u0647\u0627\u06cc \u0645\u062a\u0646\u0648\u0639"
                          }
                        </div>
                        <PlasmicImg__
                          alt={""}
                          className={classNames(sty.img__a10C)}
                          displayHeight={"20px"}
                          displayMaxHeight={"none"}
                          displayMaxWidth={"100%"}
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={"20px"}
                          loading={"lazy"}
                          src={{
                            src: "/plasmic/syn_apps_website/images/tickCircleBlueSvg.svg",
                            fullWidth: 150,
                            fullHeight: 150,
                            aspectRatio: 1
                          }}
                        />
                      </Stack__>
                      <Stack__
                        as={"div"}
                        data-plasmic-name={
                          "\u0633\u0637\u0648\u062d\u062f\u0633\u062a\u0631\u0633\u06cc"
                        }
                        data-plasmic-override={overrides.سطوحدسترسی}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.سطوحدسترسی)}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__vHtQp
                          )}
                        >
                          {
                            "\u0633\u0637\u0648\u062d \u062f\u0633\u062a\u0631\u0633\u06cc"
                          }
                        </div>
                        <PlasmicImg__
                          alt={""}
                          className={classNames(sty.img__tBDw8)}
                          displayHeight={"20px"}
                          displayMaxHeight={"none"}
                          displayMaxWidth={"100%"}
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={"20px"}
                          loading={"lazy"}
                          src={{
                            src: "/plasmic/syn_apps_website/images/tickCircleBlueSvg.svg",
                            fullWidth: 150,
                            fullHeight: 150,
                            aspectRatio: 1
                          }}
                        />
                      </Stack__>
                      <Stack__
                        as={"div"}
                        data-plasmic-name={
                          "\u0628\u062f\u0648\u0646\u0646\u06cc\u0627\u0632\u0628\u0647\u0622\u0645\u0648\u0632\u0634\u0628\u0647\u06a9\u0627\u0631\u0628\u0631\u0627\u0646"
                        }
                        data-plasmic-override={
                          overrides.بدوننیازبهآموزشبهکاربران
                        }
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.بدوننیازبهآموزشبهکاربران
                        )}
                      >
                        <div
                          data-plasmic-name={"\u0645\u062a\u06466"}
                          data-plasmic-override={overrides.متن6}
                          className={classNames(projectcss.all, sty.متن6)}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__zpsc
                            )}
                            dir={"rtl"}
                          >
                            {
                              "\u0628\u062f\u0648\u0646 \u0646\u06cc\u0627\u0632 \u0628\u0647 \u0622\u0645\u0648\u0632\u0634 \u06a9\u0627\u0631\u0628\u0631\u0627\u0646"
                            }
                          </div>
                        </div>
                        <div
                          data-plasmic-name={"\u0644\u0648\u06af\u06486"}
                          data-plasmic-override={overrides.لوگو6}
                          className={classNames(projectcss.all, sty.لوگو6)}
                        >
                          <PlasmicImg__
                            alt={""}
                            className={classNames(sty.img__yYfvF)}
                            displayHeight={"20px"}
                            displayMaxHeight={"none"}
                            displayMaxWidth={"100%"}
                            displayMinHeight={"0"}
                            displayMinWidth={"0"}
                            displayWidth={"20px"}
                            loading={"lazy"}
                            src={{
                              src: "/plasmic/syn_apps_website/images/tickCircleBlueSvg.svg",
                              fullWidth: 150,
                              fullHeight: 150,
                              aspectRatio: 1
                            }}
                          />
                        </div>
                      </Stack__>
                    </div>
                  </div>
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__aybTi)}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={
                      hasVariant(globalVariants, "screen", "mobile")
                        ? "20%"
                        : "10%"
                    }
                    loading={"lazy"}
                    src={
                      hasVariant(globalVariants, "screen", "mobile")
                        ? {
                            src: "/plasmic/syn_apps_website/images/image3.svg",
                            fullWidth: 457.391,
                            fullHeight: 457.391,
                            aspectRatio: 1
                          }
                        : {
                            src: "/plasmic/syn_apps_website/images/image.svg",
                            fullWidth: 548.87,
                            fullHeight: 548.87,
                            aspectRatio: 1
                          }
                    }
                  />

                  <div
                    data-plasmic-name={
                      "\u0647\u0645\u06cc\u0634\u0647\u0648\u0647\u0645\u0647\u062c\u0627\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646\u062f\u0631\u062c\u06cc\u0628\u0634\u0645\u0627"
                    }
                    data-plasmic-override={
                      overrides.همیشهوهمهجابیمارستاندرجیبشما
                    }
                    className={classNames(
                      projectcss.all,
                      sty.همیشهوهمهجابیمارستاندرجیبشما
                    )}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__uol4U
                      )}
                    >
                      <React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ color: "var(--token-rw7HICykK2u6)" }}
                        >
                          {"\u0647\u0645\u06cc\u0634\u0647 "}
                        </span>
                        <React.Fragment>{"\u0648 "}</React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ color: "var(--token-Ke9rH2g82VNF)" }}
                        >
                          {"\u0647\u0645\u0647\u200c\u062c\u0627"}
                        </span>
                        <React.Fragment>
                          {
                            "\n\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u062f\u0631 \u0645\u0648\u0628\u0627\u06cc\u0644 \u0634\u0645\u0627"
                          }
                        </React.Fragment>
                      </React.Fragment>
                    </div>
                  </div>
                </Stack__>
              ) : null}
            </div>
          </Section>
          {false ? (
            <Section
              className={classNames("__wab_instance", sty.section__mhcVm)}
              size={
                hasVariant(globalVariants, "screen", "mobile")
                  ? "fullContentWidth"
                  : undefined
              }
            >
              <div className={classNames(projectcss.all, sty.freeBox__gyMto)}>
                <h2
                  className={classNames(
                    projectcss.all,
                    projectcss.h2,
                    projectcss.__wab_text,
                    sty.h2___2KYpq
                  )}
                >
                  {hasVariant(globalVariants, "screen", "mobile")
                    ? "Lorem Ipsum"
                    : "Lorem Ipsum"}
                </h2>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__ci1Ct
                  )}
                >
                  {
                    "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua"
                  }
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__orzU)}>
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__ywHqt)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        sty.freeBox___9B31C
                      )}
                    >
                      <PlasmicImg__
                        alt={""}
                        className={classNames(sty.img__wfvDm)}
                        displayHeight={"24px"}
                        displayMaxHeight={"none"}
                        displayMaxWidth={"100%"}
                        displayMinHeight={"0"}
                        displayMinWidth={"0"}
                        displayWidth={"24px"}
                        loading={"lazy"}
                        src={{
                          src: "/plasmic/syn_apps_website/images/newslettersSvg.svg",
                          fullWidth: 144,
                          fullHeight: 150,
                          aspectRatio: 0.96
                        }}
                      />

                      <h5
                        className={classNames(
                          projectcss.all,
                          projectcss.h5,
                          projectcss.__wab_text,
                          sty.h5__pj2Sx
                        )}
                      >
                        {"Newsletters"}
                      </h5>
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        sty.freeBox___6Ea3X
                      )}
                    >
                      <PlasmicImg__
                        alt={""}
                        className={classNames(sty.img__jndaF)}
                        displayHeight={"24px"}
                        displayMaxHeight={"none"}
                        displayMaxWidth={"100%"}
                        displayMinHeight={"0"}
                        displayMinWidth={"0"}
                        displayWidth={"24px"}
                        loading={"lazy"}
                        src={{
                          src: "/plasmic/syn_apps_website/images/messagingSvg.svg",
                          fullWidth: 144,
                          fullHeight: 150,
                          aspectRatio: 0.96
                        }}
                      />

                      <h5
                        className={classNames(
                          projectcss.all,
                          projectcss.h5,
                          projectcss.__wab_text,
                          sty.h5__hj8Sq
                        )}
                      >
                        {"Messaging"}
                      </h5>
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.freeBox__zKqYg)}
                    >
                      <PlasmicImg__
                        alt={""}
                        className={classNames(sty.img__wm2Uw)}
                        displayHeight={"24px"}
                        displayMaxHeight={"none"}
                        displayMaxWidth={"100%"}
                        displayMinHeight={"0"}
                        displayMinWidth={"0"}
                        displayWidth={"24px"}
                        loading={"lazy"}
                        src={{
                          src: "/plasmic/syn_apps_website/images/dashboardSvg.svg",
                          fullWidth: 144,
                          fullHeight: 150,
                          aspectRatio: 0.96
                        }}
                      />

                      <h5
                        className={classNames(
                          projectcss.all,
                          projectcss.h5,
                          projectcss.__wab_text,
                          sty.h5__xBvf0
                        )}
                      >
                        {"Dashboard"}
                      </h5>
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.freeBox__zkVen)}
                    >
                      <PlasmicImg__
                        alt={""}
                        className={classNames(sty.img__exPz0)}
                        displayHeight={"24px"}
                        displayMaxHeight={"none"}
                        displayMaxWidth={"100%"}
                        displayMinHeight={"0"}
                        displayMinWidth={"0"}
                        displayWidth={"24px"}
                        loading={"lazy"}
                        src={{
                          src: "/plasmic/syn_apps_website/images/automationsSvg.svg",
                          fullWidth: 144,
                          fullHeight: 150,
                          aspectRatio: 0.96
                        }}
                      />

                      <h5
                        className={classNames(
                          projectcss.all,
                          projectcss.h5,
                          projectcss.__wab_text,
                          sty.h5___4EF0E
                        )}
                      >
                        {"Automations"}
                      </h5>
                    </div>
                  </Stack__>
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__u5VvM)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__hfgh)}
                    >
                      <PlasmicImg__
                        alt={""}
                        className={classNames(sty.img___9If1A)}
                        displayHeight={"24px"}
                        displayMaxHeight={"none"}
                        displayMaxWidth={"100%"}
                        displayMinHeight={"0"}
                        displayMinWidth={"0"}
                        displayWidth={"24px"}
                        loading={"lazy"}
                        src={{
                          src: "/plasmic/syn_apps_website/images/modalsSvg.svg",
                          fullWidth: 144,
                          fullHeight: 150,
                          aspectRatio: 0.96
                        }}
                      />

                      <h5
                        className={classNames(
                          projectcss.all,
                          projectcss.h5,
                          projectcss.__wab_text,
                          sty.h5__igmW
                        )}
                      >
                        {"Modals"}
                      </h5>
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.freeBox__f30Vk)}
                    >
                      <PlasmicImg__
                        alt={""}
                        className={classNames(sty.img__v4HIh)}
                        displayHeight={"24px"}
                        displayMaxHeight={"none"}
                        displayMaxWidth={"100%"}
                        displayMinHeight={"0"}
                        displayMinWidth={"0"}
                        displayWidth={"24px"}
                        loading={"lazy"}
                        src={{
                          src: "/plasmic/syn_apps_website/images/userflowSvg.svg",
                          fullWidth: 144,
                          fullHeight: 150,
                          aspectRatio: 0.96
                        }}
                      />

                      <h5
                        className={classNames(
                          projectcss.all,
                          projectcss.h5,
                          projectcss.__wab_text,
                          sty.h5__gRao9
                        )}
                      >
                        {"User Flow"}
                      </h5>
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.freeBox__cvXqm)}
                    >
                      <PlasmicImg__
                        alt={""}
                        className={classNames(sty.img__v2Nne)}
                        displayHeight={"24px"}
                        displayMaxHeight={"none"}
                        displayMaxWidth={"100%"}
                        displayMinHeight={"0"}
                        displayMinWidth={"0"}
                        displayWidth={"24px"}
                        loading={"lazy"}
                        src={{
                          src: "/plasmic/syn_apps_website/images/securitySvg.svg",
                          fullWidth: 144,
                          fullHeight: 150,
                          aspectRatio: 0.96
                        }}
                      />

                      <h5
                        className={classNames(
                          projectcss.all,
                          projectcss.h5,
                          projectcss.__wab_text,
                          sty.h5__eBlvr
                        )}
                      >
                        {"Security"}
                      </h5>
                    </div>
                  </Stack__>
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__jP7Mg)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__u6DOy)}
                    >
                      <PlasmicImg__
                        alt={""}
                        className={classNames(sty.img__exEpw)}
                        displayHeight={"24px"}
                        displayMaxHeight={"none"}
                        displayMaxWidth={"100%"}
                        displayMinHeight={"0"}
                        displayMinWidth={"0"}
                        displayWidth={"24px"}
                        loading={"lazy"}
                        src={{
                          src: "/plasmic/syn_apps_website/images/archiveSvg.svg",
                          fullWidth: 144,
                          fullHeight: 150,
                          aspectRatio: 0.96
                        }}
                      />

                      <h5
                        className={classNames(
                          projectcss.all,
                          projectcss.h5,
                          projectcss.__wab_text,
                          sty.h5__cwMEg
                        )}
                      >
                        {"Archive"}
                      </h5>
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.freeBox__bico6)}
                    >
                      <PlasmicImg__
                        alt={""}
                        className={classNames(sty.img__maKBl)}
                        displayHeight={"24px"}
                        displayMaxHeight={"none"}
                        displayMaxWidth={"100%"}
                        displayMinHeight={"0"}
                        displayMinWidth={"0"}
                        displayWidth={"24px"}
                        loading={"lazy"}
                        src={{
                          src: "/plasmic/syn_apps_website/images/analyticsSvg.svg",
                          fullWidth: 144,
                          fullHeight: 150,
                          aspectRatio: 0.96
                        }}
                      />

                      <h5
                        className={classNames(
                          projectcss.all,
                          projectcss.h5,
                          projectcss.__wab_text,
                          sty.h5__viZpd
                        )}
                      >
                        {"Analytics"}
                      </h5>
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.freeBox__tB3H)}
                    >
                      <PlasmicImg__
                        alt={""}
                        className={classNames(sty.img__rakKh)}
                        displayHeight={"24px"}
                        displayMaxHeight={"none"}
                        displayMaxWidth={"100%"}
                        displayMinHeight={"0"}
                        displayMinWidth={"0"}
                        displayWidth={"24px"}
                        loading={"lazy"}
                        src={{
                          src: "/plasmic/syn_apps_website/images/searchSvg.svg",
                          fullWidth: 144,
                          fullHeight: 150,
                          aspectRatio: 0.96
                        }}
                      />

                      <h5
                        className={classNames(
                          projectcss.all,
                          projectcss.h5,
                          projectcss.__wab_text,
                          sty.h5__r7D6N
                        )}
                      >
                        {"Search"}
                      </h5>
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.freeBox__ptqWr)}
                    >
                      <PlasmicImg__
                        alt={""}
                        className={classNames(sty.img__kmuSr)}
                        displayHeight={"24px"}
                        displayMaxHeight={"none"}
                        displayMaxWidth={"100%"}
                        displayMinHeight={"0"}
                        displayMinWidth={"0"}
                        displayWidth={"24px"}
                        loading={"lazy"}
                        src={{
                          src: "/plasmic/syn_apps_website/images/protectionSvg.svg",
                          fullWidth: 144,
                          fullHeight: 150,
                          aspectRatio: 0.96
                        }}
                      />

                      <h5
                        className={classNames(
                          projectcss.all,
                          projectcss.h5,
                          projectcss.__wab_text,
                          sty.h5___44N6
                        )}
                      >
                        {"Protection"}
                      </h5>
                    </div>
                  </Stack__>
                  <Button
                    className={classNames("__wab_instance", sty.button__sbYr)}
                    color={"clear"}
                    link={"#"}
                    submitsForm={true}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__nfLA
                      )}
                    >
                      {hasVariant(globalVariants, "screen", "mobile")
                        ? "Show all feature"
                        : "Show all feature"}
                    </div>
                  </Button>
                </div>
              </div>
            </Section>
          ) : null}
          {false ? (
            <Section
              className={classNames("__wab_instance", sty.section__f9DYs)}
              size={
                hasVariant(globalVariants, "screen", "mobile")
                  ? "fullContentWidth"
                  : "fullContentWidth"
              }
            >
              <div className={classNames(projectcss.all, sty.freeBox__awd3Z)}>
                <div className={classNames(projectcss.all, sty.columns__qccXe)}>
                  <div
                    className={classNames(projectcss.all, sty.column__ezmCs)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__jpeFs)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"500px"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={
                        hasVariant(globalVariants, "screen", "mobile")
                          ? "284px"
                          : "auto"
                      }
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/syn_apps_website/images/image2Png.png",
                        fullWidth: 1040,
                        fullHeight: 1040,
                        aspectRatio: undefined
                      }}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        sty.freeBox___99I88
                      )}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__utIo
                        )}
                      >
                        <PlasmicImg__
                          alt={""}
                          className={classNames(sty.img___6R8N9)}
                          displayHeight={"24px"}
                          displayMaxHeight={"none"}
                          displayMaxWidth={"100%"}
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={"24px"}
                          loading={"lazy"}
                          src={{
                            src: "/plasmic/syn_apps_website/images/bankSvg.svg",
                            fullWidth: 150,
                            fullHeight: 150,
                            aspectRatio: 1
                          }}
                        />

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__gXse3
                          )}
                        >
                          {
                            "Lorem ipsum dolor sit amet, consectetur adipiscing elit"
                          }
                        </div>
                      </div>
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.column___0L3Ds)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__zhX)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__hMzNj
                        )}
                      >
                        <PlasmicImg__
                          alt={""}
                          className={classNames(sty.img__mnQxd)}
                          displayHeight={"2px"}
                          displayMaxHeight={"none"}
                          displayMaxWidth={"100%"}
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={"26px"}
                          loading={"lazy"}
                          src={{
                            src: "/plasmic/syn_apps_website/images/lineBlueSvg.svg",
                            fullWidth: 300,
                            fullHeight: 23,
                            aspectRatio: 13
                          }}
                        />

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__jdvHn
                          )}
                        >
                          {"Lorem Ipsum"}
                        </div>
                      </div>
                      <h3
                        className={classNames(
                          projectcss.all,
                          projectcss.h3,
                          projectcss.__wab_text,
                          sty.h3__tzzhQ
                        )}
                      >
                        {"Lorem Ipsum"}
                      </h3>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___6Zu8G
                        )}
                      >
                        {
                          "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. "
                        }
                      </div>
                      <Button
                        className={classNames(
                          "__wab_instance",
                          sty.button__gvtRx
                        )}
                        color={"blue"}
                        submitsForm={true}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__zucnl
                          )}
                        >
                          {hasVariant(globalVariants, "screen", "mobile")
                            ? "lorem Ipsum"
                            : "lorem Ipsum"}
                        </div>
                      </Button>
                    </div>
                  </div>
                </div>
              </div>
              <div className={classNames(projectcss.all, sty.freeBox__xkfQp)}>
                <div className={classNames(projectcss.all, sty.columns__piKi)}>
                  <div
                    className={classNames(projectcss.all, sty.column__iCv4H)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        sty.freeBox___6MblO
                      )}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__bLek8
                        )}
                      >
                        <PlasmicImg__
                          alt={""}
                          className={classNames(sty.img__qvudg)}
                          displayHeight={"2px"}
                          displayMaxHeight={"none"}
                          displayMaxWidth={"100%"}
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={"26px"}
                          loading={"lazy"}
                          src={{
                            src: "/plasmic/syn_apps_website/images/lineBlueSvg.svg",
                            fullWidth: 300,
                            fullHeight: 23,
                            aspectRatio: 13
                          }}
                        />

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__ajely
                          )}
                        >
                          {"Lorem Ipsum"}
                        </div>
                      </div>
                      <h3
                        className={classNames(
                          projectcss.all,
                          projectcss.h3,
                          projectcss.__wab_text,
                          sty.h3__uu3Al
                        )}
                      >
                        {"Lorem Ipsum"}
                      </h3>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__tgSky
                        )}
                      >
                        {
                          "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. "
                        }
                      </div>
                      <Button
                        className={classNames(
                          "__wab_instance",
                          sty.button__pKlch
                        )}
                        color={"blue"}
                        submitsForm={true}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__eWu4D
                          )}
                        >
                          {"lorem Ipsum"}
                        </div>
                      </Button>
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.column__xpicb)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img___0BHx4)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={
                        hasVariant(globalVariants, "screen", "mobile")
                          ? "284px"
                          : "500px"
                      }
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={
                        hasVariant(globalVariants, "screen", "mobile")
                          ? "284px"
                          : "auto"
                      }
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/syn_apps_website/images/image3Png.png",
                        fullWidth: 1040,
                        fullHeight: 1040,
                        aspectRatio: undefined
                      }}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        sty.freeBox___3I8Jc
                      )}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__vstB8
                        )}
                      >
                        <PlasmicImg__
                          alt={""}
                          className={classNames(sty.img__pfJpm)}
                          displayHeight={"24px"}
                          displayMaxHeight={"none"}
                          displayMaxWidth={"100%"}
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={"24px"}
                          loading={"lazy"}
                          src={{
                            src: "/plasmic/syn_apps_website/images/bankSvg.svg",
                            fullWidth: 150,
                            fullHeight: 150,
                            aspectRatio: 1
                          }}
                        />

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__cKxUi
                          )}
                        >
                          {
                            "Lorem ipsum dolor sit amet, consectetur adipiscing elit"
                          }
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
              <div className={classNames(projectcss.all, sty.freeBox__nxRaM)}>
                <div className={classNames(projectcss.all, sty.columns__oAdSg)}>
                  <div className={classNames(projectcss.all, sty.column__rCeS)}>
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__atlu)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={
                        hasVariant(globalVariants, "screen", "mobile")
                          ? "284px"
                          : "500px"
                      }
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"auto"}
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/syn_apps_website/images/image4Png.png",
                        fullWidth: 1040,
                        fullHeight: 1040,
                        aspectRatio: undefined
                      }}
                    />

                    <div
                      className={classNames(projectcss.all, sty.freeBox__wh5Gk)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__kRy9H
                        )}
                      >
                        <PlasmicImg__
                          alt={""}
                          className={classNames(sty.img__iUsuS)}
                          displayHeight={"24px"}
                          displayMaxHeight={"none"}
                          displayMaxWidth={"100%"}
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={"24px"}
                          loading={"lazy"}
                          src={{
                            src: "/plasmic/syn_apps_website/images/bankSvg.svg",
                            fullWidth: 150,
                            fullHeight: 150,
                            aspectRatio: 1
                          }}
                        />

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__eQowa
                          )}
                        >
                          {
                            "Lorem ipsum dolor sit amet, consectetur adipiscing elit"
                          }
                        </div>
                      </div>
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.column__pWqXq)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__pRc3H)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__orcn0
                        )}
                      >
                        <PlasmicImg__
                          alt={""}
                          className={classNames(sty.img__gNq2T)}
                          displayHeight={"2px"}
                          displayMaxHeight={"none"}
                          displayMaxWidth={"100%"}
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={"26px"}
                          loading={"lazy"}
                          src={{
                            src: "/plasmic/syn_apps_website/images/lineBlueSvg.svg",
                            fullWidth: 300,
                            fullHeight: 23,
                            aspectRatio: 13
                          }}
                        />

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__y3YQz
                          )}
                        >
                          {"Lorem Ipsum"}
                        </div>
                      </div>
                      <h3
                        className={classNames(
                          projectcss.all,
                          projectcss.h3,
                          projectcss.__wab_text,
                          sty.h3__k4Uj
                        )}
                      >
                        {"Lorem Ipsum"}
                      </h3>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__fupP
                        )}
                      >
                        {
                          "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. "
                        }
                      </div>
                      <Button
                        className={classNames(
                          "__wab_instance",
                          sty.button__jgeAa
                        )}
                        color={"blue"}
                        submitsForm={true}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__vPiWm
                          )}
                        >
                          {"lorem Ipsum"}
                        </div>
                      </Button>
                    </div>
                  </div>
                </div>
              </div>
            </Section>
          ) : null}
          {false ? (
            <Section
              background={"darkBlue"}
              className={classNames("__wab_instance", sty.section__ymwtF)}
              size={
                hasVariant(globalVariants, "screen", "mobile")
                  ? "fullContentWidth"
                  : "fullContentWidth"
              }
            >
              <div className={classNames(projectcss.all, sty.freeBox__mTfOi)}>
                <div
                  className={classNames(projectcss.all, sty.freeBox___3PfVd)}
                >
                  <h2
                    className={classNames(
                      projectcss.all,
                      projectcss.h2,
                      projectcss.__wab_text,
                      sty.h2__zMesu
                    )}
                  >
                    {hasVariant(globalVariants, "screen", "mobile")
                      ? "Lorem Ipsum"
                      : "Lorem Ipsum"}
                  </h2>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___4K8AY
                    )}
                  >
                    {hasVariant(globalVariants, "screen", "mobile")
                      ? "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex."
                      : "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex."}
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox___8B8KB)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__bSntb)}
                    >
                      <PlasmicImg__
                        alt={""}
                        className={classNames(sty.img__le2L)}
                        displayHeight={"auto"}
                        displayMaxHeight={"none"}
                        displayMaxWidth={
                          hasVariant(globalVariants, "screen", "mobile")
                            ? "24px"
                            : "100%"
                        }
                        displayMinHeight={"0"}
                        displayMinWidth={"0"}
                        displayWidth={"auto"}
                        loading={"lazy"}
                        src={{
                          src: "/plasmic/syn_apps_website/images/tickCircleSvg.svg",
                          fullWidth: 150,
                          fullHeight: 150,
                          aspectRatio: 1
                        }}
                      />
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        sty.freeBox___5YjRr
                      )}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___4ZNry
                        )}
                      >
                        {"Lorem ipsum dolor sit amet"}
                      </div>
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__nLm3L)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__a8G4G)}
                    >
                      <PlasmicImg__
                        alt={""}
                        className={classNames(sty.img__keBl9)}
                        displayHeight={"auto"}
                        displayMaxHeight={"none"}
                        displayMaxWidth={
                          hasVariant(globalVariants, "screen", "mobile")
                            ? "24px"
                            : "100%"
                        }
                        displayMinHeight={"0"}
                        displayMinWidth={"0"}
                        displayWidth={"auto"}
                        loading={"lazy"}
                        src={{
                          src: "/plasmic/syn_apps_website/images/tickCircleSvg.svg",
                          fullWidth: 150,
                          fullHeight: 150,
                          aspectRatio: 1
                        }}
                      />
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.freeBox__rfbvg)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__h9Dll
                        )}
                      >
                        {"Lorem ipsum dolor sit amet"}
                      </div>
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__wn8SD)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        sty.freeBox___6Du0P
                      )}
                    >
                      <PlasmicImg__
                        alt={""}
                        className={classNames(sty.img__jHJy9)}
                        displayHeight={"auto"}
                        displayMaxHeight={"none"}
                        displayMaxWidth={
                          hasVariant(globalVariants, "screen", "mobile")
                            ? "24px"
                            : "100%"
                        }
                        displayMinHeight={"0"}
                        displayMinWidth={"0"}
                        displayWidth={"auto"}
                        loading={"lazy"}
                        src={{
                          src: "/plasmic/syn_apps_website/images/tickCircleSvg.svg",
                          fullWidth: 150,
                          fullHeight: 150,
                          aspectRatio: 1
                        }}
                      />
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.freeBox__pTXo)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__s2EGx
                        )}
                      >
                        {"Lorem ipsum dolor sit amet"}
                      </div>
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__tlRa1)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__za6Ja)}
                    >
                      <PlasmicImg__
                        alt={""}
                        className={classNames(sty.img__q5Ymq)}
                        displayHeight={"auto"}
                        displayMaxHeight={"none"}
                        displayMaxWidth={
                          hasVariant(globalVariants, "screen", "mobile")
                            ? "24px"
                            : "100%"
                        }
                        displayMinHeight={"0"}
                        displayMinWidth={"0"}
                        displayWidth={"auto"}
                        loading={"lazy"}
                        src={{
                          src: "/plasmic/syn_apps_website/images/tickCircleSvg.svg",
                          fullWidth: 150,
                          fullHeight: 150,
                          aspectRatio: 1
                        }}
                      />
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.freeBox__xryVn)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__uc6Nm
                        )}
                      >
                        {"Lorem ipsum dolor sit amet"}
                      </div>
                    </div>
                  </div>
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__iik9Q)}>
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__xOkmQ)}
                    displayHeight={
                      hasVariant(globalVariants, "screen", "mobile")
                        ? "100%"
                        : "700px"
                    }
                    displayMaxHeight={
                      hasVariant(globalVariants, "screen", "mobile")
                        ? "174px"
                        : "none"
                    }
                    displayMaxWidth={
                      hasVariant(globalVariants, "screen", "mobile")
                        ? "284px"
                        : "100%"
                    }
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={
                      hasVariant(globalVariants, "screen", "mobile")
                        ? "100%"
                        : "1440px"
                    }
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/syn_apps_website/images/frame10Png.png",
                      fullWidth: 1070,
                      fullHeight: 1402,
                      aspectRatio: undefined
                    }}
                  />

                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__t8Q6)}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"auto"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/syn_apps_website/images/heroImgPng.png",
                      fullWidth: 2280,
                      fullHeight: 1400,
                      aspectRatio: undefined
                    }}
                  />
                </div>
              </div>
            </Section>
          ) : null}
          {false ? (
            <Section
              className={classNames("__wab_instance", sty.section___6K2Yp)}
              size={
                hasVariant(globalVariants, "screen", "mobile")
                  ? "fullContentWidth"
                  : "faq"
              }
            >
              <div className={classNames(projectcss.all, sty.freeBox__m4WfR)}>
                <div className={classNames(projectcss.all, sty.freeBox__mgqQq)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___6PBvb
                    )}
                  >
                    {"Lorem Ipsum"}
                  </div>
                  <h2
                    className={classNames(
                      projectcss.all,
                      projectcss.h2,
                      projectcss.__wab_text,
                      sty.h2__fkSBp
                    )}
                  >
                    {"Lorem Ipsum"}
                  </h2>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__xVrxt
                    )}
                  >
                    {
                      "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. "
                    }
                  </div>
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__exCsV)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__lYvid)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__l5WZw)}
                    >
                      <h6
                        className={classNames(
                          projectcss.all,
                          projectcss.h6,
                          projectcss.__wab_text,
                          sty.h6__qu9
                        )}
                      >
                        {"Lorem ipsum dolor sit amet, consectetur"}
                      </h6>
                      <PlasmicImg__
                        alt={""}
                        className={classNames(sty.img__npm0L)}
                        displayHeight={"auto"}
                        displayMaxHeight={"24px"}
                        displayMaxWidth={"24px"}
                        displayMinHeight={"0"}
                        displayMinWidth={"0"}
                        displayWidth={"auto"}
                        loading={"lazy"}
                        src={{
                          src: "/plasmic/syn_apps_website/images/minusCirlceSvg.svg",
                          fullWidth: 150,
                          fullHeight: 150,
                          aspectRatio: 1
                        }}
                      />
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__jLjVd
                      )}
                    >
                      {
                        "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. "
                      }
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__hdmJw)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__skBai)}
                    >
                      <h6
                        className={classNames(
                          projectcss.all,
                          projectcss.h6,
                          projectcss.__wab_text,
                          sty.h6__b30N6
                        )}
                      >
                        {"Lorem ipsum dolor sit amet, consectetur"}
                      </h6>
                      <PlasmicImg__
                        alt={""}
                        className={classNames(sty.img__ikdEc)}
                        displayHeight={"auto"}
                        displayMaxHeight={"24px"}
                        displayMaxWidth={"24px"}
                        displayMinHeight={"0"}
                        displayMinWidth={"0"}
                        displayWidth={"auto"}
                        loading={"lazy"}
                        src={{
                          src: "/plasmic/syn_apps_website/images/addCircleSvg.svg",
                          fullWidth: 150,
                          fullHeight: 150,
                          aspectRatio: 1
                        }}
                      />
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__peLg3)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__rHwRi)}
                    >
                      <h6
                        className={classNames(
                          projectcss.all,
                          projectcss.h6,
                          projectcss.__wab_text,
                          sty.h6__vtQV
                        )}
                      >
                        {"Lorem ipsum dolor sit amet, consectetur"}
                      </h6>
                      <PlasmicImg__
                        alt={""}
                        className={classNames(sty.img__w5R)}
                        displayHeight={"auto"}
                        displayMaxHeight={"24px"}
                        displayMaxWidth={"24px"}
                        displayMinHeight={"0"}
                        displayMinWidth={"0"}
                        displayWidth={"auto"}
                        loading={"lazy"}
                        src={{
                          src: "/plasmic/syn_apps_website/images/addCircleSvg.svg",
                          fullWidth: 150,
                          fullHeight: 150,
                          aspectRatio: 1
                        }}
                      />
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__pqAxn)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__o2UKg)}
                    >
                      <h6
                        className={classNames(
                          projectcss.all,
                          projectcss.h6,
                          projectcss.__wab_text,
                          sty.h6__xycYh
                        )}
                      >
                        {"Lorem ipsum dolor sit amet, consectetur"}
                      </h6>
                      <PlasmicImg__
                        alt={""}
                        className={classNames(sty.img__mqHvu)}
                        displayHeight={"auto"}
                        displayMaxHeight={"24px"}
                        displayMaxWidth={"24px"}
                        displayMinHeight={"0"}
                        displayMinWidth={"0"}
                        displayWidth={"auto"}
                        loading={"lazy"}
                        src={{
                          src: "/plasmic/syn_apps_website/images/addCircleSvg.svg",
                          fullWidth: 150,
                          fullHeight: 150,
                          aspectRatio: 1
                        }}
                      />
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox___0F8Tv)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__hY2A3)}
                    >
                      <h6
                        className={classNames(
                          projectcss.all,
                          projectcss.h6,
                          projectcss.__wab_text,
                          sty.h6__vsEpK
                        )}
                      >
                        {"Lorem ipsum dolor sit amet, consectetur"}
                      </h6>
                      <PlasmicImg__
                        alt={""}
                        className={classNames(sty.img__zmyUa)}
                        displayHeight={"auto"}
                        displayMaxHeight={"24px"}
                        displayMaxWidth={"24px"}
                        displayMinHeight={"0"}
                        displayMinWidth={"0"}
                        displayWidth={"auto"}
                        loading={"lazy"}
                        src={{
                          src: "/plasmic/syn_apps_website/images/addCircleSvg.svg",
                          fullWidth: 150,
                          fullHeight: 150,
                          aspectRatio: 1
                        }}
                      />
                    </div>
                  </div>
                </div>
              </div>
            </Section>
          ) : null}
          {false ? (
            <Section
              background={"blue"}
              className={classNames("__wab_instance", sty.section__mUtRy)}
              size={
                hasVariant(globalVariants, "screen", "mobile")
                  ? "fullContentWidth"
                  : "fullContentWidth"
              }
            >
              <div className={classNames(projectcss.all, sty.freeBox__p6AI)}>
                <h1
                  className={classNames(
                    projectcss.all,
                    projectcss.h1,
                    projectcss.__wab_text,
                    sty.h1__jBNpo
                  )}
                >
                  {"Lorem Ipsum"}
                </h1>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__nbt1R
                  )}
                >
                  {
                    "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex."
                  }
                </div>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__spO8V)}
                >
                  <TextInput
                    data-plasmic-name={"textInput"}
                    data-plasmic-override={overrides.textInput}
                    className={classNames("__wab_instance", sty.textInput)}
                    onChange={async (...eventArgs) => {
                      ((...eventArgs) => {
                        generateStateOnChangeProp($state, [
                          "textInput",
                          "value"
                        ])((e => e.target?.value).apply(null, eventArgs));
                      }).apply(null, eventArgs);
                      if (
                        eventArgs.length > 1 &&
                        eventArgs[1] &&
                        eventArgs[1]._plasmic_state_init_
                      ) {
                        return;
                      }
                    }}
                    value={
                      generateStateValueProp($state, ["textInput", "value"]) ??
                      ""
                    }
                  />

                  <Button
                    className={classNames("__wab_instance", sty.button__vgb6X)}
                    color={"blue"}
                    link={"#"}
                    submitsForm={true}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___563Z7
                      )}
                    >
                      {hasVariant(globalVariants, "screen", "mobile")
                        ? "Subscribe"
                        : "Subscribe"}
                    </div>
                  </Button>
                </Stack__>
              </div>
              <PlasmicImg__
                alt={""}
                className={classNames(sty.img___6QT)}
                displayHeight={"auto"}
                displayMaxHeight={"700px"}
                displayMaxWidth={"1140px"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={"auto"}
                loading={"lazy"}
                src={{
                  src: "/plasmic/syn_apps_website/images/image6Png.png",
                  fullWidth: 2880,
                  fullHeight: 900,
                  aspectRatio: undefined
                }}
              />
            </Section>
          ) : null}
          <FooterSection
            data-plasmic-name={"footerSection"}
            data-plasmic-override={overrides.footerSection}
            className={classNames("__wab_instance", sty.footerSection)}
          />

          <Embed
            data-plasmic-name={"clarity"}
            data-plasmic-override={overrides.clarity}
            className={classNames("__wab_instance", sty.clarity)}
            code={
              '<script type="text/javascript">\r\n    (function(c,l,a,r,i,t,y){\r\n        c[a]=c[a]||function(){(c[a].q=c[a].q||[]).push(arguments)};\r\n        t=l.createElement(r);t.async=1;t.src="https://www.clarity.ms/tag/"+i;\r\n        y=l.getElementsByTagName(r)[0];y.parentNode.insertBefore(t,y);\r\n    })(window, document, "clarity", "script", "pdwjpd5rjs");\r\n</script>'
            }
          />

          <Embed
            data-plasmic-name={"googleAnalytics"}
            data-plasmic-override={overrides.googleAnalytics}
            className={classNames("__wab_instance", sty.googleAnalytics)}
            code={
              "<!-- Google Analytics -->\r\n<script async src=\"https://www.googletagmanager.com/gtag/js?id=G-8KP97N4EK7\"></script>\r\n<script>\r\n  window.dataLayer = window.dataLayer || [];\r\n  function gtag(){dataLayer.push(arguments);}\r\n  gtag('js', new Date());\r\n\r\n  gtag('config', 'G-8KP97N4EK7');\r\n</script>\r\n"
            }
          />

          <AntdModal
            data-plasmic-name={"modalInlabLogin"}
            data-plasmic-override={overrides.modalInlabLogin}
            className={classNames("__wab_instance", sty.modalInlabLogin)}
            closeIcon={null}
            defaultStylesClassName={classNames(
              projectcss.root_reset,
              projectcss.plasmic_default_styles,
              projectcss.plasmic_mixins,
              projectcss.plasmic_tokens,
              plasmic_antd_5_hostless_css.plasmic_tokens
            )}
            hideFooter={true}
            maskClosable={true}
            modalScopeClassName={sty["modalInlabLogin__modal"]}
            onOpenChange={async (...eventArgs) => {
              generateStateOnChangeProp($state, [
                "modalInlabLogin",
                "open"
              ]).apply(null, eventArgs);
            }}
            open={generateStateValueProp($state, ["modalInlabLogin", "open"])}
            title={
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__tWg)}
              >
                <Icons8CloseSvgIcon
                  className={classNames(projectcss.all, sty.svg___7Dtjr)}
                  onClick={async event => {
                    const $steps = {};
                    $steps["updateModalInlabLoginOpen"] = true
                      ? (() => {
                          const actionArgs = {
                            variable: {
                              objRoot: $state,
                              variablePath: ["modalInlabLogin", "open"]
                            },
                            operation: 0,
                            value: false
                          };
                          return (({
                            variable,
                            value,
                            startIndex,
                            deleteCount
                          }) => {
                            if (!variable) {
                              return;
                            }
                            const { objRoot, variablePath } = variable;
                            $stateSet(objRoot, variablePath, value);
                            return value;
                          })?.apply(null, [actionArgs]);
                        })()
                      : undefined;
                    if (
                      $steps["updateModalInlabLoginOpen"] != null &&
                      typeof $steps["updateModalInlabLoginOpen"] === "object" &&
                      typeof $steps["updateModalInlabLoginOpen"].then ===
                        "function"
                    ) {
                      $steps["updateModalInlabLoginOpen"] = await $steps[
                        "updateModalInlabLoginOpen"
                      ];
                    }
                  }}
                  role={"img"}
                />

                {false ? (
                  <TextInput
                    data-plasmic-name={"searchbarWard2"}
                    data-plasmic-override={overrides.searchbarWard2}
                    className={classNames("__wab_instance", sty.searchbarWard2)}
                    endIcon={
                      <Icons8CloseSvgIcon
                        className={classNames(projectcss.all, sty.svg___12185)}
                        role={"img"}
                      />
                    }
                    onChange={async (...eventArgs) => {
                      ((...eventArgs) => {
                        generateStateOnChangeProp($state, [
                          "searchbarWard2",
                          "value"
                        ])((e => e.target?.value).apply(null, eventArgs));
                      }).apply(null, eventArgs);
                      if (
                        eventArgs.length > 1 &&
                        eventArgs[1] &&
                        eventArgs[1]._plasmic_state_init_
                      ) {
                        return;
                      }
                    }}
                    placeholder={
                      "\u0646\u0627\u0645 \u0628\u062e\u0634 \u0645\u0648\u0631\u062f\u0646\u0638\u0631 \u0631\u0627 \u0648\u0627\u0631\u062f \u06a9\u0646\u06cc\u062f"
                    }
                    startIcon={
                      <SearchSvg2Icon
                        className={classNames(projectcss.all, sty.svg__mdQbs)}
                        role={"img"}
                      />
                    }
                    value={
                      generateStateValueProp($state, [
                        "searchbarWard2",
                        "value"
                      ]) ?? ""
                    }
                  />
                ) : null}
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__ilkP
                  )}
                >
                  {
                    "\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u062e\u0648\u062f \u0631\u0627 \u0627\u0646\u062a\u062e\u0627\u0628 \u06a9\u0646\u06cc\u062f"
                  }
                </div>
              </Stack__>
            }
            trigger={null}
          >
            <DataFetcher
              data-plasmic-name={"getHospitalsLinks"}
              data-plasmic-override={overrides.getHospitalsLinks}
              className={classNames("__wab_instance", sty.getHospitalsLinks)}
              dataName={"hospitalslinks_fetchedData"}
              errorDisplay={
                <DataCtxReader__>
                  {$ctx => "Error fetching data"}
                </DataCtxReader__>
              }
              errorName={"hospitalslinks_fetchError"}
              loadingDisplay={
                <DataCtxReader__>{$ctx => "Loading..."}</DataCtxReader__>
              }
              method={"GET"}
              noLayout={false}
              url={"https://n8n.synappsgroup.com/webhook/hospitals/links"}
            >
              <DataCtxReader__>
                {$ctx => (
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"hospitalsList"}
                    data-plasmic-override={overrides.hospitalsList}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.hospitalsList)}
                  >
                    {(_par =>
                      !_par ? [] : Array.isArray(_par) ? _par : [_par])(
                      (() => {
                        try {
                          return $ctx.hospitalslinks_fetchedData;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return [];
                          }
                          throw e;
                        }
                      })()
                    ).map((__plasmic_item_0, __plasmic_idx_0) => {
                      const currentItem = __plasmic_item_0;
                      const currentIndex = __plasmic_idx_0;
                      return (
                        <div
                          data-plasmic-name={"hospitalName"}
                          data-plasmic-override={overrides.hospitalName}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.hospitalName
                          )}
                          key={currentIndex}
                          onClick={async event => {
                            const $steps = {};
                            $steps["updateModalInlabLoginOpen"] = true
                              ? (() => {
                                  const actionArgs = {
                                    variable: {
                                      objRoot: $state,
                                      variablePath: ["modalInlabLogin", "open"]
                                    },
                                    operation: 0,
                                    value: false
                                  };
                                  return (({
                                    variable,
                                    value,
                                    startIndex,
                                    deleteCount
                                  }) => {
                                    if (!variable) {
                                      return;
                                    }
                                    const { objRoot, variablePath } = variable;
                                    $stateSet(objRoot, variablePath, value);
                                    return value;
                                  })?.apply(null, [actionArgs]);
                                })()
                              : undefined;
                            if (
                              $steps["updateModalInlabLoginOpen"] != null &&
                              typeof $steps["updateModalInlabLoginOpen"] ===
                                "object" &&
                              typeof $steps["updateModalInlabLoginOpen"]
                                .then === "function"
                            ) {
                              $steps["updateModalInlabLoginOpen"] =
                                await $steps["updateModalInlabLoginOpen"];
                            }
                            $steps["goToPage"] = true
                              ? (() => {
                                  const actionArgs = {
                                    destination: (() => {
                                      try {
                                        return currentItem.app_url;
                                      } catch (e) {
                                        if (
                                          e instanceof TypeError ||
                                          e?.plasmicType ===
                                            "PlasmicUndefinedDataError"
                                        ) {
                                          return undefined;
                                        }
                                        throw e;
                                      }
                                    })()
                                  };
                                  return (({ destination }) => {
                                    if (
                                      typeof destination === "string" &&
                                      destination.startsWith("#")
                                    ) {
                                      document
                                        .getElementById(destination.substr(1))
                                        .scrollIntoView({ behavior: "smooth" });
                                    } else {
                                      __nextRouter?.push(destination);
                                    }
                                  })?.apply(null, [actionArgs]);
                                })()
                              : undefined;
                            if (
                              $steps["goToPage"] != null &&
                              typeof $steps["goToPage"] === "object" &&
                              typeof $steps["goToPage"].then === "function"
                            ) {
                              $steps["goToPage"] = await $steps["goToPage"];
                            }
                          }}
                        >
                          <React.Fragment>
                            {currentItem.hospital_name}
                          </React.Fragment>
                        </div>
                      );
                    })}
                  </Stack__>
                )}
              </DataCtxReader__>
            </DataFetcher>
          </AntdModal>
        </div>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  pageContent: [
    "pageContent",
    "header",
    "\u062a\u0633\u062a\u06a9\u0646\u064a\u062fDemo",
    "headerButton",
    "menuTitle",
    "mobileMenu",
    "menu",
    "\u062a\u0633\u062a\u06a9\u0646\u064a\u062fDemo3",
    "\u062a\u0633\u062a\u06a9\u0646\u064a\u062fDemo2",
    "\u0648\u0631\u0648\u062f\u06a9\u0627\u0631\u0628\u0631\u0627\u0646",
    "\u062f\u064a\u0648\u0627\u0631\u0639\u0634\u0642",
    "\u0642\u064a\u0645\u062a\u06af\u0630\u0627\u0631\u064a",
    "\u0633\u0648\u0627\u0644\u0627\u062a\u0634\u0627\u064a\u0639",
    "\u062f\u0631\u0628\u0627\u0631\u0647\u0633\u06cc\u0646\u0627\u067e\u0633",
    "section1Header",
    "content",
    "actionButton",
    "\u062f\u0631\u062e\u0648\u0627\u0633\u062a\u0631\u0627\u0647\u0627\u0646\u062f\u0627\u0632\u06cc2",
    "section2Gifs",
    "gifLab",
    "actionButtons6",
    "\u062f\u0631\u062e\u0648\u0627\u0633\u062a\u0631\u0627\u0647\u0627\u0646\u062f\u0627\u0632\u06cc8",
    "textBoxes",
    "title",
    "description",
    "actionButtons4",
    "\u062f\u0631\u062e\u0648\u0627\u0633\u062a\u0631\u0627\u0647\u0627\u0646\u062f\u0627\u0632\u06cc6",
    "gifRadio",
    "textBoxes2",
    "title2",
    "description2",
    "actionButtons",
    "\u062f\u0631\u062e\u0648\u0627\u0633\u062a\u0631\u0627\u0647\u0627\u0646\u062f\u0627\u0632\u06cc3",
    "actionButtons5",
    "\u062f\u0631\u062e\u0648\u0627\u0633\u062a\u0631\u0627\u0647\u0627\u0646\u062f\u0627\u0632\u06cc7",
    "section3Userbase",
    "statistics",
    "customersStack",
    "customersList",
    "\u0645\u0631\u06a9\u0632\u0637\u0628\u06cc\u06a9\u0648\u062f\u06a9\u0627\u0646",
    "\u0633\u06cc\u0646\u0627",
    "\u0627\u0645\u0627\u0645\u062e\u0645\u06cc\u0646\u06cc",
    "\u0645\u0631\u06a9\u0632\u0642\u0644\u0628",
    "\u0634\u0631\u06cc\u0639\u062a\u06cc",
    "\u0627\u0645\u06cc\u0631\u0627\u0639\u0644\u0645",
    "\u0622\u0631\u0634",
    "\u0641\u0627\u0631\u0627\u0628\u06cc",
    "\u0631\u0627\u0632\u06cc",
    "\u0628\u0647\u0627\u0631\u0644\u0648",
    "\u0631\u0648\u0632\u0628\u0647",
    "\u0636\u06cc\u0627\u0626\u06cc\u0627\u0646",
    "\u0628\u0647\u0631\u0627\u0645\u06cc",
    "\u062d\u06a9\u06cc\u0645",
    "\u06cc\u0627\u0633",
    "section4WallOfLove",
    "loveContents",
    "loveMessage",
    "message",
    "profileBox",
    "nameRole",
    "name",
    "roleTitle",
    "image",
    "section5Price",
    "\u067e\u0644\u0646\u0647\u0627\u06cc\u0642\u06cc\u0645\u062a",
    "\u06a9\u0645\u062a\u0631\u0627\u0632150",
    "\u0642\u06cc\u0645\u062a",
    "feature",
    "_150300",
    "\u0642\u06cc\u0645\u062a2",
    "feature2",
    "verticalStack",
    "verticalStack2",
    "\u0628\u06cc\u0634\u062a\u0631\u0627\u0632300",
    "\u0642\u06cc\u0645\u062a3",
    "feature3",
    "actionButtons2",
    "\u062f\u0631\u062e\u0648\u0627\u0633\u062a\u0631\u0627\u0647\u0627\u0646\u062f\u0627\u0632\u06cc4",
    "section6Faq",
    "faqCategories",
    "_3\u067e\u0631\u062f\u0627\u062e\u062a\u0648\u0647\u0632\u06cc\u0646\u0647",
    "_2\u0627\u0645\u0646\u06cc\u062a\u0646\u0631\u0645\u0627\u0641\u0632\u0627\u0631",
    "_4\u067e\u0634\u062a\u064a\u0628\u0627\u0646\u064a",
    "_3\u0645\u062c\u0648\u0632\u0647\u0627\u0648\u062a\u0627\u064a\u064a\u062f\u064a\u0647\u0647\u0627",
    "_1\u0646\u0635\u0628\u0648\u0631\u0627\u0647\u0627\u0646\u062f\u0627\u0632\u064a",
    "faq\u0646\u0635\u0628\u0648\u0631\u0627\u0647\u0627\u0646\u062f\u0627\u0632\u064a",
    "q",
    "q2",
    "q3",
    "q4",
    "q5",
    "q6",
    "faq\u0627\u0645\u0646\u06cc\u062a\u0646\u0631\u0645\u0627\u0641\u0632\u0627\u0631",
    "q122",
    "q12",
    "faq\u067e\u0631\u062f\u0627\u062e\u062a\u0648\u0647\u0632\u06cc\u0646\u0647",
    "q13",
    "q23",
    "q33",
    "actionButtons3",
    "\u062f\u0631\u062e\u0648\u0627\u0633\u062a\u0631\u0627\u0647\u0627\u0646\u062f\u0627\u0632\u06cc5",
    "flow",
    "\u0627\u062a\u0635\u0627\u0644\u0628\u0647His",
    "\u062a\u0637\u0627\u0628\u0642\u0628\u0627\u062a\u0645\u0627\u0645His\u0647\u0627",
    "\u0627\u062a\u0635\u0627\u0644\u0628\u0647\u062f\u06cc\u062a\u0627\u0628\u06cc\u0633",
    "\u0628\u0631\u0631\u0648\u06cc\u0633\u0631\u0648\u0631\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646",
    "\u0645\u062a\u06462",
    "\u0644\u0648\u06af\u06482",
    "\u0635\u0631\u0641\u0627\u062f\u0633\u062a\u0631\u0633\u06cc\u062e\u0648\u0627\u0646\u062f\u0646",
    "\u0645\u062a\u06463",
    "\u0644\u0648\u06af\u06483",
    "\u0628\u062f\u0648\u0646\u0646\u06cc\u0627\u0632\u0628\u0647\u062f\u0633\u062a\u0631\u0633\u06cc\u0646\u0648\u0634\u062a\u0646",
    "\u0645\u062a\u06464",
    "\u0644\u0648\u06af\u06484",
    "\u0627\u0646\u062c\u0627\u0645\u0627\u0645\u0648\u0631\u0631\u0627\u0647\u0627\u0646\u062f\u0627\u0632\u06cc\u062a\u0648\u0633\u0637\u0633\u06cc\u0646\u0627\u067e\u0633",
    "\u0645\u062a\u06465",
    "\u0644\u0648\u06af\u06485",
    "\u0627\u062a\u0635\u0627\u0644\u0628\u0627Api",
    "\u0645\u062a\u0646",
    "\u0644\u0648\u06af\u0648",
    "\u0645\u0637\u0627\u0644\u0639\u0647\u0628\u06cc\u0634\u062a\u0631",
    "\u062d\u0633\u0627\u0628\u06a9\u0627\u0631\u0628\u0631\u06cc\u0628\u0633\u0627\u0632\u06cc\u062f",
    "\u0628\u0647\u0635\u0648\u0631\u062a\u06cc\u06a9\u062c\u0627",
    "\u0646\u0642\u0634\u0647\u0627\u06cc\u0645\u062a\u0646\u0648\u0639",
    "\u0633\u0637\u0648\u062d\u062f\u0633\u062a\u0631\u0633\u06cc",
    "\u0628\u062f\u0648\u0646\u0646\u06cc\u0627\u0632\u0628\u0647\u0622\u0645\u0648\u0632\u0634\u0628\u0647\u06a9\u0627\u0631\u0628\u0631\u0627\u0646",
    "\u0645\u062a\u06466",
    "\u0644\u0648\u06af\u06486",
    "\u0647\u0645\u06cc\u0634\u0647\u0648\u0647\u0645\u0647\u062c\u0627\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646\u062f\u0631\u062c\u06cc\u0628\u0634\u0645\u0627",
    "textInput",
    "footerSection",
    "clarity",
    "googleAnalytics",
    "modalInlabLogin",
    "getHospitalsLinks",
    "hospitalsList",
    "hospitalName",
    "searchbarWard2"
  ],

  header: [
    "header",
    "\u062a\u0633\u062a\u06a9\u0646\u064a\u062fDemo",
    "headerButton",
    "menuTitle",
    "mobileMenu",
    "menu",
    "\u062a\u0633\u062a\u06a9\u0646\u064a\u062fDemo3",
    "\u062a\u0633\u062a\u06a9\u0646\u064a\u062fDemo2",
    "\u0648\u0631\u0648\u062f\u06a9\u0627\u0631\u0628\u0631\u0627\u0646",
    "\u062f\u064a\u0648\u0627\u0631\u0639\u0634\u0642",
    "\u0642\u064a\u0645\u062a\u06af\u0630\u0627\u0631\u064a",
    "\u0633\u0648\u0627\u0644\u0627\u062a\u0634\u0627\u064a\u0639",
    "\u062f\u0631\u0628\u0627\u0631\u0647\u0633\u06cc\u0646\u0627\u067e\u0633"
  ],

  تستکنيدDemo: ["\u062a\u0633\u062a\u06a9\u0646\u064a\u062fDemo"],
  headerButton: ["headerButton"],
  menuTitle: ["menuTitle"],
  mobileMenu: [
    "mobileMenu",
    "menu",
    "\u062a\u0633\u062a\u06a9\u0646\u064a\u062fDemo3",
    "\u062a\u0633\u062a\u06a9\u0646\u064a\u062fDemo2",
    "\u0648\u0631\u0648\u062f\u06a9\u0627\u0631\u0628\u0631\u0627\u0646",
    "\u062f\u064a\u0648\u0627\u0631\u0639\u0634\u0642",
    "\u0642\u064a\u0645\u062a\u06af\u0630\u0627\u0631\u064a",
    "\u0633\u0648\u0627\u0644\u0627\u062a\u0634\u0627\u064a\u0639",
    "\u062f\u0631\u0628\u0627\u0631\u0647\u0633\u06cc\u0646\u0627\u067e\u0633"
  ],

  menu: [
    "menu",
    "\u062a\u0633\u062a\u06a9\u0646\u064a\u062fDemo3",
    "\u062a\u0633\u062a\u06a9\u0646\u064a\u062fDemo2",
    "\u0648\u0631\u0648\u062f\u06a9\u0627\u0631\u0628\u0631\u0627\u0646",
    "\u062f\u064a\u0648\u0627\u0631\u0639\u0634\u0642",
    "\u0642\u064a\u0645\u062a\u06af\u0630\u0627\u0631\u064a",
    "\u0633\u0648\u0627\u0644\u0627\u062a\u0634\u0627\u064a\u0639",
    "\u062f\u0631\u0628\u0627\u0631\u0647\u0633\u06cc\u0646\u0627\u067e\u0633"
  ],

  تستکنيدDemo3: [
    "\u062a\u0633\u062a\u06a9\u0646\u064a\u062fDemo3",
    "\u062a\u0633\u062a\u06a9\u0646\u064a\u062fDemo2"
  ],

  تستکنيدDemo2: ["\u062a\u0633\u062a\u06a9\u0646\u064a\u062fDemo2"],
  ورودکاربران: [
    "\u0648\u0631\u0648\u062f\u06a9\u0627\u0631\u0628\u0631\u0627\u0646"
  ],

  ديوارعشق: ["\u062f\u064a\u0648\u0627\u0631\u0639\u0634\u0642"],
  قيمتگذاري: ["\u0642\u064a\u0645\u062a\u06af\u0630\u0627\u0631\u064a"],
  سوالاتشايع: ["\u0633\u0648\u0627\u0644\u0627\u062a\u0634\u0627\u064a\u0639"],
  دربارهسیناپس: [
    "\u062f\u0631\u0628\u0627\u0631\u0647\u0633\u06cc\u0646\u0627\u067e\u0633"
  ],

  section1Header: [
    "section1Header",
    "content",
    "actionButton",
    "\u062f\u0631\u062e\u0648\u0627\u0633\u062a\u0631\u0627\u0647\u0627\u0646\u062f\u0627\u0632\u06cc2"
  ],

  content: [
    "content",
    "actionButton",
    "\u062f\u0631\u062e\u0648\u0627\u0633\u062a\u0631\u0627\u0647\u0627\u0646\u062f\u0627\u0632\u06cc2"
  ],

  actionButton: [
    "actionButton",
    "\u062f\u0631\u062e\u0648\u0627\u0633\u062a\u0631\u0627\u0647\u0627\u0646\u062f\u0627\u0632\u06cc2"
  ],

  درخواستراهاندازی2: [
    "\u062f\u0631\u062e\u0648\u0627\u0633\u062a\u0631\u0627\u0647\u0627\u0646\u062f\u0627\u0632\u06cc2"
  ],

  section2Gifs: [
    "section2Gifs",
    "gifLab",
    "actionButtons6",
    "\u062f\u0631\u062e\u0648\u0627\u0633\u062a\u0631\u0627\u0647\u0627\u0646\u062f\u0627\u0632\u06cc8",
    "textBoxes",
    "title",
    "description",
    "actionButtons4",
    "\u062f\u0631\u062e\u0648\u0627\u0633\u062a\u0631\u0627\u0647\u0627\u0646\u062f\u0627\u0632\u06cc6",
    "gifRadio",
    "textBoxes2",
    "title2",
    "description2",
    "actionButtons",
    "\u062f\u0631\u062e\u0648\u0627\u0633\u062a\u0631\u0627\u0647\u0627\u0646\u062f\u0627\u0632\u06cc3",
    "actionButtons5",
    "\u062f\u0631\u062e\u0648\u0627\u0633\u062a\u0631\u0627\u0647\u0627\u0646\u062f\u0627\u0632\u06cc7"
  ],

  gifLab: [
    "gifLab",
    "actionButtons6",
    "\u062f\u0631\u062e\u0648\u0627\u0633\u062a\u0631\u0627\u0647\u0627\u0646\u062f\u0627\u0632\u06cc8",
    "textBoxes",
    "title",
    "description",
    "actionButtons4",
    "\u062f\u0631\u062e\u0648\u0627\u0633\u062a\u0631\u0627\u0647\u0627\u0646\u062f\u0627\u0632\u06cc6"
  ],

  actionButtons6: [
    "actionButtons6",
    "\u062f\u0631\u062e\u0648\u0627\u0633\u062a\u0631\u0627\u0647\u0627\u0646\u062f\u0627\u0632\u06cc8"
  ],

  درخواستراهاندازی8: [
    "\u062f\u0631\u062e\u0648\u0627\u0633\u062a\u0631\u0627\u0647\u0627\u0646\u062f\u0627\u0632\u06cc8"
  ],

  textBoxes: [
    "textBoxes",
    "title",
    "description",
    "actionButtons4",
    "\u062f\u0631\u062e\u0648\u0627\u0633\u062a\u0631\u0627\u0647\u0627\u0646\u062f\u0627\u0632\u06cc6"
  ],

  title: ["title"],
  description: ["description"],
  actionButtons4: [
    "actionButtons4",
    "\u062f\u0631\u062e\u0648\u0627\u0633\u062a\u0631\u0627\u0647\u0627\u0646\u062f\u0627\u0632\u06cc6"
  ],

  درخواستراهاندازی6: [
    "\u062f\u0631\u062e\u0648\u0627\u0633\u062a\u0631\u0627\u0647\u0627\u0646\u062f\u0627\u0632\u06cc6"
  ],

  gifRadio: [
    "gifRadio",
    "textBoxes2",
    "title2",
    "description2",
    "actionButtons",
    "\u062f\u0631\u062e\u0648\u0627\u0633\u062a\u0631\u0627\u0647\u0627\u0646\u062f\u0627\u0632\u06cc3",
    "actionButtons5",
    "\u062f\u0631\u062e\u0648\u0627\u0633\u062a\u0631\u0627\u0647\u0627\u0646\u062f\u0627\u0632\u06cc7"
  ],

  textBoxes2: [
    "textBoxes2",
    "title2",
    "description2",
    "actionButtons",
    "\u062f\u0631\u062e\u0648\u0627\u0633\u062a\u0631\u0627\u0647\u0627\u0646\u062f\u0627\u0632\u06cc3"
  ],

  title2: ["title2"],
  description2: ["description2"],
  actionButtons: [
    "actionButtons",
    "\u062f\u0631\u062e\u0648\u0627\u0633\u062a\u0631\u0627\u0647\u0627\u0646\u062f\u0627\u0632\u06cc3"
  ],

  درخواستراهاندازی3: [
    "\u062f\u0631\u062e\u0648\u0627\u0633\u062a\u0631\u0627\u0647\u0627\u0646\u062f\u0627\u0632\u06cc3"
  ],

  actionButtons5: [
    "actionButtons5",
    "\u062f\u0631\u062e\u0648\u0627\u0633\u062a\u0631\u0627\u0647\u0627\u0646\u062f\u0627\u0632\u06cc7"
  ],

  درخواستراهاندازی7: [
    "\u062f\u0631\u062e\u0648\u0627\u0633\u062a\u0631\u0627\u0647\u0627\u0646\u062f\u0627\u0632\u06cc7"
  ],

  section3Userbase: [
    "section3Userbase",
    "statistics",
    "customersStack",
    "customersList",
    "\u0645\u0631\u06a9\u0632\u0637\u0628\u06cc\u06a9\u0648\u062f\u06a9\u0627\u0646",
    "\u0633\u06cc\u0646\u0627",
    "\u0627\u0645\u0627\u0645\u062e\u0645\u06cc\u0646\u06cc",
    "\u0645\u0631\u06a9\u0632\u0642\u0644\u0628",
    "\u0634\u0631\u06cc\u0639\u062a\u06cc",
    "\u0627\u0645\u06cc\u0631\u0627\u0639\u0644\u0645",
    "\u0622\u0631\u0634",
    "\u0641\u0627\u0631\u0627\u0628\u06cc",
    "\u0631\u0627\u0632\u06cc",
    "\u0628\u0647\u0627\u0631\u0644\u0648",
    "\u0631\u0648\u0632\u0628\u0647",
    "\u0636\u06cc\u0627\u0626\u06cc\u0627\u0646",
    "\u0628\u0647\u0631\u0627\u0645\u06cc",
    "\u062d\u06a9\u06cc\u0645",
    "\u06cc\u0627\u0633"
  ],

  statistics: ["statistics"],
  customersStack: [
    "customersStack",
    "customersList",
    "\u0645\u0631\u06a9\u0632\u0637\u0628\u06cc\u06a9\u0648\u062f\u06a9\u0627\u0646",
    "\u0633\u06cc\u0646\u0627",
    "\u0627\u0645\u0627\u0645\u062e\u0645\u06cc\u0646\u06cc",
    "\u0645\u0631\u06a9\u0632\u0642\u0644\u0628",
    "\u0634\u0631\u06cc\u0639\u062a\u06cc",
    "\u0627\u0645\u06cc\u0631\u0627\u0639\u0644\u0645",
    "\u0622\u0631\u0634",
    "\u0641\u0627\u0631\u0627\u0628\u06cc",
    "\u0631\u0627\u0632\u06cc",
    "\u0628\u0647\u0627\u0631\u0644\u0648",
    "\u0631\u0648\u0632\u0628\u0647",
    "\u0636\u06cc\u0627\u0626\u06cc\u0627\u0646",
    "\u0628\u0647\u0631\u0627\u0645\u06cc",
    "\u062d\u06a9\u06cc\u0645",
    "\u06cc\u0627\u0633"
  ],

  customersList: [
    "customersList",
    "\u0645\u0631\u06a9\u0632\u0637\u0628\u06cc\u06a9\u0648\u062f\u06a9\u0627\u0646",
    "\u0633\u06cc\u0646\u0627",
    "\u0627\u0645\u0627\u0645\u062e\u0645\u06cc\u0646\u06cc",
    "\u0645\u0631\u06a9\u0632\u0642\u0644\u0628",
    "\u0634\u0631\u06cc\u0639\u062a\u06cc",
    "\u0627\u0645\u06cc\u0631\u0627\u0639\u0644\u0645",
    "\u0622\u0631\u0634",
    "\u0641\u0627\u0631\u0627\u0628\u06cc",
    "\u0631\u0627\u0632\u06cc",
    "\u0628\u0647\u0627\u0631\u0644\u0648",
    "\u0631\u0648\u0632\u0628\u0647",
    "\u0636\u06cc\u0627\u0626\u06cc\u0627\u0646",
    "\u0628\u0647\u0631\u0627\u0645\u06cc",
    "\u062d\u06a9\u06cc\u0645",
    "\u06cc\u0627\u0633"
  ],

  مرکزطبیکودکان: [
    "\u0645\u0631\u06a9\u0632\u0637\u0628\u06cc\u06a9\u0648\u062f\u06a9\u0627\u0646"
  ],

  سینا: ["\u0633\u06cc\u0646\u0627"],
  امامخمینی: ["\u0627\u0645\u0627\u0645\u062e\u0645\u06cc\u0646\u06cc"],
  مرکزقلب: ["\u0645\u0631\u06a9\u0632\u0642\u0644\u0628"],
  شریعتی: ["\u0634\u0631\u06cc\u0639\u062a\u06cc"],
  امیراعلم: ["\u0627\u0645\u06cc\u0631\u0627\u0639\u0644\u0645"],
  آرش: ["\u0622\u0631\u0634"],
  فارابی: ["\u0641\u0627\u0631\u0627\u0628\u06cc"],
  رازی: ["\u0631\u0627\u0632\u06cc"],
  بهارلو: ["\u0628\u0647\u0627\u0631\u0644\u0648"],
  روزبه: ["\u0631\u0648\u0632\u0628\u0647"],
  ضیائیان: ["\u0636\u06cc\u0627\u0626\u06cc\u0627\u0646"],
  بهرامی: ["\u0628\u0647\u0631\u0627\u0645\u06cc"],
  حکیم: ["\u062d\u06a9\u06cc\u0645"],
  یاس: ["\u06cc\u0627\u0633"],
  section4WallOfLove: [
    "section4WallOfLove",
    "loveContents",
    "loveMessage",
    "message",
    "profileBox",
    "nameRole",
    "name",
    "roleTitle",
    "image"
  ],

  loveContents: [
    "loveContents",
    "loveMessage",
    "message",
    "profileBox",
    "nameRole",
    "name",
    "roleTitle",
    "image"
  ],

  loveMessage: [
    "loveMessage",
    "message",
    "profileBox",
    "nameRole",
    "name",
    "roleTitle",
    "image"
  ],

  message: ["message"],
  profileBox: ["profileBox", "nameRole", "name", "roleTitle", "image"],
  nameRole: ["nameRole", "name", "roleTitle"],
  name: ["name"],
  roleTitle: ["roleTitle"],
  image: ["image"],
  section5Price: [
    "section5Price",
    "\u067e\u0644\u0646\u0647\u0627\u06cc\u0642\u06cc\u0645\u062a",
    "\u06a9\u0645\u062a\u0631\u0627\u0632150",
    "\u0642\u06cc\u0645\u062a",
    "feature",
    "_150300",
    "\u0642\u06cc\u0645\u062a2",
    "feature2",
    "verticalStack",
    "verticalStack2",
    "\u0628\u06cc\u0634\u062a\u0631\u0627\u0632300",
    "\u0642\u06cc\u0645\u062a3",
    "feature3",
    "actionButtons2",
    "\u062f\u0631\u062e\u0648\u0627\u0633\u062a\u0631\u0627\u0647\u0627\u0646\u062f\u0627\u0632\u06cc4"
  ],

  پلنهایقیمت: [
    "\u067e\u0644\u0646\u0647\u0627\u06cc\u0642\u06cc\u0645\u062a",
    "\u06a9\u0645\u062a\u0631\u0627\u0632150",
    "\u0642\u06cc\u0645\u062a",
    "feature",
    "_150300",
    "\u0642\u06cc\u0645\u062a2",
    "feature2",
    "verticalStack",
    "verticalStack2",
    "\u0628\u06cc\u0634\u062a\u0631\u0627\u0632300",
    "\u0642\u06cc\u0645\u062a3",
    "feature3"
  ],

  کمتراز150: [
    "\u06a9\u0645\u062a\u0631\u0627\u0632150",
    "\u0642\u06cc\u0645\u062a",
    "feature"
  ],

  قیمت: ["\u0642\u06cc\u0645\u062a"],
  feature: ["feature"],
  _150300: ["_150300", "\u0642\u06cc\u0645\u062a2", "feature2"],
  قیمت2: ["\u0642\u06cc\u0645\u062a2"],
  feature2: ["feature2"],
  verticalStack: ["verticalStack"],
  verticalStack2: ["verticalStack2"],
  بیشتراز300: [
    "\u0628\u06cc\u0634\u062a\u0631\u0627\u0632300",
    "\u0642\u06cc\u0645\u062a3",
    "feature3"
  ],

  قیمت3: ["\u0642\u06cc\u0645\u062a3"],
  feature3: ["feature3"],
  actionButtons2: [
    "actionButtons2",
    "\u062f\u0631\u062e\u0648\u0627\u0633\u062a\u0631\u0627\u0647\u0627\u0646\u062f\u0627\u0632\u06cc4"
  ],

  درخواستراهاندازی4: [
    "\u062f\u0631\u062e\u0648\u0627\u0633\u062a\u0631\u0627\u0647\u0627\u0646\u062f\u0627\u0632\u06cc4"
  ],

  section6Faq: [
    "section6Faq",
    "faqCategories",
    "_3\u067e\u0631\u062f\u0627\u062e\u062a\u0648\u0647\u0632\u06cc\u0646\u0647",
    "_2\u0627\u0645\u0646\u06cc\u062a\u0646\u0631\u0645\u0627\u0641\u0632\u0627\u0631",
    "_4\u067e\u0634\u062a\u064a\u0628\u0627\u0646\u064a",
    "_3\u0645\u062c\u0648\u0632\u0647\u0627\u0648\u062a\u0627\u064a\u064a\u062f\u064a\u0647\u0647\u0627",
    "_1\u0646\u0635\u0628\u0648\u0631\u0627\u0647\u0627\u0646\u062f\u0627\u0632\u064a",
    "faq\u0646\u0635\u0628\u0648\u0631\u0627\u0647\u0627\u0646\u062f\u0627\u0632\u064a",
    "q",
    "q2",
    "q3",
    "q4",
    "q5",
    "q6",
    "faq\u0627\u0645\u0646\u06cc\u062a\u0646\u0631\u0645\u0627\u0641\u0632\u0627\u0631",
    "q122",
    "q12",
    "faq\u067e\u0631\u062f\u0627\u062e\u062a\u0648\u0647\u0632\u06cc\u0646\u0647",
    "q13",
    "q23",
    "q33",
    "actionButtons3",
    "\u062f\u0631\u062e\u0648\u0627\u0633\u062a\u0631\u0627\u0647\u0627\u0646\u062f\u0627\u0632\u06cc5",
    "flow",
    "\u0627\u062a\u0635\u0627\u0644\u0628\u0647His",
    "\u062a\u0637\u0627\u0628\u0642\u0628\u0627\u062a\u0645\u0627\u0645His\u0647\u0627",
    "\u0627\u062a\u0635\u0627\u0644\u0628\u0647\u062f\u06cc\u062a\u0627\u0628\u06cc\u0633",
    "\u0628\u0631\u0631\u0648\u06cc\u0633\u0631\u0648\u0631\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646",
    "\u0645\u062a\u06462",
    "\u0644\u0648\u06af\u06482",
    "\u0635\u0631\u0641\u0627\u062f\u0633\u062a\u0631\u0633\u06cc\u062e\u0648\u0627\u0646\u062f\u0646",
    "\u0645\u062a\u06463",
    "\u0644\u0648\u06af\u06483",
    "\u0628\u062f\u0648\u0646\u0646\u06cc\u0627\u0632\u0628\u0647\u062f\u0633\u062a\u0631\u0633\u06cc\u0646\u0648\u0634\u062a\u0646",
    "\u0645\u062a\u06464",
    "\u0644\u0648\u06af\u06484",
    "\u0627\u0646\u062c\u0627\u0645\u0627\u0645\u0648\u0631\u0631\u0627\u0647\u0627\u0646\u062f\u0627\u0632\u06cc\u062a\u0648\u0633\u0637\u0633\u06cc\u0646\u0627\u067e\u0633",
    "\u0645\u062a\u06465",
    "\u0644\u0648\u06af\u06485",
    "\u0627\u062a\u0635\u0627\u0644\u0628\u0627Api",
    "\u0645\u062a\u0646",
    "\u0644\u0648\u06af\u0648",
    "\u0645\u0637\u0627\u0644\u0639\u0647\u0628\u06cc\u0634\u062a\u0631",
    "\u062d\u0633\u0627\u0628\u06a9\u0627\u0631\u0628\u0631\u06cc\u0628\u0633\u0627\u0632\u06cc\u062f",
    "\u0628\u0647\u0635\u0648\u0631\u062a\u06cc\u06a9\u062c\u0627",
    "\u0646\u0642\u0634\u0647\u0627\u06cc\u0645\u062a\u0646\u0648\u0639",
    "\u0633\u0637\u0648\u062d\u062f\u0633\u062a\u0631\u0633\u06cc",
    "\u0628\u062f\u0648\u0646\u0646\u06cc\u0627\u0632\u0628\u0647\u0622\u0645\u0648\u0632\u0634\u0628\u0647\u06a9\u0627\u0631\u0628\u0631\u0627\u0646",
    "\u0645\u062a\u06466",
    "\u0644\u0648\u06af\u06486",
    "\u0647\u0645\u06cc\u0634\u0647\u0648\u0647\u0645\u0647\u062c\u0627\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646\u062f\u0631\u062c\u06cc\u0628\u0634\u0645\u0627"
  ],

  faqCategories: [
    "faqCategories",
    "_3\u067e\u0631\u062f\u0627\u062e\u062a\u0648\u0647\u0632\u06cc\u0646\u0647",
    "_2\u0627\u0645\u0646\u06cc\u062a\u0646\u0631\u0645\u0627\u0641\u0632\u0627\u0631",
    "_4\u067e\u0634\u062a\u064a\u0628\u0627\u0646\u064a",
    "_3\u0645\u062c\u0648\u0632\u0647\u0627\u0648\u062a\u0627\u064a\u064a\u062f\u064a\u0647\u0647\u0627",
    "_1\u0646\u0635\u0628\u0648\u0631\u0627\u0647\u0627\u0646\u062f\u0627\u0632\u064a"
  ],

  _3پرداختوهزینه: [
    "_3\u067e\u0631\u062f\u0627\u062e\u062a\u0648\u0647\u0632\u06cc\u0646\u0647"
  ],

  _2امنیتنرمافزار: [
    "_2\u0627\u0645\u0646\u06cc\u062a\u0646\u0631\u0645\u0627\u0641\u0632\u0627\u0631"
  ],

  _4پشتيباني: ["_4\u067e\u0634\u062a\u064a\u0628\u0627\u0646\u064a"],
  _3مجوزهاوتاييديهها: [
    "_3\u0645\u062c\u0648\u0632\u0647\u0627\u0648\u062a\u0627\u064a\u064a\u062f\u064a\u0647\u0647\u0627"
  ],

  _1نصبوراهاندازي: [
    "_1\u0646\u0635\u0628\u0648\u0631\u0627\u0647\u0627\u0646\u062f\u0627\u0632\u064a"
  ],

  faqنصبوراهاندازي: [
    "faq\u0646\u0635\u0628\u0648\u0631\u0627\u0647\u0627\u0646\u062f\u0627\u0632\u064a",
    "q",
    "q2",
    "q3",
    "q4",
    "q5",
    "q6"
  ],

  q: ["q"],
  q2: ["q2"],
  q3: ["q3"],
  q4: ["q4"],
  q5: ["q5"],
  q6: ["q6"],
  faqامنیتنرمافزار: [
    "faq\u0627\u0645\u0646\u06cc\u062a\u0646\u0631\u0645\u0627\u0641\u0632\u0627\u0631",
    "q122",
    "q12"
  ],

  q122: ["q122"],
  q12: ["q12"],
  faqپرداختوهزینه: [
    "faq\u067e\u0631\u062f\u0627\u062e\u062a\u0648\u0647\u0632\u06cc\u0646\u0647",
    "q13",
    "q23",
    "q33"
  ],

  q13: ["q13"],
  q23: ["q23"],
  q33: ["q33"],
  actionButtons3: [
    "actionButtons3",
    "\u062f\u0631\u062e\u0648\u0627\u0633\u062a\u0631\u0627\u0647\u0627\u0646\u062f\u0627\u0632\u06cc5"
  ],

  درخواستراهاندازی5: [
    "\u062f\u0631\u062e\u0648\u0627\u0633\u062a\u0631\u0627\u0647\u0627\u0646\u062f\u0627\u0632\u06cc5"
  ],

  flow: [
    "flow",
    "\u0627\u062a\u0635\u0627\u0644\u0628\u0647His",
    "\u062a\u0637\u0627\u0628\u0642\u0628\u0627\u062a\u0645\u0627\u0645His\u0647\u0627",
    "\u0627\u062a\u0635\u0627\u0644\u0628\u0647\u062f\u06cc\u062a\u0627\u0628\u06cc\u0633",
    "\u0628\u0631\u0631\u0648\u06cc\u0633\u0631\u0648\u0631\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646",
    "\u0645\u062a\u06462",
    "\u0644\u0648\u06af\u06482",
    "\u0635\u0631\u0641\u0627\u062f\u0633\u062a\u0631\u0633\u06cc\u062e\u0648\u0627\u0646\u062f\u0646",
    "\u0645\u062a\u06463",
    "\u0644\u0648\u06af\u06483",
    "\u0628\u062f\u0648\u0646\u0646\u06cc\u0627\u0632\u0628\u0647\u062f\u0633\u062a\u0631\u0633\u06cc\u0646\u0648\u0634\u062a\u0646",
    "\u0645\u062a\u06464",
    "\u0644\u0648\u06af\u06484",
    "\u0627\u0646\u062c\u0627\u0645\u0627\u0645\u0648\u0631\u0631\u0627\u0647\u0627\u0646\u062f\u0627\u0632\u06cc\u062a\u0648\u0633\u0637\u0633\u06cc\u0646\u0627\u067e\u0633",
    "\u0645\u062a\u06465",
    "\u0644\u0648\u06af\u06485",
    "\u0627\u062a\u0635\u0627\u0644\u0628\u0627Api",
    "\u0645\u062a\u0646",
    "\u0644\u0648\u06af\u0648",
    "\u0645\u0637\u0627\u0644\u0639\u0647\u0628\u06cc\u0634\u062a\u0631",
    "\u062d\u0633\u0627\u0628\u06a9\u0627\u0631\u0628\u0631\u06cc\u0628\u0633\u0627\u0632\u06cc\u062f",
    "\u0628\u0647\u0635\u0648\u0631\u062a\u06cc\u06a9\u062c\u0627",
    "\u0646\u0642\u0634\u0647\u0627\u06cc\u0645\u062a\u0646\u0648\u0639",
    "\u0633\u0637\u0648\u062d\u062f\u0633\u062a\u0631\u0633\u06cc",
    "\u0628\u062f\u0648\u0646\u0646\u06cc\u0627\u0632\u0628\u0647\u0622\u0645\u0648\u0632\u0634\u0628\u0647\u06a9\u0627\u0631\u0628\u0631\u0627\u0646",
    "\u0645\u062a\u06466",
    "\u0644\u0648\u06af\u06486",
    "\u0647\u0645\u06cc\u0634\u0647\u0648\u0647\u0645\u0647\u062c\u0627\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646\u062f\u0631\u062c\u06cc\u0628\u0634\u0645\u0627"
  ],

  اتصالبهHis: [
    "\u0627\u062a\u0635\u0627\u0644\u0628\u0647His",
    "\u062a\u0637\u0627\u0628\u0642\u0628\u0627\u062a\u0645\u0627\u0645His\u0647\u0627",
    "\u0627\u062a\u0635\u0627\u0644\u0628\u0647\u062f\u06cc\u062a\u0627\u0628\u06cc\u0633",
    "\u0628\u0631\u0631\u0648\u06cc\u0633\u0631\u0648\u0631\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646",
    "\u0645\u062a\u06462",
    "\u0644\u0648\u06af\u06482",
    "\u0635\u0631\u0641\u0627\u062f\u0633\u062a\u0631\u0633\u06cc\u062e\u0648\u0627\u0646\u062f\u0646",
    "\u0645\u062a\u06463",
    "\u0644\u0648\u06af\u06483",
    "\u0628\u062f\u0648\u0646\u0646\u06cc\u0627\u0632\u0628\u0647\u062f\u0633\u062a\u0631\u0633\u06cc\u0646\u0648\u0634\u062a\u0646",
    "\u0645\u062a\u06464",
    "\u0644\u0648\u06af\u06484",
    "\u0627\u0646\u062c\u0627\u0645\u0627\u0645\u0648\u0631\u0631\u0627\u0647\u0627\u0646\u062f\u0627\u0632\u06cc\u062a\u0648\u0633\u0637\u0633\u06cc\u0646\u0627\u067e\u0633",
    "\u0645\u062a\u06465",
    "\u0644\u0648\u06af\u06485",
    "\u0627\u062a\u0635\u0627\u0644\u0628\u0627Api",
    "\u0645\u062a\u0646",
    "\u0644\u0648\u06af\u0648",
    "\u0645\u0637\u0627\u0644\u0639\u0647\u0628\u06cc\u0634\u062a\u0631"
  ],

  تطابقباتمامHisها: [
    "\u062a\u0637\u0627\u0628\u0642\u0628\u0627\u062a\u0645\u0627\u0645His\u0647\u0627"
  ],

  اتصالبهدیتابیس: [
    "\u0627\u062a\u0635\u0627\u0644\u0628\u0647\u062f\u06cc\u062a\u0627\u0628\u06cc\u0633"
  ],

  بررویسروربیمارستان: [
    "\u0628\u0631\u0631\u0648\u06cc\u0633\u0631\u0648\u0631\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646",
    "\u0645\u062a\u06462",
    "\u0644\u0648\u06af\u06482"
  ],

  متن2: ["\u0645\u062a\u06462"],
  لوگو2: ["\u0644\u0648\u06af\u06482"],
  صرفادسترسیخواندن: [
    "\u0635\u0631\u0641\u0627\u062f\u0633\u062a\u0631\u0633\u06cc\u062e\u0648\u0627\u0646\u062f\u0646",
    "\u0645\u062a\u06463",
    "\u0644\u0648\u06af\u06483"
  ],

  متن3: ["\u0645\u062a\u06463"],
  لوگو3: ["\u0644\u0648\u06af\u06483"],
  بدوننیازبهدسترسینوشتن: [
    "\u0628\u062f\u0648\u0646\u0646\u06cc\u0627\u0632\u0628\u0647\u062f\u0633\u062a\u0631\u0633\u06cc\u0646\u0648\u0634\u062a\u0646",
    "\u0645\u062a\u06464",
    "\u0644\u0648\u06af\u06484"
  ],

  متن4: ["\u0645\u062a\u06464"],
  لوگو4: ["\u0644\u0648\u06af\u06484"],
  انجامامورراهاندازیتوسطسیناپس: [
    "\u0627\u0646\u062c\u0627\u0645\u0627\u0645\u0648\u0631\u0631\u0627\u0647\u0627\u0646\u062f\u0627\u0632\u06cc\u062a\u0648\u0633\u0637\u0633\u06cc\u0646\u0627\u067e\u0633",
    "\u0645\u062a\u06465",
    "\u0644\u0648\u06af\u06485"
  ],

  متن5: ["\u0645\u062a\u06465"],
  لوگو5: ["\u0644\u0648\u06af\u06485"],
  اتصالباApi: [
    "\u0627\u062a\u0635\u0627\u0644\u0628\u0627Api",
    "\u0645\u062a\u0646",
    "\u0644\u0648\u06af\u0648"
  ],

  متن: ["\u0645\u062a\u0646"],
  لوگو: ["\u0644\u0648\u06af\u0648"],
  مطالعهبیشتر: [
    "\u0645\u0637\u0627\u0644\u0639\u0647\u0628\u06cc\u0634\u062a\u0631"
  ],

  حسابکاربریبسازید: [
    "\u062d\u0633\u0627\u0628\u06a9\u0627\u0631\u0628\u0631\u06cc\u0628\u0633\u0627\u0632\u06cc\u062f",
    "\u0628\u0647\u0635\u0648\u0631\u062a\u06cc\u06a9\u062c\u0627",
    "\u0646\u0642\u0634\u0647\u0627\u06cc\u0645\u062a\u0646\u0648\u0639",
    "\u0633\u0637\u0648\u062d\u062f\u0633\u062a\u0631\u0633\u06cc",
    "\u0628\u062f\u0648\u0646\u0646\u06cc\u0627\u0632\u0628\u0647\u0622\u0645\u0648\u0632\u0634\u0628\u0647\u06a9\u0627\u0631\u0628\u0631\u0627\u0646",
    "\u0645\u062a\u06466",
    "\u0644\u0648\u06af\u06486"
  ],

  بهصورتیکجا: ["\u0628\u0647\u0635\u0648\u0631\u062a\u06cc\u06a9\u062c\u0627"],
  نقشهایمتنوع: [
    "\u0646\u0642\u0634\u0647\u0627\u06cc\u0645\u062a\u0646\u0648\u0639"
  ],

  سطوحدسترسی: ["\u0633\u0637\u0648\u062d\u062f\u0633\u062a\u0631\u0633\u06cc"],
  بدوننیازبهآموزشبهکاربران: [
    "\u0628\u062f\u0648\u0646\u0646\u06cc\u0627\u0632\u0628\u0647\u0622\u0645\u0648\u0632\u0634\u0628\u0647\u06a9\u0627\u0631\u0628\u0631\u0627\u0646",
    "\u0645\u062a\u06466",
    "\u0644\u0648\u06af\u06486"
  ],

  متن6: ["\u0645\u062a\u06466"],
  لوگو6: ["\u0644\u0648\u06af\u06486"],
  همیشهوهمهجابیمارستاندرجیبشما: [
    "\u0647\u0645\u06cc\u0634\u0647\u0648\u0647\u0645\u0647\u062c\u0627\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646\u062f\u0631\u062c\u06cc\u0628\u0634\u0645\u0627"
  ],

  textInput: ["textInput"],
  footerSection: ["footerSection"],
  clarity: ["clarity"],
  googleAnalytics: ["googleAnalytics"],
  modalInlabLogin: [
    "modalInlabLogin",
    "getHospitalsLinks",
    "hospitalsList",
    "hospitalName",
    "searchbarWard2"
  ],

  getHospitalsLinks: ["getHospitalsLinks", "hospitalsList", "hospitalName"],
  hospitalsList: ["hospitalsList", "hospitalName"],
  hospitalName: ["hospitalName"],
  searchbarWard2: ["searchbarWard2"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicHomepage__ArgProps,
          internalVariantPropNames: PlasmicHomepage__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicHomepage__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "pageContent") {
    func.displayName = "PlasmicHomepage";
  } else {
    func.displayName = `PlasmicHomepage.${nodeName}`;
  }
  return func;
}

export const PlasmicHomepage = Object.assign(
  // Top-level PlasmicHomepage renders the root element
  makeNodeComponent("pageContent"),
  {
    // Helper components rendering sub-elements
    header: makeNodeComponent("header"),
    تستکنيدDemo: makeNodeComponent(
      "\u062a\u0633\u062a\u06a9\u0646\u064a\u062fDemo"
    ),
    headerButton: makeNodeComponent("headerButton"),
    menuTitle: makeNodeComponent("menuTitle"),
    mobileMenu: makeNodeComponent("mobileMenu"),
    menu: makeNodeComponent("menu"),
    تستکنيدDemo3: makeNodeComponent(
      "\u062a\u0633\u062a\u06a9\u0646\u064a\u062fDemo3"
    ),
    تستکنيدDemo2: makeNodeComponent(
      "\u062a\u0633\u062a\u06a9\u0646\u064a\u062fDemo2"
    ),
    ورودکاربران: makeNodeComponent(
      "\u0648\u0631\u0648\u062f\u06a9\u0627\u0631\u0628\u0631\u0627\u0646"
    ),
    ديوارعشق: makeNodeComponent(
      "\u062f\u064a\u0648\u0627\u0631\u0639\u0634\u0642"
    ),
    قيمتگذاري: makeNodeComponent(
      "\u0642\u064a\u0645\u062a\u06af\u0630\u0627\u0631\u064a"
    ),
    سوالاتشايع: makeNodeComponent(
      "\u0633\u0648\u0627\u0644\u0627\u062a\u0634\u0627\u064a\u0639"
    ),
    دربارهسیناپس: makeNodeComponent(
      "\u062f\u0631\u0628\u0627\u0631\u0647\u0633\u06cc\u0646\u0627\u067e\u0633"
    ),
    section1Header: makeNodeComponent("section1Header"),
    content: makeNodeComponent("content"),
    actionButton: makeNodeComponent("actionButton"),
    درخواستراهاندازی2: makeNodeComponent(
      "\u062f\u0631\u062e\u0648\u0627\u0633\u062a\u0631\u0627\u0647\u0627\u0646\u062f\u0627\u0632\u06cc2"
    ),
    section2Gifs: makeNodeComponent("section2Gifs"),
    gifLab: makeNodeComponent("gifLab"),
    actionButtons6: makeNodeComponent("actionButtons6"),
    درخواستراهاندازی8: makeNodeComponent(
      "\u062f\u0631\u062e\u0648\u0627\u0633\u062a\u0631\u0627\u0647\u0627\u0646\u062f\u0627\u0632\u06cc8"
    ),
    textBoxes: makeNodeComponent("textBoxes"),
    title: makeNodeComponent("title"),
    description: makeNodeComponent("description"),
    actionButtons4: makeNodeComponent("actionButtons4"),
    درخواستراهاندازی6: makeNodeComponent(
      "\u062f\u0631\u062e\u0648\u0627\u0633\u062a\u0631\u0627\u0647\u0627\u0646\u062f\u0627\u0632\u06cc6"
    ),
    gifRadio: makeNodeComponent("gifRadio"),
    textBoxes2: makeNodeComponent("textBoxes2"),
    title2: makeNodeComponent("title2"),
    description2: makeNodeComponent("description2"),
    actionButtons: makeNodeComponent("actionButtons"),
    درخواستراهاندازی3: makeNodeComponent(
      "\u062f\u0631\u062e\u0648\u0627\u0633\u062a\u0631\u0627\u0647\u0627\u0646\u062f\u0627\u0632\u06cc3"
    ),
    actionButtons5: makeNodeComponent("actionButtons5"),
    درخواستراهاندازی7: makeNodeComponent(
      "\u062f\u0631\u062e\u0648\u0627\u0633\u062a\u0631\u0627\u0647\u0627\u0646\u062f\u0627\u0632\u06cc7"
    ),
    section3Userbase: makeNodeComponent("section3Userbase"),
    statistics: makeNodeComponent("statistics"),
    customersStack: makeNodeComponent("customersStack"),
    customersList: makeNodeComponent("customersList"),
    مرکزطبیکودکان: makeNodeComponent(
      "\u0645\u0631\u06a9\u0632\u0637\u0628\u06cc\u06a9\u0648\u062f\u06a9\u0627\u0646"
    ),
    سینا: makeNodeComponent("\u0633\u06cc\u0646\u0627"),
    امامخمینی: makeNodeComponent(
      "\u0627\u0645\u0627\u0645\u062e\u0645\u06cc\u0646\u06cc"
    ),
    مرکزقلب: makeNodeComponent("\u0645\u0631\u06a9\u0632\u0642\u0644\u0628"),
    شریعتی: makeNodeComponent("\u0634\u0631\u06cc\u0639\u062a\u06cc"),
    امیراعلم: makeNodeComponent(
      "\u0627\u0645\u06cc\u0631\u0627\u0639\u0644\u0645"
    ),
    آرش: makeNodeComponent("\u0622\u0631\u0634"),
    فارابی: makeNodeComponent("\u0641\u0627\u0631\u0627\u0628\u06cc"),
    رازی: makeNodeComponent("\u0631\u0627\u0632\u06cc"),
    بهارلو: makeNodeComponent("\u0628\u0647\u0627\u0631\u0644\u0648"),
    روزبه: makeNodeComponent("\u0631\u0648\u0632\u0628\u0647"),
    ضیائیان: makeNodeComponent("\u0636\u06cc\u0627\u0626\u06cc\u0627\u0646"),
    بهرامی: makeNodeComponent("\u0628\u0647\u0631\u0627\u0645\u06cc"),
    حکیم: makeNodeComponent("\u062d\u06a9\u06cc\u0645"),
    یاس: makeNodeComponent("\u06cc\u0627\u0633"),
    section4WallOfLove: makeNodeComponent("section4WallOfLove"),
    loveContents: makeNodeComponent("loveContents"),
    loveMessage: makeNodeComponent("loveMessage"),
    message: makeNodeComponent("message"),
    profileBox: makeNodeComponent("profileBox"),
    nameRole: makeNodeComponent("nameRole"),
    _name: makeNodeComponent("name"),
    roleTitle: makeNodeComponent("roleTitle"),
    image: makeNodeComponent("image"),
    section5Price: makeNodeComponent("section5Price"),
    پلنهایقیمت: makeNodeComponent(
      "\u067e\u0644\u0646\u0647\u0627\u06cc\u0642\u06cc\u0645\u062a"
    ),
    کمتراز150: makeNodeComponent("\u06a9\u0645\u062a\u0631\u0627\u0632150"),
    قیمت: makeNodeComponent("\u0642\u06cc\u0645\u062a"),
    feature: makeNodeComponent("feature"),
    _150300: makeNodeComponent("_150300"),
    قیمت2: makeNodeComponent("\u0642\u06cc\u0645\u062a2"),
    feature2: makeNodeComponent("feature2"),
    verticalStack: makeNodeComponent("verticalStack"),
    verticalStack2: makeNodeComponent("verticalStack2"),
    بیشتراز300: makeNodeComponent(
      "\u0628\u06cc\u0634\u062a\u0631\u0627\u0632300"
    ),
    قیمت3: makeNodeComponent("\u0642\u06cc\u0645\u062a3"),
    feature3: makeNodeComponent("feature3"),
    actionButtons2: makeNodeComponent("actionButtons2"),
    درخواستراهاندازی4: makeNodeComponent(
      "\u062f\u0631\u062e\u0648\u0627\u0633\u062a\u0631\u0627\u0647\u0627\u0646\u062f\u0627\u0632\u06cc4"
    ),
    section6Faq: makeNodeComponent("section6Faq"),
    faqCategories: makeNodeComponent("faqCategories"),
    _3پرداختوهزینه: makeNodeComponent(
      "_3\u067e\u0631\u062f\u0627\u062e\u062a\u0648\u0647\u0632\u06cc\u0646\u0647"
    ),
    _2امنیتنرمافزار: makeNodeComponent(
      "_2\u0627\u0645\u0646\u06cc\u062a\u0646\u0631\u0645\u0627\u0641\u0632\u0627\u0631"
    ),
    _4پشتيباني: makeNodeComponent(
      "_4\u067e\u0634\u062a\u064a\u0628\u0627\u0646\u064a"
    ),
    _3مجوزهاوتاييديهها: makeNodeComponent(
      "_3\u0645\u062c\u0648\u0632\u0647\u0627\u0648\u062a\u0627\u064a\u064a\u062f\u064a\u0647\u0647\u0627"
    ),
    _1نصبوراهاندازي: makeNodeComponent(
      "_1\u0646\u0635\u0628\u0648\u0631\u0627\u0647\u0627\u0646\u062f\u0627\u0632\u064a"
    ),
    faqنصبوراهاندازي: makeNodeComponent(
      "faq\u0646\u0635\u0628\u0648\u0631\u0627\u0647\u0627\u0646\u062f\u0627\u0632\u064a"
    ),
    q: makeNodeComponent("q"),
    q2: makeNodeComponent("q2"),
    q3: makeNodeComponent("q3"),
    q4: makeNodeComponent("q4"),
    q5: makeNodeComponent("q5"),
    q6: makeNodeComponent("q6"),
    faqامنیتنرمافزار: makeNodeComponent(
      "faq\u0627\u0645\u0646\u06cc\u062a\u0646\u0631\u0645\u0627\u0641\u0632\u0627\u0631"
    ),
    q122: makeNodeComponent("q122"),
    q12: makeNodeComponent("q12"),
    faqپرداختوهزینه: makeNodeComponent(
      "faq\u067e\u0631\u062f\u0627\u062e\u062a\u0648\u0647\u0632\u06cc\u0646\u0647"
    ),
    q13: makeNodeComponent("q13"),
    q23: makeNodeComponent("q23"),
    q33: makeNodeComponent("q33"),
    actionButtons3: makeNodeComponent("actionButtons3"),
    درخواستراهاندازی5: makeNodeComponent(
      "\u062f\u0631\u062e\u0648\u0627\u0633\u062a\u0631\u0627\u0647\u0627\u0646\u062f\u0627\u0632\u06cc5"
    ),
    flow: makeNodeComponent("flow"),
    اتصالبهHis: makeNodeComponent(
      "\u0627\u062a\u0635\u0627\u0644\u0628\u0647His"
    ),
    تطابقباتمامHisها: makeNodeComponent(
      "\u062a\u0637\u0627\u0628\u0642\u0628\u0627\u062a\u0645\u0627\u0645His\u0647\u0627"
    ),
    اتصالبهدیتابیس: makeNodeComponent(
      "\u0627\u062a\u0635\u0627\u0644\u0628\u0647\u062f\u06cc\u062a\u0627\u0628\u06cc\u0633"
    ),
    بررویسروربیمارستان: makeNodeComponent(
      "\u0628\u0631\u0631\u0648\u06cc\u0633\u0631\u0648\u0631\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646"
    ),
    متن2: makeNodeComponent("\u0645\u062a\u06462"),
    لوگو2: makeNodeComponent("\u0644\u0648\u06af\u06482"),
    صرفادسترسیخواندن: makeNodeComponent(
      "\u0635\u0631\u0641\u0627\u062f\u0633\u062a\u0631\u0633\u06cc\u062e\u0648\u0627\u0646\u062f\u0646"
    ),
    متن3: makeNodeComponent("\u0645\u062a\u06463"),
    لوگو3: makeNodeComponent("\u0644\u0648\u06af\u06483"),
    بدوننیازبهدسترسینوشتن: makeNodeComponent(
      "\u0628\u062f\u0648\u0646\u0646\u06cc\u0627\u0632\u0628\u0647\u062f\u0633\u062a\u0631\u0633\u06cc\u0646\u0648\u0634\u062a\u0646"
    ),
    متن4: makeNodeComponent("\u0645\u062a\u06464"),
    لوگو4: makeNodeComponent("\u0644\u0648\u06af\u06484"),
    انجامامورراهاندازیتوسطسیناپس: makeNodeComponent(
      "\u0627\u0646\u062c\u0627\u0645\u0627\u0645\u0648\u0631\u0631\u0627\u0647\u0627\u0646\u062f\u0627\u0632\u06cc\u062a\u0648\u0633\u0637\u0633\u06cc\u0646\u0627\u067e\u0633"
    ),
    متن5: makeNodeComponent("\u0645\u062a\u06465"),
    لوگو5: makeNodeComponent("\u0644\u0648\u06af\u06485"),
    اتصالباApi: makeNodeComponent(
      "\u0627\u062a\u0635\u0627\u0644\u0628\u0627Api"
    ),
    متن: makeNodeComponent("\u0645\u062a\u0646"),
    لوگو: makeNodeComponent("\u0644\u0648\u06af\u0648"),
    مطالعهبیشتر: makeNodeComponent(
      "\u0645\u0637\u0627\u0644\u0639\u0647\u0628\u06cc\u0634\u062a\u0631"
    ),
    حسابکاربریبسازید: makeNodeComponent(
      "\u062d\u0633\u0627\u0628\u06a9\u0627\u0631\u0628\u0631\u06cc\u0628\u0633\u0627\u0632\u06cc\u062f"
    ),
    بهصورتیکجا: makeNodeComponent(
      "\u0628\u0647\u0635\u0648\u0631\u062a\u06cc\u06a9\u062c\u0627"
    ),
    نقشهایمتنوع: makeNodeComponent(
      "\u0646\u0642\u0634\u0647\u0627\u06cc\u0645\u062a\u0646\u0648\u0639"
    ),
    سطوحدسترسی: makeNodeComponent(
      "\u0633\u0637\u0648\u062d\u062f\u0633\u062a\u0631\u0633\u06cc"
    ),
    بدوننیازبهآموزشبهکاربران: makeNodeComponent(
      "\u0628\u062f\u0648\u0646\u0646\u06cc\u0627\u0632\u0628\u0647\u0622\u0645\u0648\u0632\u0634\u0628\u0647\u06a9\u0627\u0631\u0628\u0631\u0627\u0646"
    ),
    متن6: makeNodeComponent("\u0645\u062a\u06466"),
    لوگو6: makeNodeComponent("\u0644\u0648\u06af\u06486"),
    همیشهوهمهجابیمارستاندرجیبشما: makeNodeComponent(
      "\u0647\u0645\u06cc\u0634\u0647\u0648\u0647\u0645\u0647\u062c\u0627\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646\u062f\u0631\u062c\u06cc\u0628\u0634\u0645\u0627"
    ),
    textInput: makeNodeComponent("textInput"),
    footerSection: makeNodeComponent("footerSection"),
    clarity: makeNodeComponent("clarity"),
    googleAnalytics: makeNodeComponent("googleAnalytics"),
    modalInlabLogin: makeNodeComponent("modalInlabLogin"),
    getHospitalsLinks: makeNodeComponent("getHospitalsLinks"),
    hospitalsList: makeNodeComponent("hospitalsList"),
    hospitalName: makeNodeComponent("hospitalName"),
    searchbarWard2: makeNodeComponent("searchbarWard2"),
    // Metadata about props expected for PlasmicHomepage
    internalVariantProps: PlasmicHomepage__VariantProps,
    internalArgProps: PlasmicHomepage__ArgProps,
    // Page metadata
    pageMetadata: {
      title: "SynApps",
      description:
        "SynApps\nInlab\nسیناپس\nاینلب\nHospital\nبیمارستان\npatient\nبیمار\nLaboratory data\nنتایج آزمایشات\nپرونده الکترونیک\nپرونده بالینی\nHIS\nEHR",
      ogImageSrc:
        "https://site-assets.plasmic.app/dc36b0d8cfcba6194c4aef42e77cefd7.png",
      canonical: ""
    }
  }
);

export default PlasmicHomepage;
/* prettier-ignore-end */
